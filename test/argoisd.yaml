---
# Source: isdargo/charts/minio/templates/post-install-prometheus-metrics-serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: argoisd-minio-update-prometheus-secret
  labels:
    app: minio-update-prometheus-secret
    chart: minio-8.0.9
    release: argoisd
    heritage: Helm
---
# Source: isdargo/charts/minio/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "argoisd-minio"
  namespace: "argoisd"
  labels:
    app: minio
    chart: minio-8.0.9
    release: "argoisd"
---
# Source: isdargo/templates/forwarder/create-controller-secret.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: create-controller-secret
---
# Source: isdargo/charts/minio/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: argoisd-minio
  labels:
    app: minio
    chart: minio-8.0.9
    release: argoisd
    heritage: Helm
type: Opaque
data:
  accesskey: "c3Bpbm5ha2VyYWRtaW4="
  secretkey: "c3Bpbm5ha2VyYWRtaW4="
---
# Source: isdargo/charts/openldap/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: openldap
  labels:
    app: openldap
    chart: openldap-1.2.3
    release: argoisd
    heritage: Helm
type: Opaque
data:
  LDAP_ADMIN_PASSWORD: "b3BzbXhhZG1pbjEyMw=="
  LDAP_CONFIG_PASSWORD: "b3BzbXhjb25maWcxMjM="
---
# Source: isdargo/charts/redis/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: argoisd-redis
  labels:
    app: redis
    chart: redis-10.5.3
    release: "argoisd"
    heritage: "Helm"
type: Opaque
data:
  redis-password: "cGFzc3dvcmQ="
---
# Source: isdargo/templates/carina/carina-manager-secret.yaml
apiVersion: v1
stringData:
  carina-manager.yaml: |    
    httpListenPort: 8091
    rbac:
      httpListenPort: 8092
    controller:
      url: 'https://opsmx-controller-controller1:9003'
      caPath: /app/secrets/controller-ca.crt
      certificatePath: /app/secrets/controller-control/tls.crt
      keyPath: /app/secrets/controller-control/tls.key
      updateFrequencySeconds: 30
    platformServiceUrl: http://oes-platform:8095
    databases:
      audit:
        type: postgresql
        connectString: host=oes-db  user='postgres' password='networks123' database=auditdb
      platform:
        type: postgresql
        connectString: host=oes-db user='postgres' password='networks123' database=platformdb
    
kind: Secret
metadata:
  labels:
    app: oes
    component: carina
    heritage: "Helm"
    release: "argoisd"
    chart: "isdargo-4.1.7"
  name: oes-carina-config
---
# Source: isdargo/templates/forwarder/opsmx-agent-controller-auth-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: opsmx-agent-controller-auth
type: Opaque
data:
  authtoken: WDkwbHFTSlpSRHg3ZmtUM3dEWmY=
---
# Source: isdargo/templates/oes-audit/oes-audit-client-secret.yaml
apiVersion: v1
stringData:
  audit-local.yml: |
    spring:
      datasource:
        url: jdbc:postgresql://oes-db:5432/auditdb
        username: 'postgres'
        password: 'networks123'
    logging:
      level:
        com.opsmx.auditclientservice: INFO
    standardErrorCodes:
      filePath: /opsmx/conf/standard-error-code.csv
    oes:
      admin:
        user: admin
    feign:
      client:
        platformservice:
          name: platformservice
          url: http://oes-platform:8095
        visibilityservice:
          name: visibilityservice
          url: http://oes-visibility:8096
    
    insights:
      scheduler:
        enable: false
        fixedDelay:
          in:
            milliseconds: 120000
        initialDelay:
          in:
            milliseconds: 300000
    scheduler:
      threads: 16
    
kind: Secret
metadata:
  labels:
    app: oes
    component: auditclient
    heritage: "Helm"
    release: "argoisd"
    chart: "isdargo-4.1.7"
  name: oes-audit-client-config
---
# Source: isdargo/templates/oes-audit/oes-audit-service-secret.yaml
apiVersion: v1
stringData:
  audit-local.yml: |
    spring:
      datasource:
        url: jdbc:postgresql://oes-db:5432/auditdb
        username: 'postgres'
        password: 'networks123'
    logging:
        level:
          com.opsmx.auditservice: INFO
    message-broker:
      enabled: true
      username: 'rabbitmq'
      password: 'Networks123'
      host: rabbitmq-service
      port: 5672
      endpoint:
        name: rabbitmq
    standardErrorCodes:
      filePath: /opsmx/conf/standard-error-code.csv
    feign:
      client:
        platformservice:
          name: platformservice
          url: http://oes-platform:8095
        auditclientservice:
          name: auditclientservice
          url: http://oes-audit-client:8098
        oes:
          url: http://oes-sapor:8085
        autopilot:
          url: http://oes-autopilot:8090
        visibilityservice:
          url: http://oes-visibility:8096
        dashboard:
          url: http://oes-dashboard:8094
    
kind: Secret
metadata:
  labels:
    app: oes
    component: auditservice
    heritage: "Helm"
    release: "argoisd"
    chart: "isdargo-4.1.7"
  name: oes-audit-service-config
---
# Source: isdargo/templates/oes-autopilot/oes-autopilot-secret.yaml
apiVersion: v1
stringData:
  autopilot.properties: |
    # Enable Build Analysis
    build.analysis=false
    # DB configuration
    secret.datasource.username=postgres
    secret.datasource.password=networks123
    secret.datasource.url=jdbc:postgresql://oes-db:5432/opsmx
    secret.platform.url=http://oes-platform:8095
    secret.ds.protocol=http://
    secret.ds.url=localhost:5005
    secret.dashboard.url=http://oes-dashboard:8094
    server.host.dns.name=https://argoisd.hyd-dev.opsmx.net/ui
    gate.url=https://argoisd.hyd-dev.opsmx.net/gate
    
    #datascience configuration
    oes.datascience.baseUrl=http://oes-datascience:5005
    #build.analysis=false
    ds.async.flow=true
    
    
    #audit services
    auditservice.enabled=true
    auditservice.name=auditservice
    auditservice.url=http://oes-audit-service:8097
    auditclientservice.name=auditclientservice
    auditclientservice.url=http://oes-audit-client:8098
    
    # Standard-error-path
    standardErrorCodes.filePath=/opsmx/conf/standard-error-code.csv
    
    #Enable this feature flag when any elasticsearch, prometheus or splunk accounts are configured through agent.
    #When monitoringtool.accountconfig.agent.enabled flag is true copy the 3 certificate files generated by the agent in the autopilot pod.
    monitoringtool.accountconfig.agent.enabled=true
    monitoringtool.accountconfig.agent.caCertfile=/opsmx/conf/controller/ca.crt
    monitoringtool.accountconfig.agent.certFile=/opsmx/conf/controller/tls.crt
    monitoringtool.accountconfig.agent.keyFile=/opsmx/conf/controller/tls.key
    
    #storage configuration
    storage.type =db_storage
    #storage.type =object_storage
    #storage.endpoint=http://argoisd-minio:9000
    #storage.accesskey = spinnakeradmin
    #storage.secretkey = spinnakeradmin
    #storage.region= us-east-1
    ds.seperate.service=true
    
    
    # Logging Level
    logging.level.com.opsmx.analytics=ERROR
    datasource.secretManagement.source = db
    
kind: Secret
metadata:
  name: oes-autopilot-config
  labels:
    app: oes
    component: autopilot
    heritage: "Helm"
    release: "argoisd"
    chart: "isdargo-4.1.7"
---
# Source: isdargo/templates/oes-datascience/oes-datascience-secret.yaml
apiVersion: v1
stringData:
  app-config.yml: |
    # Enable Build Analysis
    APP:
       ENVIRONMENT: dev
       DEBUG: True
       # Only accept True or False
       BIND: 0.0.0.0:5005
       WORKERS: 1
       PROTOCOL: http://
       TIMEOUT: 3600
       CELERY_ENABLED: True
       # Only accept True or False
    
    OBJECT_STORAGE:
          ENDPOINT: http://argoisd-minio:9000
          BUCKET_NAME: autopilot
    POSTGRES:
          USERNAME: 'postgres'
          PASSWORD: 'networks123'
          HOST: oes-db
          PORT: 5432
          DB: autopilotqueue
    
    RABBITMQ:
          USERNAME: 'rabbitmq'
          PASSWORD: 'Networks123'
          HOST: rabbitmq-service
          PORT: 5672
    
  minio-credentials: |
    [default]
        aws_access_key_id = spinnakeradmin
        aws_secret_access_key = spinnakeradmin
    
    
kind: Secret
metadata:
  labels:
    app: oes
    component: datascience
  name: oes-datascience-config
---
# Source: isdargo/templates/oes-gate/oes-gate-configmap.yaml
apiVersion: v1
stringData:
  gate.yml: |
    retrofit:
      connectTimeout: 60000
      readTimeout: 60000
      callTimeout: 60000
      writeTimeout: 60000
      retryOnConnectionFailure: true
    services:
      opsmx:
        baseUrl: http://oes-sapor:8085
        enabled: true
      autopilot:
        baseUrl: http://oes-autopilot:8090
        enabled: true
      platform:
        baseUrl: http://oes-platform:8095
        userGroupApiPath: /platformservice/v1/users/{username}/usergroups/importAndCache
        enabled: true
      dashboard:
        baseUrl: http://oes-dashboard:8094
        enabled: true
      visibility:
        baseUrl: http://oes-visibility:8096
        enabled: true
      auditservice:
         baseUrl: "http://oes-audit-service:8097"
         enabled: true
      auditclient:
         baseUrl: "http://oes-audit-client:8098"
         enabled: true
      oesui:
        externalUrl: /ui/
      user: {}
    cors:
      allowed-origins-pattern: ^https?://(?:localhost|argoisd.hyd-dev.opsmx.net|opsmx.com)(?::[1-9]\d*)?/?
    ldap:
      enabled: true
      url: ldap://openldap:389
      managerDn: cn=admin,dc=example,dc=org
      managerPassword: opsmxadmin123
      groupSearchBase: ou=groups,dc=example,dc=org
      groupSearchFilter: member={0}
      groupRoleAttributes: cn
      userDnPattern: cn={0},dc=example,dc=org
    
    file:
      enabled: false
      url: /platformservice/v1/users/authenticate
    authn:
      mode: session
    google: {}
    redis:
      connection: redis://:password@argoisd-redis-master:6379
    server:
      session:
        timeoutInSeconds: 7200
      tomcat:
        httpsServerPort: X-Forwarded-Port
        internalProxies: .*
        protocolHeader: X-Forwarded-Proto
        remoteIpHeader: X-Forwarded-For
    gate:
      installation:
        mode: oes
    rbac:
      feature:
        application:
          enabled: false
    
    security:
      contentSecurityPolicy: "object-src 'none'; script-src 'unsafe-eval' 'unsafe-inline' https: http:;"
    
    allowUnauthenticatedAccess:
      agentAPI: false
      webhooks: true
    
    jwt:
      secret: YXJnb19uYXZpcw==
      token:
        durationInSeconds: 36000
    vela:
      bounceUrl: https://isd.argoisdvela.hyd-dev.opsmx.net/bounce
    
    logging:
      level:
        com.netflix.spinnaker.gate.security: INFO
        org.springframework.security: INFO
        org.springframework.web: INFO
        #com.netflix.spinnaker.gate.security: DEBUG
        #org.springframework.security: DEBUG
        #org.springframework.web: DEBUG
    
kind: Secret
metadata:
  name: oes-gate-config
  labels:
    app: oes
    component: gate
    heritage: "Helm"
    release: "argoisd"
    chart: "isdargo-4.1.7"
---
# Source: isdargo/templates/oes-gate/oes-gate-secret.yaml
apiVersion: v1
stringData:
  GATEURL: testing
  GATEUSER: admin
  GATEPASS: saporadmin
kind: Secret
metadata:
  name: oes-gate-secret
---
# Source: isdargo/templates/oes-platform/oes-platform-secret.yaml
apiVersion: v1
stringData:
  platform-local.yml: |
    
    spring:
      datasource:
        url: jdbc:postgresql://oes-db:5432/platformdb
        username: 'postgres'
        password: 'networks123'
    ldap.managerPassword: 'opsmxadmin123'
    redis:
        connection: redis://:password@argoisd-redis-master:6379
    #datasource.url: jdbc:postgresql://oes-db:5432/visibilitydb
    #postgres.password: 'networks123'
    #postgres.username: 'postgres'
    
    datasource:
      secretManagement:
        source: db
    rbacEnabled: true
    supportedFeatures:
      - deployment_verification
      - sapor
      - visibility
    userGroup:
      superAdminGroups: admin
    dashboard:
      scheduler:
        enable: false
        fixedDelay:
          in:
            milliseconds: 120000
        initialDelay:
          in:
            milliseconds: 300000
        workerThreads: 50
    user:
      source: ldap
    ldap:
      enabled: true
      url: ldap://openldap:389
      managerDn: cn=admin,dc=example,dc=org
      groupSearchBase: ou=groups,dc=example,dc=org
      groupSearchFilter: member={0}
      groupRoleAttributes: cn
      userDnPattern: cn={0},dc=example,dc=org
    
    oes:
      sapor:
        url: http://oes-sapor:8085
      autopilot:
        url: http://oes-autopilot:8090
      dashboard:
        url: http://oes-dashboard:8094
      visibility:
        url: http://oes-visibility:8096
      auditclient:
        url: http://oes-audit-client:8098
      policyGate:
        url: "https://argoisd.hyd-dev.opsmx.net/gate"
        path: /v1/data/
      ui:
      # Ex: "https://oes-poc.dev.opsmx.org/"
        url: "https://argoisd.hyd-dev.opsmx.net/ui"
      gate:
        url: http://oes-gate:8084
      carinamanager:
        url: "http://oes-carina"
        managerport: 8091
        rbacport: 8092
      approvalGate:
        apiUrl: https://argoisd.hyd-dev.opsmx.net/gate/visibilityservice/v5/approvalGates/{id}/trigger
    
      verificationGate:
        apiUrl: https://argoisd.hyd-dev.opsmx.net/gate/autopilot/api/v3/registerCanary
    
    logging:
      level:
        com.opsmx.platformservice: INFO
        org.springframework.security: INFO
        org.springframework.web: INFO
    
    standardErrorCodes:
      filePath: /opsmx/conf/standard-error-code.csv
    argoRollout:
      appAutoCreation: false
    
kind: Secret
metadata:
  name: oes-platform-config
  labels:
    app: oes
    component: platform
    heritage: "Helm"
    release: "argoisd"
    chart: "isdargo-4.1.7"
---
# Source: isdargo/templates/oes-sapor/oes-sapor-secret.yaml
apiVersion: v1
stringData:
  application.yml: |
    spring:
      datasource:
        url: jdbc:postgresql://oes-db:5432/oesdb
        username: 'postgres'
        password: 'networks123'
    
    message-broker:
      enabled: true
      username: 'rabbitmq'
      password: 'Networks123'
      host: rabbitmq-service
      port: 5672
      endpoint:
        name: rabbitmq
    
    standardErrorCodes:
      filePath: /opsmx/conf/standard-error-code.csv
    
    argo:
      manifest:
        newArgoAgentTemplate: newargoagentmanifest.template
        newArgoAgentWithoutUrlTemplate: newargoagentmanifestwithouturl.template
        existingArgoAgentTemplate: existingargoagentmanifest.template
        existingArgoAgentWithoutUrlTemplate: existingargoagentmanifestwithouturl.template
        newArgoAgentWithoutRolloutsTemplate: newargoagentwithoutrollouts.template
        newArgoAgentWithoutRolloutsWithoutUrlTemplate: newargoagentwithoutrolloutswithouturl.template
    
    secretManagement:
      source:
        config: db
      encryption: true
    oes:
      rbac:
        enabled: true
      admin:
        user: admin
      platform:
        url: http://oes-platform:8095
      visibility:
        url: http://oes-visibility:8096
      auditservice:
        enabled: true
        url: "http://oes-audit-service:8097"
      dashboard:
        url: http://oes-dashboard:8094
      commongateurl: https://argoisd.hyd-dev.opsmx.net/gate
    spinnaker:
      encrypt:
        enabled: false
      sync:
        permission:
          enabled: true
    
    datasources:
      platform: true
    
    pipeline-promotion:
      github:
    
        enabled: true
    
        username:  git/stash_username
        token: git/stash_token
        branch: master
        cloneUrl: https://git/stash_username:git/stash_token@github.com/OpsMx/standard-gitops-repo
      bitbucket:
    
        enabled: false
    
        username:  git/stash_username
        token: git/stash_token
        branch: master
        cloneUrl: https://git/stash_username:git/stash_token@github.com/OpsMx//standard-gitops-repo
      amazonS3:
    
        enabled: false
    
        accessKeyId: AWS_ACCESS_KEY_ID
        secretAccessKey: AWS_SECRET_ACCESS_KEY
        region: regionofbucket
        bucketName: bucket name.e.g-testbucket
    
    ## Set the below field to true if agent for kubernetes
    kubernetes:
      kinds:
      omitKinds:
      - podPreset
      agent:
        enabled: true
        serverInternalHostName: opsmx-controller-controller1
        serverPort: 9003
        caCertfile: /opt/opsmx/controller/ca.crt
        certFile: /opt/opsmx/controller/cert/tls.crt
        keyFile: /opt/opsmx/controller/cert/tls.key
        image: quay.io/opsmxpublic/agent-client:v4.2.5
      template:
        path: /opt/opsmx/controller
        kubectlTemplateFileName: kubeconfig.template
        manifestTemplateFileName: deploy-agent.template
    
    
  client.p12: |
    
kind: Secret
metadata:
  name: oes-sapor-config
  labels:
    app: oes
    component: sapor
    heritage: "Helm"
    release: "argoisd"
    chart: "isdargo-4.1.7"
---
# Source: isdargo/templates/oes-visibility/oes-visibility-secret.yaml
apiVersion: v1
stringData:
  visibility-local.yml: |
    spring:
      datasource:
        url: jdbc:postgresql://oes-db:5432/visibilitydb
        username: 'postgres'
        password: 'networks123'
        #sslmode: require
      visiblity:
        connectors:
          configured: JIRA,GIT,AUTOPILOT,SONARQUBE,JENKINS,AQUAWAVE
      logging:
        level:
          io:
            swagger:
              models:
                parameters:
                  AbstractSerializableParameter: ERROR
    
    auditservice:
      enabled: true
      name: auditservice
      url: "http://oes-audit-service:8097"
    auditclientservice:
      name: auditclientservice
      url: "http://oes-audit-client:8098"
    
    management:
      endpoints:
        web:
          base-path: /mgmt
          exposure:
            include: health,info,metrics,prometheus
      endpoint:
        health:
          show-details: always
          show-components: always
      health:
        elasticsearch:
          enabled: false
        ldap:
          enabled: false
    
    ui:
      approval:
        url: https://argoisd.hyd-dev.opsmx.net/ui/application/visibility/{applicationId}/{serviceId}/{approvalGateId}
    
    gate:
      url: http://oes-gate:8084
    
    jira:
      api:
        url: /rest/api/2/search
      navigate:
        url: hosturl/browse/{issue_Id}
    
    git:
      apiurl: /repos/{account}/{repo}/commits/{commitId}
      userurl: /user
      navigate.url: https://github.com/{account}/{repo_name}/commit/{commit_Id}
    
    jenkins:
      api:
        url: /job/{jobname}/{buildId}/api/json
      navigate:
        url: hosturl/job/{jobname}/{buildId}
    
    sonar:
      navigate:
        Url: hosturl/dashboard?id={projectKey}
    
    aquawave:
      api:
        url: https://api.aquasec.com/v2/images/{id}
      navigate:
        url: https://cloud.aquasec.com/vs/#/images/{id}
    
    autopilot:
      api:
        url: http://oes-autopilot:8090
    
    platform:
      service:
        url: http://oes-platform:8095
    
    datasource:
      secretManagement:
        source: db
    
    standardErrorCodes:
      filePath: /opsmx/conf/standard-error-code.csv
    
    
kind: Secret
metadata:
  name: oes-visibility-config
  labels:
    app: oes
    component: visibility
    heritage: "Helm"
    release: "argoisd"
    chart: "isdargo-4.1.7"
---
# Source: isdargo/templates/secrets/bootstrap-secret.yaml
apiVersion: v1
stringData:
  bootstrap.yml: |-
    spring:
      cloud:
        vault:
          enterprise: false
          namespace: admin/isd-platform
          uri: https://server.vaultint.opsmx.net
          token: 123132
          enabled: false
          kv:
            enabled: false
          generic:
            enabled: false
    jasypt:
      encryptor:
        password: Q7udUkHPuA3VnNlOtksSgQ
    datasource:
      secretManagement:
        source: db
kind: Secret
metadata:
  name: bootstrap
  labels:
    heritage: "Helm"
    release: "argoisd"
    chart: "isdargo-4.1.7"
---
# Source: isdargo/templates/secrets/sapor-bootstrap-secret.yaml
apiVersion: v1
stringData:
  bootstrap.yml: |-
    spring:
      cloud:
        config:
          server:
            composite:
              - type: native
                search-locations: ${user.home}/config
        vault:
          enterprise: false
          namespace: admin/isd-platform
          uri: https://server.vaultint.opsmx.net
          token: 123132
          enabled: false
          kv:
            enabled: false
          generic:
            enabled: false
    jasypt:
      encryptor:
        password: Q7udUkHPuA3VnNlOtksSgQ
kind: Secret
metadata:
  name: sapor-bootstrap
  labels:
    heritage: "Helm"
    release: "argoisd"
    chart: "isdargo-4.1.7"
---
# Source: isdargo/charts/minio/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: argoisd-minio
  labels:
    app: minio
    chart: minio-8.0.9
    release: argoisd
    heritage: Helm
data:
  initialize: |-
    #!/bin/sh
    set -e ; # Have script exit in the event of a failed command.
    MC_CONFIG_DIR="/etc/minio/mc/"
    MC="/usr/bin/mc --insecure --config-dir ${MC_CONFIG_DIR}"
    
    # connectToMinio
    # Use a check-sleep-check loop to wait for Minio service to be available
    connectToMinio() {
      SCHEME=$1
      ATTEMPTS=0 ; LIMIT=29 ; # Allow 30 attempts
      set -e ; # fail if we can't read the keys.
      ACCESS=$(cat /config/accesskey) ; SECRET=$(cat /config/secretkey) ;
      set +e ; # The connections to minio are allowed to fail.
      echo "Connecting to Minio server: $SCHEME://$MINIO_ENDPOINT:$MINIO_PORT" ;
      MC_COMMAND="${MC} config host add myminio $SCHEME://$MINIO_ENDPOINT:$MINIO_PORT $ACCESS $SECRET" ;
      $MC_COMMAND ;
      STATUS=$? ;
      until [ $STATUS = 0 ]
      do
        ATTEMPTS=`expr $ATTEMPTS + 1` ;
        echo \"Failed attempts: $ATTEMPTS\" ;
        if [ $ATTEMPTS -gt $LIMIT ]; then
          exit 1 ;
        fi ;
        sleep 2 ; # 1 second intervals between attempts
        $MC_COMMAND ;
        STATUS=$? ;
      done ;
      set -e ; # reset `e` as active
      return 0
    }
    
    # checkBucketExists ($bucket)
    # Check if the bucket exists, by using the exit code of `mc ls`
    checkBucketExists() {
      BUCKET=$1
      CMD=$(${MC} ls myminio/$BUCKET > /dev/null 2>&1)
      return $?
    }
    
    # createBucket ($bucket, $policy, $purge)
    # Ensure bucket exists, purging if asked to
    createBucket() {
      BUCKET=$1
      POLICY=$2
      PURGE=$3
      VERSIONING=$4
    
      # Purge the bucket, if set & exists
      # Since PURGE is user input, check explicitly for `true`
      if [ $PURGE = true ]; then
        if checkBucketExists $BUCKET ; then
          echo "Purging bucket '$BUCKET'."
          set +e ; # don't exit if this fails
          ${MC} rm -r --force myminio/$BUCKET
          set -e ; # reset `e` as active
        else
          echo "Bucket '$BUCKET' does not exist, skipping purge."
        fi
      fi
    
      # Create the bucket if it does not exist
      if ! checkBucketExists $BUCKET ; then
        echo "Creating bucket '$BUCKET'"
        ${MC} mb myminio/$BUCKET
      else
        echo "Bucket '$BUCKET' already exists."
      fi
    
    
      # set versioning for bucket
      if [ ! -z $VERSIONING ] ; then
        if [ $VERSIONING = true ] ; then
            echo "Enabling versioning for '$BUCKET'"
            ${MC} version enable myminio/$BUCKET
        elif [ $VERSIONING = false ] ; then
            echo "Suspending versioning for '$BUCKET'"
            ${MC} version suspend myminio/$BUCKET
        fi
      else
          echo "Bucket '$BUCKET' versioning unchanged."
      fi
    
      # At this point, the bucket should exist, skip checking for existence
      # Set policy on the bucket
      echo "Setting policy of bucket '$BUCKET' to '$POLICY'."
      ${MC} policy set $POLICY myminio/$BUCKET
    }
    
    # Try connecting to Minio instance
    scheme=http
    connectToMinio $scheme
    # Create the bucket
    
    # Create the buckets
    createBucket spinnaker none false 
    createBucket autopilot none false
---
# Source: isdargo/charts/openldap/templates/configmap-customldif.yaml
#
# A ConfigMap spec for openldap slapd that map directly to files under
# /container/service/slapd/assets/config/bootstrap/ldif/custom
#
apiVersion: v1
kind: ConfigMap
metadata:
  name: openldap-customldif
  labels:
    app: openldap
    chart: openldap-1.2.3
    release: argoisd
    heritage: Helm
data:
  01-memberof.ldif: |-
    dn: cn=module,cn=config
    cn: module
    objectClass: olcModuleList
    olcModuleLoad: memberof.la
    olcModulePath: /usr/lib/ldap
    
    dn: olcOverlay={0}memberof,olcDatabase={1}hdb,cn=config
    objectClass: olcConfig
    objectClass: olcMemberOf
    objectClass: olcOverlayConfig
    objectClass: top
    olcOverlay: memberof
    olcMemberOfDangling: ignore
    olcMemberOfRefInt: TRUE
    olcMemberOfGroupOC: groupOfNames
    olcMemberOfMemberAD: member
    olcMemberOfMemberOfAD: memberOf
  02-refint1.ldif: |-
    dn: cn=module{1},cn=config
    changetype: modify
    add: olcmoduleload
    olcmoduleload: refint.la
  03-refint2.ldif: |-
    dn: olcOverlay={1}refint,olcDatabase={1}hdb,cn=config
    objectClass: olcConfig
    objectClass: olcOverlayConfig
    objectClass: olcRefintConfig
    objectClass: top
    olcOverlay: {1}refint
    olcRefintAttribute: memberof member manager owner
  04-add_ou.ldif: |-
    dn: ou=groups,dc=example,dc=org
    objectClass: organizationalUnit
    ou: Groups
  05-admin.ldif: |-
    dn: cn=admin,ou=groups,dc=example,dc=org
    objectClass: groupofnames
    cn: admin
    description: read write and execute group
    member: cn=admin,dc=example,dc=org
  06-developer.ldif: |-
    dn: cn=developers,ou=groups,dc=example,dc=org
    objectClass: groupofnames
    cn: developers
    description: read only users
    member: cn=admin,dc=example,dc=org
    member: cn=developer,dc=example,dc=org
  07-qa.ldif: |-
    dn: cn=QA,ou=groups,dc=example,dc=org
    objectClass: groupofnames
    cn: QA
    description: read only users
    member: cn=admin,dc=example,dc=org
    member: cn=qa,dc=example,dc=org
  08-manager.ldif: |-
    dn: cn=managers,ou=groups,dc=example,dc=org
    objectClass: groupofnames
    cn: managers
    description: read and execute group
    member: cn=admin,dc=example,dc=org
    member: cn=manager,dc=example,dc=org
  09-IT-manager.ldif: |-
    dn: cn=ITManagers,ou=groups,dc=example,dc=org
    objectClass: groupofnames
    cn: ITManagers
    description: read and execute group
    member: cn=admin,dc=example,dc=org
    member: cn=ITManager,dc=example,dc=org
  10-users.ldif: |-
    dn: cn=user1,dc=example,dc=org
    objectClass: simpleSecurityObject
    objectClass: organizationalRole
    cn: user1
    userpassword: {SSHA}Y9L4AsYL16WLK10qDZ62pTScFnaWb0nz
    
    dn: cn=user2,dc=example,dc=org
    objectClass: simpleSecurityObject
    objectClass: organizationalRole
    cn: user2
    userpassword: {SSHA}DasTBI0eut1F83Bh1F1HXmDT8juJj3pY
    
    dn: cn=user3,dc=example,dc=org
    objectClass: simpleSecurityObject
    objectClass: organizationalRole
    cn: user3
    userpassword: {SSHA}Qu1FW7BdLMndwM/Gf+zc3a8VIMAymbuv
    
    dn: cn=developers,ou=groups,dc=example,dc=org
    changetype: modify
    add: member
    member: cn=user1,dc=example,dc=org
    member: cn=user3,dc=example,dc=org
    
    dn: cn=QA,ou=groups,dc=example,dc=org
    changetype: modify
    add: member
    member: cn=user2,dc=example,dc=org
    member: cn=user3,dc=example,dc=org
---
# Source: isdargo/charts/openldap/templates/configmap-env.yaml
#
# A ConfigMap spec for openldap slapd that map directly to env variables in the Pod.
# List of environment variables supported is from the docker image:
# https://github.com/osixia/docker-openldap#beginner-guide
# Note that passwords are defined as secrets
#
apiVersion: v1
kind: ConfigMap
metadata:
  name: openldap-env
  labels:
    app: openldap
    chart: openldap-1.2.3
    release: argoisd
    heritage: Helm
data:
  LDAP_BACKEND: hdb
  LDAP_DOMAIN: example.org
  LDAP_ORGANISATION: Example Inc.
  LDAP_REMOVE_CONFIG_AFTER_SETUP: "false"
  LDAP_TLS: "true"
  LDAP_TLS_ENFORCE: "false"
---
# Source: isdargo/charts/redis/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: argoisd-redis
  labels:
    app: redis
    chart: redis-10.5.3
    heritage: Helm
    release: argoisd
data:
  redis.conf: |-
    # User-supplied configuration:
    # Enable AOF https://redis.io/topics/persistence#append-only-file
    appendonly no
    # Disable RDB persistence, AOF persistence already enabled.
    save 60 1000
  master.conf: |-
    dir /data
    rename-command FLUSHDB ""
    rename-command FLUSHALL ""
  replica.conf: |-
    dir /data
    slave-read-only yes
    rename-command FLUSHDB ""
    rename-command FLUSHALL ""
---
# Source: isdargo/charts/redis/templates/health-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: argoisd-redis-health
  labels:
    app: redis
    chart: redis-10.5.3
    heritage: Helm
    release: argoisd
data:
  ping_readiness_local.sh: |-
    response=$(
      timeout -s 9 $1 \
      redis-cli \
        -a $REDIS_PASSWORD --no-auth-warning \
        -h localhost \
        -p $REDIS_PORT \
        ping
    )
    if [ "$response" != "PONG" ]; then
      echo "$response"
      exit 1
    fi
  ping_liveness_local.sh: |-
    response=$(
      timeout -s 9 $1 \
      redis-cli \
        -a $REDIS_PASSWORD --no-auth-warning \
        -h localhost \
        -p $REDIS_PORT \
        ping
    )
    if [ "$response" != "PONG" ] && [ "$response" != "LOADING Redis is loading the dataset in memory" ]; then
      echo "$response"
      exit 1
    fi
  ping_readiness_master.sh: |-
    response=$(
      timeout -s 9 $1 \
      redis-cli \
        -a $REDIS_MASTER_PASSWORD --no-auth-warning \
        -h $REDIS_MASTER_HOST \
        -p $REDIS_MASTER_PORT_NUMBER \
        ping
    )
    if [ "$response" != "PONG" ]; then
      echo "$response"
      exit 1
    fi
  ping_liveness_master.sh: |-
    response=$(
      timeout -s 9 $1 \
      redis-cli \
        -a $REDIS_MASTER_PASSWORD --no-auth-warning \
        -h $REDIS_MASTER_HOST \
        -p $REDIS_MASTER_PORT_NUMBER \
        ping
    )
    if [ "$response" != "PONG" ] && [ "$response" != "LOADING Redis is loading the dataset in memory" ]; then
      echo "$response"
      exit 1
    fi
  ping_readiness_local_and_master.sh: |-
    script_dir="$(dirname "$0")"
    exit_status=0
    "$script_dir/ping_readiness_local.sh" $1 || exit_status=$?
    "$script_dir/ping_readiness_master.sh" $1 || exit_status=$?
    exit $exit_status
  ping_liveness_local_and_master.sh: |-
    script_dir="$(dirname "$0")"
    exit_status=0
    "$script_dir/ping_liveness_local.sh" $1 || exit_status=$?
    "$script_dir/ping_liveness_master.sh" $1 || exit_status=$?
    exit $exit_status
---
# Source: isdargo/templates/configmaps/isd-feature-flag-config.yml
apiVersion: v1
data:
  feature.yml: |
     feature:
       auth-provider:
         flag: false
         jira: OP-18050
kind: ConfigMap
metadata:
  labels:
    app: oes
  name: isd-feature-flag-config
---
# Source: isdargo/templates/configmaps/standard-error-codes.yaml
apiVersion: v1
data:
  standard-error-codes.csv: |-
    standardErrorCodesMapping.ISD-IsEmpty-400-01 = ISD-IsEmpty-400-01 : {0} - {1} is empty. Please provide the {1}.
    standardErrorCodesMapping.ISD-IsNull-400-02 = ISD-IsNull-400-02 : {0} - {1} is null. Please provide the {1}.
    standardErrorCodesMapping.ISD-MustBeAlphanumericName-400-03 = ISD-MustBeAlphanumericName-400-03 : {0} - {1} should be alphanumeric without any special characters !
    standardErrorCodesMapping.ISD-ExceedsMaxStringLength-400-04 = ISD-ExceedsMaxStringLength-400-04 : {0} - {1} should not have more than {2} characters.
    standardErrorCodesMapping.ISD-NotConfigured-400-05 = ISD-NotConfigured-400-05 : {0} - {1} is not configured. Please configure the {1} !
    standardErrorCodesMapping.ISD-PolicyNotProvided-400-06 = ISD-PolicyNotProvided-400-06 : {0} - Policies are mandatory for automated approval gate.
    standardErrorCodesMapping.ISD-EmptyKeyOrValueInJson-400-07 = ISD-EmptyKeyOrValueInJson-400-07 : {0} - {1} is missing in json !
    standardErrorCodesMapping.ISD-UnableToParseJSON-400-08 = ISD-UnableToParseJSON-400-08 : {0} - Unable to parse Json. Please provide a valid json with required data !
    standardErrorCodesMapping.ISD-MustBeANumber-400-09 = ISD-MustBeANumber-400-09 : {0} - {1} must be a number : {2}
    standardErrorCodesMapping.ISD-InvalidURL-400-10 = ISD-InvalidURL-400-10 : {0} - {1} is invalid - {2}
    standardErrorCodesMapping.ISD-BadRequest-400-11 = ISD-BadRequest-400-11 : {0} - {1} {2}
    standardErrorCodesMapping.ISD-EmptyKeyOrValue-400-12 = ISD-EmptyKeyOrValue-400-12 : {0} - {1} is missing !
    standardErrorCodesMapping.ISD-Unauthorized-401-01 = ISD-Unauthorized-401-01 : {0} - {1} not authorized. {2}.
    standardErrorCodesMapping.ISD-Unauthorized-401-02 = ISD-Unauthorized-401-02 : {0} - User group not found for user : {1}.
    standardErrorCodesMapping.ISD-NotAdmin-401-03 = ISD-NotAdmin-401-03 : {0} - {1} is not an admin !
    standardErrorCodesMapping.ISD-Forbidden-403-01 = ISD-Forbidden-403-01 : {0} - {1} doesn't have {2} permission on this feature: {3}
    standardErrorCodesMapping.ISD-Forbidden-403-02 = ISD-Forbidden-403-02 : {0} - {1} is invalid.
    standardErrorCodesMapping.ISD-Forbidden-403-03 = ISD-Forbidden-403-03 : {0} - {1} : {2}.
    standardErrorCodesMapping.ISD-Forbidden-403-04 = ISD-Forbidden-403-04 : {0} - {1} namespace is not accessible for given kubeconfig account {2}.
    standardErrorCodesMapping.ISD-IsNotFound-404-01 = ISD-IsNotFound-404-01 : {0} - {1} not found : {2}
    standardErrorCodesMapping.ISD-NoData-404-02 = ISD-NoData-404-02 : {0} - No data found for {1}
    standardErrorCodesMapping.ISD-DoesNotExist-404-03 = ISD-DoesNotExist-404-03 : {0} - {1} does not exist {2}.
    standardErrorCodesMapping.ISD-IsNotFound-404-04 = ISD-IsNotFound-404-04 : {0} - {1} not found {2}.
    standardErrorCodesMapping.ISD-Unavailable-404-05 = ISD-Unavailable-404-05 : {0} - {1} is unavailable.
    standardErrorCodesMapping.ISD-AlreadyExists-409-01 = ISD-AlreadyExists-409-01 : {0} - {1} already exists: {2}
    standardErrorCodesMapping.ISD-Disconnected-409-02 = ISD-Disconnected-409-02 : {0} - {1}
    standardErrorCodesMapping.ISD-FailedToDelete-412-01 = ISD-FailedToDelete-412-01 : {0} - Unable to delete {1} as {1} is already in use !
    standardErrorCodesMapping.ISD-FailedToDeletePolicy-412-02 = ISD-FailedToDeletePolicy-412-02 : {0} - Unable to delete policy as it is already in use for {1} gate !
    standardErrorCodesMapping.ISD-FailedToUpdate-412-03 = ISD-FailedToUpdate-412-03 : {0} - Unable to update {1} as {1} is already in use !
    standardErrorCodesMapping.ISD-InvalidURL-422-01 = ISD-InvalidURL-422-01 : {0} - The requested {1} URL is invalid !
    standardErrorCodesMapping.ISD-ConnectionOrAuthenticationFailed-422-02 = ISD-ConnectionOrAuthenticationFailed-422-02 : {0} - {1} connection or authentication failed : HTTP status {2}
    standardErrorCodesMapping.ISD-InvalidCredentials-422-03 = ISD-InvalidCredentials-422-03 : {0} - {1} credentials are invalid !
    standardErrorCodesMapping.ISD-InvalidEndpoint-422-04 = ISD-InvalidEndpoint-422-04 : {0} - {1} endpoint is invalid !
    standardErrorCodesMapping.ISD-InvalidEndpointOrCredentials-422-05 = ISD-InvalidEndpointOrCredentials-422-05 : {0} - {1} endpoint or credentials are invalid !
    standardErrorCodesMapping.ISD-UsernameOrPasswordIsBlank-422-06 = ISD-UsernameOrPasswordIsBlank-422-06 : {0} - {1} is blank but {2} is supplied. Both must be present or blank.
    standardErrorCodesMapping.ISD-UnknownDatasource-422-07 = ISD-UnknownDatasource-422-07 : {0} - Unknown datasource or datasource is currently not supported : {1}
    standardErrorCodesMapping.ISD-InvalidProvider-422-08 = ISD-InvalidProvider-422-08 : {0} - {1} provider is invalid !
    standardErrorCodesMapping.ISD-InvalidPath-422-09 = ISD-InvalidPath-422-09 : {0} - {1} path is invalid !
    standardErrorCodesMapping.ISD-UnableToGenerate-422-10 = ISD-UnableToGenerate-422-10 : {0} - Unable to generate {1} !
    standardErrorCodesMapping.ISD-FailedToCreate-422-11 = ISD-FailedToCreate-422-11 : {0} - Failed to create {1}.
    standardErrorCodesMapping.ISD-EndpointIsBlank-422-12 = ISD-EndpointIsBlank-422-12 : {0} - {1} endpoint is blank. {2} must be blank.
    standardErrorCodesMapping.ISD-ConnectionOrAuthenticationFailed-422-13 = ISD-ConnectionOrAuthenticationFailed-422-13 : {0} - {1} connection or authentication failed.
    standardErrorCodesMapping.ISD-FailedToUpdate-422-14 = ISD-FailedToUpdate-422-14 : {0} - Failed to Update {1}.
    standardErrorCodesMapping.ISD-FailedToDelete-422-15 = ISD-FailedToDelete-422-15 : {0} - Failed to Delete {1}.
    standardErrorCodesMapping.ISD-DoesNotMatch-422-16 = ISD-DoesNotMatch-422-16 : {0} - {1} does not match {2}.
    standardErrorCodesMapping.ISD-DoesNotExist-422-17 =  ISD-DoesNotExist-422-17 : {0} - {1} does not exist {2}.
    standardErrorCodesMapping.ISD-DoesNotSupport-422-18 = ISD-DoesNotSupport-422-18 : {0} - {1} does not support {2}.
    standardErrorCodesMapping.ISD-UnableToVerify-422-19 = ISD-UnableToVerify-422-19 : {0} - Unable to verify {1}.
    standardErrorCodesMapping.ISD-FailedToInitialize-422-20 = ISD-FailedToInitialize-422-20 : {0} - Failed to initialize {1}.
    standardErrorCodesMapping.ISD-DoesNotHave-422-21 = ISD-DoesNotHave-422-21 : {0} - {1} does not have {2}.
    standardErrorCodesMapping.ISD-UnableToAddStage-424-01 = ISD-UnableToAddStage-424-01 : {0} - Unable to add stage in {1} !
    standardErrorCodesMapping.ISD-UnableToDelete-424-02 = ISD-UnableToDelete-424-02 : {0} - Unable to delete {1} while analysis is under process !
    standardErrorCodesMapping.ISD-UnableToDelete-424-03 = ISD-UnableToDelete-424-03 : {0} - Unable to delete {1} as already in use {2}
    standardErrorCodesMapping.ISD-UnableToDelete-424-04 = ISD-UnableToDelete-424-04 : {0} - Unable to delete {1} as it is involved in multi-service analysis !
    standardErrorCodesMapping.ISD-ShouldBeNumber-500-01 = ISD-ShouldBeNumber-500-01 : {0} - {1} should be an number !
    standardErrorCodesMapping.ISD-ShouldBePositiveNumber-500-02 = ISD-ShouldBePositiveNumber-500-02 : {0} - {1} should be an positive number !
    standardErrorCodesMapping.ISD-UnableToFetch-500-03 = ISD-UnableToFetch-500-03 : {0} - Unable to fetch {1} from database. Please try after some time !
    standardErrorCodesMapping.ISD-UnableToCreate-500-04 = ISD-UnableToCreate-500-04 : {0} - Unable to create {1} !
    standardErrorCodesMapping.ISD-UnableToDelete-500-05 = ISD-UnableToDelete-500-05 : {0} - Unable to delete {1} !
    standardErrorCodesMapping.ISD-UnableToUpdate-500-06 = ISD-UnableToUpdate-500-06 : {0} - Unable to update {1} !
    standardErrorCodesMapping.ISD-UnableToValidate-500-07 = ISD-UnableToValidate-500-07 : {0} - Unable to validate {1} !
    standardErrorCodesMapping.ISD-ServiceUnavailable-503-01 = ISD-ServiceUnavailable-503-01 : {0} - {1} : {2}
    standardErrorCodesMapping.ISD-ServiceUnavailable-503-02 = ISD-ServiceUnavailable-503-02 : {0} - {1}
    standardErrorCodesMapping.ISD-UnKnowHostException-503-03 = ISD-UnKnowHostException-503-03 : {0} - {1}
kind: ConfigMap
metadata:
  labels:
    app: oes
  name: standard-error-codes-config
---
# Source: isdargo/templates/forwarder/oes-forwarder-config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: opsmx-controller-controller1
  labels:
    agent.opsmx.com/name: controller1
    agent.opsmx.com/role: controller
    heritage: "Helm"
    release: "argoisd"
    chart: "isdargo-4.1.7"
data:
  configFile: |
    serviceHostname: opsmx-controller-controller1
    agentHostname: argoisdcontroller.hyd-dev.opsmx.net
    remoteCommandHostname: argoisdcontroller.hyd-dev.opsmx.net
    controlHostname: opsmx-controller-controller1
    #agentAdvertisePort: "443"
    serverNames:
      - agent-grpc
    serviceAuth:
      currentKeyName: "public.pem"
      headerMutationKeyName: "public.pem"
    agentAuth:
      currentKeyName: authtoken
      secretsPath: /app/secrets/agentAuth
    services:
      outgoingServices:
        - name: front50
          type: front50
          enabled: true
          config:
            url: http://spin-front50:8080
        - name: fiat
          type: fiat
          enabled: true
          config:
            url: http://spin-fiat:7003
      incomingServices:  # This part is to be automated in the next version. For now, the agent MUST be called opsmx-agent
        - name: agent-clouddriver
          serviceType: clouddriver
          port: 7002
          useHTTP: true
          destination: opsmx-agent
          destinationService: agent-clouddriver
---
# Source: isdargo/templates/oes-dashboard/oes-dashboard-configmap.yaml
apiVersion: v1
data:
  dashboard-local.yml: |
    opsmx:
      dashboard:
        installation:
          mode: OEA-AP
    standardErrorCodes:
      filePath: /opsmx/conf/standard-error-code.csv
    platformservice.url: http://oes-platform:8095
    autopilot.url: http://oes-autopilot:8090
    oes.sapor.url: http://oes-sapor:8085
    visibilityservice.url: http://oes-visibility:8096
    auditclientservice:
      url: "http://oes-audit-client:8098"
    gateservice:
      url: "http://oes-gate:8084"
    app:
      sync:
        enabled: true
    spinnakerLink: /deck/
    
kind: ConfigMap
metadata:
  name: oes-dashboard-config
  labels:
    app: oes
    component: dashboard
    heritage: "Helm"
    release: "argoisd"
    chart: "isdargo-4.1.7"
---
# Source: isdargo/templates/oes-ui/oes-ui-configmap.yaml
apiVersion: v1
data:
  app-config.json: |
    {
        "endPointUrl": "/gate/",
        "setApplicationInterval": 300000,
        "triggerPipeline": false,
        "cdTool": "Argo"
    }
  help-text.json: |
    {
      "POLICY_LISTING": {
        "HEADER": "Policies not found!",
        "BODY": "<div><p>Policy Management feature allows you to create policies to set guardrails for safe and fine grained controls in CI/CD pipelines.</p> <p>Static Policy lets users validate the conditions when creating a pipeline, whereas Runtime Policy enables users for automated decision making during pipeline execution.</p> <p>A policy defines a set of conditions that must be met.</p> <p>As an example, a policy could be created to define a blackout window period (or a moratorium period) for performing production deployments. A moratorium period defines the time period within which no production deployments should be performed. Any deployment to the production environment during this period will automatically be rejected/stopped.</p> <p>ISD uses Open Policy Engine(OPA) for policy definition & execution. OPA is a open source, general-purpose policy engine that unifies policy enforcement across the stack. It uses a high-level declarative language called Rego that lets you specify policy as code.</p> <p>Click on <b>New Policy</b> button to create a new policy.</p></div>"
      },
      "AGENT_LISTING": {
        "HEADER": "No Agents found!",
        "BODY": "<div><p>The Agent allows ISD to reach through firewalls in a secure manner, allowing access to private Kubernetes clusters as well as reach internal services such as Jenkins and Artifactory. The agent is typically used with OpsMx's SaaS ISD offering, where OpsMx hosts the ISD Platform, but services used by the platform are within a secure area owned by the customer. One of the core advantages of using an agent is that the credentials do not need to be disclosed to anyone i.e. credentials remain with-in the cluster where deployment is  done.</p> <p>The Agent is a two part system: a <b>Controller</b> runs near ISD, and the <b>Agent</b> runs in the target secure cluster. The Agent is configured to communicate with specific services (Kubernetes, Jenkins etc) within a customer's security domain, while the Controller is in ISD's domain.</p> <p>The Agent is deployed using a manifest generated by ISD. This manifest has per-installation credentials to authenticate to the controller, controller address etc. Services are configured in the Agent by the customer. URL endpoints, CD account names and credentials are provided to the agent using a service configuration. The credentials never leave the agent's security domain.</p> <p>Click on <b>New Agent</b> to create the Agent for your environment."
      },
      "AGENT_CREATION": {
        "HEADER": "Agent",
        "BODY": "<div><p>Adding an agent involves the following steps:</p><ul class='helpTextUI'><li>Enter the details (name, cluster and description) and click save</li> <li>Click <b>Download Manifest</b> which appears after save</li><li>In the remote Kubernetes cluster, create service configmap in the default namespace. Examples are available here: https://github.com/OpsMx/standard-gitops-repo/tree/master/SAMPLES/agent-config</li> <li>Apply the downloaded manifest in the default namespace using <b>kubectl apply -f <downloaded file></b> ; Note that the agent should be able to reach the Load Balancer configured for the agent-grpc service,</li><li>Check the Setup->Agents screen for the agent connection status</li></ul></div>",
        "AGENT_NAME": {
          "TOOLTIP": "Name of the agent with which it will referred to",
          "VALIDATION_MESSAGE": {
            "required": "Agent Name cannot be empty",
            "cannotContainSpace": "Agent Name cannot contain space",
            "noSpecialCharacters": "Allowed special character is '-'",
            "startingFromNumber": "Agent Name should not start with number",
            "agentNameExist": "Agent Name already exists"
          }
        },
        "CLUSTER_NAME": {
          "TOOLTIP": "Name of the remote cluster on which agent will be installed on",
          "VALIDATION_MESSAGE": {
            "required": "Cluster Name cannot be empty",
            "cannotContainSpace": "Cluster Name cannot contain space",
            "noSpecialCharacters": "Allowed special character is '-'",
            "startingFromNumber": "Cluster Name should not start with number"
          }
        },
        "DESCRIPTION": {
          "TOOLTIP": "Short description about the agent",
          "VALIDATION_MESSAGE": {}
        },
        "CONNECT_TO_SPINNAKER": {
          "TOOLTIP": "The spinnaker instance you want to associate this account to",
          "VALIDATION_MESSAGE": {
            "required": "Please select Spinnaker"
          }
        }
      },
      "ANALYSIS_TEMPLATE_LISTING": {
        "HEADER": "No Templates found!",
        "BODY": "<div>This page allows you to manage log and metric templates used in ISD automated analysis. <br>A template is a blueprint of all information needed to run analysis, such as monitoring provider accounts, algorithms, log topics, metrics and any other custom business logic. <br> <br>ISD supports two modes of templates <br> - Gitops mode templates. Define templates as ConfigMaps and refer them in the provider section of your Argo Rollouts Analysis Template.  <br> - Template creation in ISD UI. Create templates here and refer them in the provider section of your Argo Rollouts Analysis Template. <br> For more information refer <a href='https://docs.opsmx.com/opsmx-intelligent-software-delivery-isd-platform-argo/user-guide/delivery-verification/templates' target='_blank'>Templates - OpsMx</a></div>"
      },
      "CLOUDPROVIDER_LISTING": {
        "HEADER": "No Cloud Targets found!",
        "BODY": "<div><p>Cloud Targets are integrations to Cloud platforms you deploy your applications to.</p> <p>In this section, you’ll register credentials for your Cloud platforms. Those credentials are known as Accounts. ISD allows you to create & manage Accounts for different Cloud Providers such as AWS, GCP, Kubernetes, etc.</p> <p>When CD instance (Spinnaker) is configured for <b>Direct Sync</b>, <b>New Accounts</b> button will not be visible.</p> <p><b>New Accounts</b> button will be enabled when CD instance (Spinnaker) is configured to use External Accounts in <b>Setup->CD Integration</b>.Click on <b>New Accounts</b> button to create an account for your cloud provider. You can create multiple accounts for the same provider.</p> <p>Click on <b>Sync Accounts</b> button to sync Cloud target accounts with CD Tool</p></div>"
      },
      "CLOUDPROVIDER_CREATION": {
        "HEADER": "Cloud Target",
        "BODY": "<p>In this page, you can create & manage Cloud Target Accounts</p>",
        "AGENT_NAME": {
          "TOOLTIP": "",
          "VALIDATION_MESSAGE": {
            "required": "Agent name cannot be empty",
            "cannotContainSpace": "Agent name cannot contain space",
            "noSpecialCharacters": "Allowed special character are ',-'"
          }
        },
        "CLOUD_PROVIDER": {
          "TOOLTIP": "The Cloud Target type for which you want to add the account",
          "VALIDATION_MESSAGE": {
            "required": "Please select Cloud Target"
          }
        },
        "SPINNAKER": {
          "TOOLTIP": "The Spinnaker instance with which this account would be tied to",
          "VALIDATION_MESSAGE": {
            "required": "Please select Spinnaker"
          }
        },
        "ENVIRONMENT": {
          "TOOLTIP": "The environment name for the account. Many accounts can share the same environment (e.g. dev, test, prod)",
          "VALIDATION_MESSAGE": {
            "required": "Please select Environment"
          }
        },
        "CUSTOM_ENVIRONMENT": {
          "TOOLTIP": "",
          "VALIDATION_MESSAGE": {
            "noSpecialCharacters": "Environment Name cannot contain special characters",
            "cannotContainSpace": "Environment Name cannot contain space",
            "required": "Environment Name cannot be empty",
            "startingFromNumber": "Environment Name cannot start with number",
            "maxlength": "Environment name should not have more than 63 characters!",
            "exists": "Environment name already exists"
          }
        },
        "ACCOUNT_NAME": {
          "TOOLTIP": "Name of the account to operate on",
          "VALIDATION_MESSAGE": {
            "required": "Account name cannot be empty",
            "cannotContainSpace": "Account name cannot contain space",
            "noSpecialCharacters": "Allowed special character is '-'"
          }
        },
        "NAMESPACE": {
          "TOOLTIP": "A list of namespaces this Spinnaker account can deploy to and will cache (namespaces should be 'coma' separated ex: default,dev",
          "VALIDATION_MESSAGE": {
            "required": "Namespace cannot be empty",
            "cannotContainSpace": "Namespace cannot contain space",
            "noSpecialCharacters": "Special characters not allowed except ',-'"
          }
        },
        "UPLOAD_KUBECONFIG_FILE": {
          "TOOLTIP": "The path to your kubeconfig file. By default, it will be under the Spinnaker user’s home directory in the typical .kube/config location.",
          "VALIDATION_MESSAGE": {
            "required": "File cannot be empty"
          }
        },
        "READ": {
          "TOOLTIP": "A user must have at least one of these roles in order to view this account’s cloud resources.",
          "VALIDATION_MESSAGE": {
            "cannotContainSpace": "Read Permissions cannot contain space"
          }
        },
        "WRITE": {
          "TOOLTIP": "A user must have at least one of these roles in order to make changes to this account’s cloud resources",
          "VALIDATION_MESSAGE": {
            "cannotContainSpace": "Write Permissions cannot contain space"
          }
        },
        "EXECUTE": {
          "TOOLTIP": "",
          "VALIDATION_MESSAGE": {
            "cannotContainSpace": "Execute Permissions cannot contain space"
          }
        },
        "ACCOUNT_ID": {
          "TOOLTIP": "Your AWS account ID to manage. Refer http://docs.aws.amazon.com/IAM/latest/UserGuide/console_account-alias.html for more information",
          "VALIDATION_MESSAGE": {
            "required": "Account Id cannot be empty",
            "cannotContainSpace": "Account Id cannot contain space"
          }
        },
        "ROLE": {
          "TOOLTIP": "If set, Halyard will configure a credentials provider that uses AWS Security Token Service to assume the specified role",
          "VALIDATION_MESSAGE": {
            "required": "Role cannot be empty",
            "cannotContainSpace": "Role cannot contain space"
          }
        },
        "REGIONS": {
          "TOOLTIP": "The AWS regions this Spinnaker account will manage",
          "VALIDATION_MESSAGE": {
            "required": "Region cannot be empty",
            "cannotContainSpace": "Region cannot contain space"
          }
        },
        "PRIMARY_ACCOUNT": {
          "TOOLTIP": "Whether this account is the primary account? If yes then provide the access & secret key details.",
          "VALIDATION_MESSAGE": {}
        },
        "ACCESS_KEY": {
          "TOOLTIP": "The default access key used to communicate with AWS",
          "VALIDATION_MESSAGE": {
            "required": "Access key cannot be empty"
          }
        },
        "ACCESS_KEY_BAKERY": {
          "TOOLTIP": "The default access key used for AWS bakery configuration",
          "VALIDATION_MESSAGE": {
            "required": "Access Key (Bakery) cannot be empty"
          }
        },
        "SECRET_KEY": {
          "TOOLTIP": "The secret key used to communicate with AWS",
          "VALIDATION_MESSAGE": {
            "required": "Secret key cannot be empty"
          }
        },
        "SECRET_KEY_BAKERY": {
          "TOOLTIP": "The default secret key used for AWS baskery configuration",
          "VALIDATION_MESSAGE": {
            "required": "Secret Key (Bakery) cannot be empty"
          }
        },
        "APP_KEY": {
          "TOOLTIP": "The appKey (password) of your service principal",
          "VALIDATION_MESSAGE": {
            "required": "App key cannot be empty",
            "cannotContainSpace": "App key cannot contain space"
          }
        },
        "CLIENT_ID": {
          "TOOLTIP": "The clientId (also called appId) of your service principal",
          "VALIDATION_MESSAGE": {
            "required": "Client Id cannot be empty",
            "cannotContainSpace": "Client Id cannot contain space"
          }
        },
        "DEFAULT_KEYVALUT": {
          "TOOLTIP": "The name of a KeyVault that contains the user name, password, and ssh public key used to create VMs",
          "VALIDATION_MESSAGE": {
            "required": "Default Keyvault cannot be empty",
            "cannotContainSpace": "Default Keyvault cannot contain space"
          }
        },
        "SUBSCRIPTION_ID": {
          "TOOLTIP": "The subscriptionId that your service principal is assigned to",
          "VALIDATION_MESSAGE": {
            "required": "Subscription Id cannot be empty",
            "cannotContainSpace": "Subscription Id cannot contain space"
          }
        },
        "TENANT_ID": {
          "TOOLTIP": "The tenantId that your service principal is assigned to",
          "VALIDATION_MESSAGE": {
            "required": "Tenant Id cannot be empty",
            "cannotContainSpace": "Tenant Id cannot contain space"
          }
        },
        "GCP_FILE": {
          "TOOLTIP": "The path to a JSON service account that Spinnaker will use as credentials. This is only needed if Spinnaker is not deployed on a Google Compute Engine VM, or needs permissions not afforded to the VM it is running on. Refer https://cloud.google.com/compute/docs/access/service-accounts for more information",
          "VALIDATION_MESSAGE": {
            "required": "File cannot be empty"
          }
        },
        "AWS_ACCOUNT_NAME": {
          "TOOLTIP": "",
          "VALIDATION_MESSAGE": {
            "required": "Please Select AWS Account"
          }
        }
      },
      "SPINNAKER_LISTING": {
       "HEADER": "No CD Integration found!",
        "BODY": "<div><p>Use this page to connect ISD to an existing Argo CD or to install new OpsMx Enterprise for Argo - a security validated release of Argo from OpsMx</p><strong>Existing Argo CD</strong><p><strong>Step 1</strong>:<span> Providing the following information to generate the manifest</span></p><ul><li><strong>Name</strong>: User Defined Name for this CD integration.</li><li><strong>Namespace</strong>: Namespace where argocd is installed. Usually it is 'argocd'</li><li><strong> Argo CD URL</strong>: URL of your ArgoCD instance, providing this is optional</li></ul><p><strong>step 2</strong>: Download and apply the manifest in the same namespace where Argo CD Is installed</p><ul><li>Download the Agent Manifest.</li><li>Generate an ArgoCD API Token, encode it in base64 format and update it in the isd-argo-agent.yml. For more information, see How to Generate Argo CD API Token</li><li>Apply the agent manifest in the same namespace where Argo CD Is installed</li></ul><p><strong>Create New Argo CD</strong></p><p>This installs OpsMx Enterprise for Argo (OEA - a security validated release of Argo from OpsMx) in the given namespace and automatically connects it with ISD.</p><p><strong>Step 1</strong>:<span> Providing the following information to generate the manifest</span></p><ul><li><strong>Name</strong>: User Defined Name for this integration.</li><li><strong>Namespace</strong>: Namespace where argocd is installed. You should create this namespace in your cluster.</li><li><strong> Argo CD URL</strong>: URL for your new Argo CD Instance. We will be creating an ngnix ingress with the provided url. This field is optional</li></ul><p><strong>step 2</strong>: Download and apply the manifest</p></div>",
        "CDTOOL_ERROR": "Unable to connect to CD Tool"
      },
      "SPINNAKER_SETUP": {
        "HEADER": "Spinnaker",
        "BODY": "<p>In this page you can add / update information about your CD instance.</p> <p><strong>Fields:</strong></p> <ul class='helpTextUI'> <li><strong>CD Name</strong>: User defined name for CD instance.<br><span> Example: opsmx-spinnaker</span></li> <li><strong>CD URL</strong>: Gate URL of the CD instance.<br> <span>Example: https://spinnaker-gate.xyz.com or http://oes-gate:8084</span></li> <li><strong>Authentication Type:</strong>: Can be LDAP or X509; for AD, use LDAP</li> <li><strong>Token: </strong> This is used when Authentication Type is LDAP; username & password to LDAP server separated by <b>:</b> in base64 format; Output of 'echo -ne 'username:password' | base64 -w0'</li> <li><strong>Password: </strong>This is used when Authentication Type is X509; Password for P12 File</li> <li><strong>P12 File:</strong> This is used when Authentication Type is X509; P12 File needed for X509 Authentication</li></ul><p>GitOps style Spinnaker is suported where in all configuration is maintained in a repository such as git. These optional sections help configure gitOps style Spinnaker:</p><ul class='helpTextUI'><li><strong>Source Control for Accounts: </strong>You can specify the repository for External configuration in Spinnaker</li> <li><strong>Source Control for Pipeline: </strong>You can specify the repository for pipeline gitOps that allows you to save and restore pipelines from a git repository</li></ul>",
        "ACCOUNT_CREATION_INFO": "The CD name should be the same as the Spinnaker name configured in echo-local.yml",
        "ACCOUNT_CREATION_ADDITIONAL_INFO": "<p></p><p>Adding a Spinnaker instance with CD Name different than the Spinnaker name configured in <i>echo-local.yml</i> will require a manual update to the <i>echo-local.yml</i> and a <i>hal deploy apply</i>. This change is required to allow publishing Spinnaker events to RabbitMQ.</p>",
        "SPINNAKER_NAME": {
          "TOOLTIP": "Name of the Spinnaker instance",
          "VALIDATION_MESSAGE": {
            "required": "CD Name cannot be empty",
            "cannotContainSpace": "CD Name cannot contain space",
            "noSpecialCharacters": "Allowed special character is '-'",
            "startingFromNumber": "CD Name should not start with number"
          }
        },
        "SPINNAKER_GATE_URL": {
          "TOOLTIP": "Gate Url of the Spinnaker instance",
          "VALIDATION_MESSAGE": {
            "required": "CD Gate URL cannot be empty",
            "cannotContainSpace": "CD Gate URL cannot contain space",
            "invalidUrl": "CD Gate URL is invalid"
          }
        },
        "AUTHENTICATION_TYPE": {
          "TOOLTIP": "Select the type of authentication for the spinnaker being added",
          "VALIDATION_MESSAGE": {
            "required": "Please select Authentication Type"
          }
        },
        "LDAP_USERNAME": {
          "TOOLTIP": "User Name",
          "VALIDATION_MESSAGE": {
            "required": "User Name cannot be empty",
            "minlength": "User Name should be more than 4 characters"
          }
        },
        "LDAP_PASSWORD": {
          "TOOLTIP": "Password",
          "VALIDATION_MESSAGE": {
            "required": "Password cannot be empty",
            "minlength": "Password should be more than 8 characters"
          }
        },
        "TOKEN": {
          "TOOLTIP": "Token for Spinnaker authentication",
          "VALIDATION_MESSAGE": {
            "required": "Token cannot be empty",
            "minlength": "Token should be more than 8 characters"
          }
        },
        "PASSWORD": {
          "TOOLTIP": "Password",
          "VALIDATION_MESSAGE": {
            "required": "Password cannot be empty",
            "minlength": "Password should be more than 8 characters"
          }
        },
        "P12_FILE": {
          "TOOLTIP": "P12 File",
          "VALIDATION_MESSAGE": {
            "required": "P12 File cannot be empty"
          }
        },
        "SYNC_ACCOUNTS": {
          "TOOLTIP": "Select Mode of synchronisation of Cloud Providers between Autopilot & Spinnaker",
          "VALIDATION_MESSAGE": {
            "required": "Please select Sync Accounts type"
          }
        },
        "ACCOUNTS_PROVIDER": {
          "TOOLTIP": "Source Control for Halyard Configuration and / or External Account Configuration",
          "VALIDATION_MESSAGE": {
            "required": "Please select provider"
          }
        },
        "ACCOUNTS_ACCOUNT_NAME": {
          "TOOLTIP": "Account name of the Source Control",
          "VALIDATION_MESSAGE": {
            "required": "Please select Account Name"
          }
        },
        "ACCOUNTS_REPOSITORY": {
          "TOOLTIP": "Repository name with full path in the selected Source Control Eg., https://github.com/OpsMx/Opsmx-Saas.git",
          "VALIDATION_MESSAGE": {
            "required": "Repository cannot be empty",
            "cannotContainSpace": "Repository cannot contain space",
            "invalidUrl": "Repository is invalid"
          }
        },
        "ACCOUNTS_SOURCE_PATH": {
          "TOOLTIP": "Existing path in the repository",
          "VALIDATION_MESSAGE": {}
        },
        "ACCOUNTS_REGION": {
          "TOOLTIP": "The AWS regions this Spinnaker account will manage",
          "VALIDATION_MESSAGE": {
            "required": "Region cannot be empty",
            "cannotContainSpace": "Region cannot contain space",
            "startingFromNumber": "Region should not start with number"
          }
        },
        "ACCOUNTS_BUCKET_NAME": {
          "TOOLTIP": "Bucket Name",
          "VALIDATION_MESSAGE": {
            "required": "Bucket Name cannot be empty",
            "cannotContainSpace": "Bucket Name cannot contain space",
            "startingFromNumber": "Bucket Name should not start with number"
          }
        },
        "PIPELINE_PROVIDER": {
          "TOOLTIP": "Use this Spinnaker for pipeline promotion.",
          "VALIDATION_MESSAGE": {
            "required": "Please select provider"
          }
        },
        "PIPELINE_ACCOUNT_NAME": {
          "TOOLTIP": "",
          "VALIDATION_MESSAGE": {
            "required": "Please select Account Name"
          }
        },
        "PIPELINE_REPOSITORY": {
          "TOOLTIP": "",
          "VALIDATION_MESSAGE": {
            "required": "Repository cannot be empty",
            "cannotContainSpace": "Repository cannot contain space",
            "invalidUrl": "Repository is invalid"
          }
        },
        "PIPELINE_SOURCE_PATH": {
          "TOOLTIP": "Existing path in the repository",
          "VALIDATION_MESSAGE": {}
        },
        "PIPELINE_REGION": {
          "TOOLTIP": "",
          "VALIDATION_MESSAGE": {
            "required": "Region cannot be empty",
            "cannotContainSpace": "Region cannot contain space",
            "startingFromNumber": "Region should not start with number"
          }
        },
        "PIPELINE_BUCKET_NAME": {
          "TOOLTIP": "Bucket Name",
          "VALIDATION_MESSAGE": {
            "required": "Bucket Name cannot be empty",
            "cannotContainSpace": "Bucket Name cannot contain space",
            "startingFromNumber": "Bucket Name should not start with number"
          }
        }
      },
      "INTEGRATOR_LISTING": {
        "HEADER": "No Integrator found!",
        "BODY": "<div><p>ISD offers integration with many monitoring providers. These integrations are used to pull logs & metrics for Continuous Verification.</p><p>Click on the <b>New Integration</b> button to start integrating your tools. </p></div>",
        "SYNC_SPINNAKER_ACCOUNTS": {
          "TOOLTIP": "Push Integration changes to Spinnaker",
          "VALIDATION_MESSAGE": ""
        }
      },
      "PIPELINE_EXECUTION_AUDIT_LISTING": {
        "HEADER": "Pipeline executions not found!",
        "BODY": "<div>This page shows pipeline executions coming from a CD Tool such as Spinnaker in a list view. It also contains the summary view showing the total number of Pipeline Runs, Successful Runs, Failed Runs, Cancelled Runs.</p> <p> Only important fields including Application, Service, Pipeline, Status, Start Time and End Time are shown by default. Additional fields can be enabled using the Hamburger menu towards the right corner.</p></div>",
        "TOOLTIP": {
          "EXECUTION_DATA": "Pipeline is in Running State",
          "CONNECTOR_DATA": "Pipeline is in Running State",
          "STAGE_DURATION": "Pipeline is in Running State"
        },
        "VALIDATION_MESSAGE": {
          "STAGE_DURATION": "No Data available to view Stage Duration",
          "PIPELINE_NOT_EXISTS" : "Execution details not found."
        }
      },
    "DEPLOYMENT_AUDIT_LISTING": {
      "HEADER": "Deployment history not found!",
      "BODY": "<div>This page shows deployment history of all applications in a list view. It also contains a summary view at the top with applications and the deployments count.</p></div>"
      },
      "PIPELINE_AUDIT_LISTING": {
        "HEADER": "Pipeline updates not found!",
        "BODY": "<div>This page shows pipeline updates coming from a CD Tool such as Spinnaker in a list view.</div>"
      },
      "POLICY_AUDIT_LISTING": {
        "HEADER": "Policy updates / executions not found!",
        "BODY": "<div><p>This page shows policy updates and policy executions, along with allowed/denied information, in a list view. Possible uses, apart from audit and compliance, includes helping users understand the policies that they might be inadvertently trying to break.</p><p>For policy updates, ensure that a policy is created/updated under <strong><a routerLink='/policymanagement'>Setup -> Policies</a></strong>. For policy execution events, please add a policy stage in a pipeline and execute it.</div>"
      },
      "POLICY_CREATION": {
        "HEADER": "Policy",
        "BODY": "<p>In this page, you can define & manage policies.</p><p><strong>Fields</strong>:</p><ul class='helpTextUl'><li> <strong>Name:</strong> User defined name for the policy</li><li><strong>Policy Type:</strong> Static Policy lets users validate the conditions when creating a pipeline, whereas Runtime Policy enables users for automated decision making during pipeline execution.</li><li> <strong>Policy Engine:</strong> Policy Engine to be used; currently, only OPA is supported</li> <li><strong>Policy Engine Account:</strong> Policy Engine Account for the Credentials. You can manage accounts from Setup -> Integrations -> Policy </li> <li><strong>Policy File:</strong> File containing the Policy You can upload the file by clicking on <strong>Choose File</strong> button. This is optional. If not present, you can enter the policy directly in the <strong>Policy Details</strong> field</li><li> <strong>Policy Details:</strong> Policy definition</li> <li><strong>Policy Permissions:</strong>Enable/disable access to the policy in Autopilot to specific usergroups</li></ul>",
        "NAME": {
          "TOOLTIP": "Policy Name",
          "VALIDATION_MESSAGE": {
            "required": "Name cannot be empty",
            "cannotContainSpace": "Name cannot contain space",
            "exists": "Name already exists"
          }
        },
        "POLICY_DETAILS": {
          "TOOLTIP": "Define your policy using the rego language",
          "VALIDATION_MESSAGE": {
            "required": "Policy Details cannot be empty"
          }
        },
        "POLICY_ENGINE": {
          "TOOLTIP": "Supported Policy Account Types",
          "VALIDATION_MESSAGE": {
            "required": "Please select Policy Account Type"
          }
        },
        "POLICY_ENGINE_ACCOUNT": {
          "TOOLTIP": "Policy Account Names",
          "VALIDATION_MESSAGE": {
            "required": "Please select Policy Engine Account"
          }
        },
        "POLICY_TYPE": {
          "TOOLTIP": "A static policy lets users validate conditions before the start of execution, whereas a Runtime policy enables users for automated decision making during execution.",
          "VALIDATION_MESSAGE": {
            "required": "Please select Policy Engine Type"
          }
        },
        "POLICY_DESCRIPTION": {
          "TOOLTIP": "Optional Description for the policy"
        },
        "POLICY_FILE": {
          "TOOLTIP": "File containing the Policy. You can upload the file by clicking on 'Choose File' button. This is optional. If not present, you can enter the policy directly in the 'Policy Details' field"
        }
      },
      "VERIFICATION": {
        "HEADER": "No Analysis Report found!",
        "BODY": "<div><p>This page shows Analysis reports in a list view. To configure an analysis for your application, visit the manage analysis page.</p><p>The Continuous Verification performs automated log and metrics analysis for new releases with built-in unsupervised and supervised machine learning algorithms for risk analysis and canary deployments.</p><p>Continuous Verification is a release verification process that provides Dev and Ops engineers an intelligent automated real-time actionable risk assessment of a new release deployed. The Continuous Verification verifies the latest version of the service compared to the baseline or prior release before, during or after a production rollout. The baseline can be a deployment done prior or the current deployment during rollout using canary or blue/green strategies.</p><p>It leverages unsupervised and supervised machine learning techniques to analyse 100s of metrics and logs data to perform in-depth analysis of architectural regressions, performance, scalability and security violations of new releases in a scalable way for enterprises.</p></div>",
        "LOG_ANALYSIS": {
          "BODY": "",
          "SENSITIVITY": {
            "TOOLTIP": "Impact of Unexpected Issues on the log scoring",
            "VALIDATION_MESSAGE": {}
          },
          "PERCEIVED_RISK": {
            "TOOLTIP": "The overall risk associated with changes made in this verification run",
            "VALIDATION_MESSAGE": {}
          }
        },
        "ANALYSIS_SUMMARY": {
          "LOG_TEMPLATE": {
            "TOOLTIP": "Log template for the verification run",
            "VALIDATION_MESSAGE": {}
          },
          "METRIC_TEMPLATE": {
            "TOOLTIP": "Metric template for the verification run",
            "VALIDATION_MESSAGE": {}
          },
          "LOG_BASELINE" :{
            "TOOLTIP": "Filter keys values to collect log data for Baseline",
            "VALIDATION_MESSAGE" :{}
          },
          "METRIC_BASELINE" :{
            "TOOLTIP": "Filter keys values to collect metric data for Baseline ",
            "VALIDATION_MESSAGE" :{}
          },
          "LOG_NEW_RELEASE" :{
            "TOOLTIP": "Filter keys values to collect log data for New Release",
            "VALIDATION_MESSAGE" :{}
          },
          "METRIC_NEW_RELEASE" :{
            "TOOLTIP": "Filter keys values to collect metric data for New Release",
            "VALIDATION_MESSAGE" :{}
          },
          "LOG_BASELINE_START_TIME": {
            "TOOLTIP": "Start time of the canary analysis for Baseline",
            "VALIDATION_MESSAGE": {}
          },
          "LOG_BASELINE_END_TIME": {
            "TOOLTIP": "End  time of the canary analysis for Baseline",
            "VALIDATION_MESSAGE": {}
          },
          "LOG_NEW_RELEASE_START_TIME": {
            "TOOLTIP": "Start time of the canary analysis for New Release",
            "VALIDATION_MESSAGE": {}
          },
          "LOG_NEW_RELEASE_END_TIME": {
            "TOOLTIP": "End  time of the canary analysis for New Release",
            "VALIDATION_MESSAGE": {}
          },
          "ANALYSIS_TYPE": {
            "TOOLTIP": "The type of verification analysis done, can be metric, log or both metric and log analysis",
            "VALIDATION_MESSAGE": {}
          },
          "LOG_STATUS": {
            "TOOLTIP": "The current status of the log analysis",
            "VALIDATION_MESSAGE": {}
          },
          "LOG_SCORE": {
            "TOOLTIP": "The overall score of the current log analysis report",
            "VALIDATION_MESSAGE": {}
          },
          "METRIC_STATUS": {
            "TOOLTIP": "The current status of the metric analysis",
            "VALIDATION_MESSAGE": {}
          },
          "METRIC_SCORE": {
            "TOOLTIP": "The overall score of the current metric analysis report",
            "VALIDATION_MESSAGE": {}
          },
          "BASELINE_SIZE": {
            "TOOLTIP": "The size of the file with the Baseline logs",
            "VALIDATION_MESSAGE": {}
          },
          "NEW_RELEASE_SIZE": {
            "TOOLTIP": "The size of the file with the New Release logs",
            "VALIDATION_MESSAGE": {}
          },
          "BASELINE_LINES": {
            "TOOLTIP": "The number of log lines for the Baseline",
            "VALIDATION_MESSAGE": {}
          },
          "NEW_RELEASE_LINES": {
            "TOOLTIP": "The number of log lines for the New Release",
            "VALIDATION_MESSAGE": {}
          },
          "ANALYSIS_DURATION": {
            "TOOLTIP": "The time taken to perform the current verification run",
            "VALIDATION_MESSAGE": {}
          },
          "LIFETIME_HOURS": {
            "TOOLTIP": "The duration for which the canary analysis was performed, 1 lifetime hour is equal to 1 hour.",
            "VALIDATION_MESSAGE": {}
          },
          "LIFETIME_MINUTES": {
            "TOOLTIP": "How many minutes to let this analysis run before making a final determination",
            "VALIDATION_MESSAGE": {}
          },
          "RECLASSIFICATION_DURATION": {
            "TOOLTIP": "The time taken to perform reclassification",
            "VALIDATION_MESSAGE": {}
          },
          "INTERVAL_MINUTES": {
            "TOOLTIP": "The duration of the interval in minutes",
            "VALIDATION_MESSAGE": {}
          },
          "REGULAR_EXPRESSION": {
            "TOOLTIP": "A sequence of characters to specify the search pattern",
            "VALIDATION_MESSAGE": {}
          },
          "RESPONSE_KEY": {
            "TOOLTIP": "Field name in the index where the regular expression is to be searched",
            "VALIDATION_MESSAGE": {}
          },
          "SCORING_ALGORITHM": {
            "TOOLTIP": "Scoring Algorithm for the risk analysis",
            "VALIDATION_MESSAGE": {}
          },
          "BASELINE_LOGS": {
            "TOOLTIP": "View the Baseline logs",
            "VALIDATION_MESSAGE": {}
          },
          "NEW_RELEASE_LOGS": {
            "TOOLTIP": "View the New Release logs",
            "VALIDATION_MESSAGE": {}
          }
        },
        "METRIC_ANALYSIS": {
          "BODY": ""
        },
        "CORRELATION": {
          "BODY": ""
        }
      },
      "MANUAL_TRIGGER": {
        "BODY": "<p>Continuous Verification is a REST service that can be deployed on premise or use managed cloud service for analysis. Continuous Verification interfaces with monitoring systems for logs and metrics and uses the metadata provided in start analysis phase to retrieve the logs and metrics for deployment verification. Continuous Verification does not interface with the services deployed directly for its analysis.            Deployment Pipeline can be based on Spinnaker or Jenkins for Enterprise Continuous Delivery. Verification can also be triggered manually by providing the required parameters in this dialog box.</p>",
        "APPLICATION": {
          "TOOLTIP": "Name of the application",
          "VALIDATION_MESSAGE": ""
        },
        "BASELINE_START_TIME": {
          "TOOLTIP": "Time to enable warming up of the container",
          "VALIDATION_MESSAGE": ""
        },
        "NEW_RELEASE_START_TIME": {
          "TOOLTIP": "Intervals in which metric-data is fetched and analysed",
          "VALIDATION_MESSAGE": ""
        },
        "SUCCESSFUL_SCORE": {
          "TOOLTIP": "The score under which the Analysis should fail",
          "VALIDATION_MESSAGE": ""
        },
        "UNHEALTHY_SCORE": {
          "TOOLTIP": "The score above which the Analysis should be a pass",
          "VALIDATION_MESSAGE": ""
        },
        "ANALYSIS_LIFETIME": {
          "TOOLTIP": "The time in hours for which the Canary Analysis should be run",
          "VALIDATION_MESSAGE": ""
        },
        "RUN_INFO": {
          "TOOLTIP": {
            "Build Info": "http://jenkins.opsmx.net:8181/jenkins/job/Dev-visibilityservice-build-branch/770/",
            "Code Repository": "https://github.com/OpsMx/visibility-service",
            "Version": "v1.09"
          },
          "VALIDATION_MESSAGE": ""
        },
        "SERVICE": {
          "TOOLTIP": "Service",
          "VALIDATION_MESSAGE": ""
        },
        "TEMPLATE_NAME": {
          "TOOLTIP": "Template Name",
          "VALIDATION_MESSAGE": ""
        },
        "GATE": {
          "TOOLTIP": "Gate",
          "VALIDATION_MESSAGE": ""
        },
        "FILTER_KEY": {
          "TOOLTIP": "Filter Key",
          "VALIDATION_MESSAGE": ""
        },
        "BASELINE": {
          "TOOLTIP": "Baseline",
          "VALIDATION_MESSAGE": ""
        },
        "NEW_RELEASE": {
          "TOOLTIP": "New Release",
          "VALIDATION_MESSAGE": ""
        }
      },
      "TEST_VERIFICATON": {
        "HEADER": "Test Verification Gate executions not found!",
        "BODY": "<div> <p>The Continuous Verification performs automated log and metric analysis for new releases with built-in unsupervised and supervised machine learning algorithms for risk analysis. Autopilot provides a Test Verification Gate to analyse logs from your Test Harness and this can be inserted as a Stage in your CI/CD Pipeline. </p>     <p>This page shows Test Verification Gate executions in a list view. </p> <p>Insert Test Verification Gate to a pipeline in your application using <a [routerLink]='['/setup/applications']'><strong>Setup -> Applications</strong></a>.When the pipeline is run, the Gate executions will start appearing in this page.</p> </div>"
      },
      "TEST_CASE": {
        "HEADER": "Test Cases not found!",
        "BODY": "<div> <p>The Continuous Verification performs automated log and metric analysis for new releases with built-in unsupervised and supervised machine learning algorithms for risk analysis. Autopilot provides a Test Verification Gate to analyse logs from your Test Harness and this can be inserted as a Stage in your CI/CD Pipeline. </p>     <p>This page shows Test Cases in a list view. </p> <p>Insert Test Verification Gate to a pipeline in your application using <a [routerLink]='['/setup/applications']'><strong>Setup -> Applications</strong></a>.When the pipeline is run, the Gate executions will start appearing in this page.</p> </div>"
      },
      "VISIBILITY_LISTING": {
        "HEADER": " <div><span style='font-size: 16px; font-weight: bold;'>Approval Gate executions not found!</span></div>",
        "BODY": "<div><p>This page shows Approval Gate executions in a list view.</p> <p>ISD provides <b>approval</b> mechanism for deployments. To make an informed decision regarding pipeline execution, an approver may need to check the data from multiple data sources, such as CI Systems, Repositories, SAST/DAST Tools etc. ISD provides Approval Gate feature which fetches relevant information from multiple CI/CD Tools and presents the data in one place, to enable the user to make an quick and informed decision on pipeline execution. This Gate can be inserted as a Stage in your CI/CD Pipeline.</p> <p>Note that appropriate data sources must be configured in the <b>Setup -> Integration</b> view before Approval stage can be used.</p> <p>Insert Approval Gate to a pipeline in your application using <b>Pipeline Builder -> Add Stage</b>. When the pipeline is run, the Gate executions will start appearing in this page.</p></div>"
      },
      "VISIBILITY_DETAILS": {
        "APPLICATION_NAME": {
          "TOOLTIP": "",
          "VALIDATION_MESSAGE": ""
        },
        "SERVICE_NAME": {
          "TOOLTIP": "",
          "VALIDATION_MESSAGE": ""
        },
        "APPROVAL_BTN_TITLE": {
          "TOOLTIP": "Insufficient Permission to execute",
          "VALIDATION_MESSAGE": ""
        },
        "GATE_NAME": {
          "TOOLTIP": "",
          "VALIDATION_MESSAGE": ""
        },
        "STATUS": {
          "TOOLTIP": "",
          "VALIDATION_MESSAGE": ""
        },
        "COMMENT": {
          "TOOLTIP": "",
          "VALIDATION_MESSAGE": ""
        },
        "TRIGGER_URL": {
          "TOOLTIP": "",
          "VALIDATION_MESSAGE": ""
        },
        "APPROVAL_GROUP": {
          "TOOLTIP": "",
          "VALIDATION_MESSAGE": ""
        },
        "CONNECTORS": {
          "TOOLTIP": "",
          "VALIDATION_MESSAGE": ""
        },
        "ACTIVATED_TIME": {
          "TOOLTIP": "",
          "VALIDATION_MESSAGE": ""
        },
        "REVIEWED_AT": {
          "TOOLTIP": "",
          "VALIDATION_MESSAGE": ""
        },
        "REVIEWER": {
          "TOOLTIP": "",
          "VALIDATION_MESSAGE": ""
        },
        "COMMENTS": {
          "TOOLTIP": "",
          "VALIDATION_MESSAGE": ""
        }
      },
      "FORM_GRID": {
        "ADD_NEW_ROW": {
          "TOOLTIP": "Add New Row",
          "VALIDATION_MESSAGE": ""
        },
        "DELETE_ROW": {
          "TOOLTIP": "Delete row",
          "VALIDATION_MESSAGE": ""
        }
      },
      "APPLICATION_DASHBOARD": {
        "VERIFICATION_FAILURES": {
          "TOOLTIP": "Total number of Verification Failures including Test Verification Failures",
          "VALIDATION_MESSAGE": ""
        }
      },
      "APPLICATION_LISTING": {
        "HEADER": "No applications were found to match your filter!",
        "BODY": "",
        "PLACEHOLDER": "You don't have access to this Page. Please contact your Administrator",
        "SYNC_SPINNAKER": {
          "TOOLTIP": "To be able to work on applications created in Spinnaker, you need to import them here",
          "VALIDATION_MESSAGE": ""
        },
        "SYNC_SPINNAKER_NOT_CONFIGURED": {
          "TOOLTIP": "Configure Spinnaker to Sync Spinnaker Applications from here",
          "VALIDATION_MESSAGE": ""
        },
        "SYNC_SPINNAKER_ERROR": {
          "TOOLTIP": "Could not fetch Spinnaker Details. Please contact Administrator",
          "VALIDATION_MESSAGE": ""
        },
        "DISABLE_CREATE_APPLICATION_BTN": {
          "TOOLTIP": "You do not have permission to create Application",
          "VALIDATION_MESSAGE": ""
        }
      },
      "START_DEPLOYMENT": {
        "APPLICATION_NAME": {
          "TOOLTIP": "",
          "VALIDATION_MESSAGE": {
            "required": "Application Name is required",
            "empty": "Please create Spinnaker Application to continue"
          }
        },
        "SERVICE_NAME": {
          "TOOLTIP": "",
          "VALIDATION_MESSAGE": {
            "required": "Service Name is required",
            "empty": "Pipelines are not present for this Application"
          }
        },
        "START_DEPLOYMENT_BTN": {
          "TOOLTIP": "Please create Spinnaker Application to 'Start New Deployment'",
          "VALIDATION_MESSAGE": {
            "required": "Service Name is required"
          }
        }
      },
      "APPLICATION_DETAILS": {
        "HEADER": "Application Details",
        "BODY": "<ul class='helpTextUI'><li><strong>Application Name</strong>: User defined name of the application</li> <li><strong>Description</strong>: Application description</li> <li><strong>Email ID</strong>: Your email id</li></ul>",
        "APPLICATION_NAME": {
          "TOOLTIP": "",
          "VALIDATION_MESSAGE": {
            "exists": "Application already exists",
            "noSpecialCharacters": "Application Name cannot contain special characters",
            "cannotContainSpace": "Application Name cannot contain space",
            "required": "Application Name cannot be empty",
            "startingFromNumber": "Application Name cannot start with numbers",
            "maxlength": "Application name should not have more than 63 characters!"
          }
        },
        "APPLICATION_DESCRIPTION": {
          "TOOLTIP": "",
          "VALIDATION_MESSAGE": ""
        },
        "EMAIL_ID": {
          "TOOLTIP": "",
          "VALIDATION_MESSAGE": {
            "email": "Email Id is invalid",
            "required": "Email Id cannot be empty"
          }
        }
      },
      "SERVICE_DETAILS": {
        "HEADER": "Services",
        "BODY": "<p>An Application can contain multiple services. A service can contain multiple pipelines. When a Service is created, a Pipeline with the same name is created automatically. You can add more pipelines by clicking on '+' symbol in <strong>Service Pipeline</strong></p>",
        "SERVICE_NAME": {
          "TOOLTIP": "",
          "VALIDATION_MESSAGE": {
            "exists": "Service already exists",
            "noSpecialCharacters": "Service Name cannot contain special characters",
            "cannotContainSpace": "Service Name cannot contain space",
            "required": "Service Name cannot be empty",
            "startingFromNumber": "Service Name cannot start with number",
            "maxlength": "Service name should not have more than 63 characters!"
          }
        },
        "SERVICE_PIPELINE": {
          "TOOLTIP": "",
          "VALIDATION_MESSAGE": ""
        },
        "ADD_NEW_SERVICE": {
          "TOOLTIP": "Add a new Service",
          "VALIDATION_MESSAGE": ""
        },
        "SHOW_OR_HIDE_SERVICE": {
          "TOOLTIP": "Show/Hide this service in the deployment dashboard",
          "VALIDATION_MESSAGE": ""
        },
        "DELETE_PIPELINE_ICON": {
          "TOOLTIP": "Delete Pipeline from Service",
          "VALIDATION_MESSAGE": ""
        },
        "DELETE_PERMISSION": {
          "TOOLTIP": "Insufficient Permission to Delete this Service",
          "VALIDATION_MESSAGE": ""
        },
        "DELETE_SERVICE": {
          "TOOLTIP": "Service can be deleted on deleting pipelines",
          "VALIDATION_MESSAGE": ""
        }
      },
      "GROUP_PERMISSION": {
        "APP_PERMISSIONS": {
          "TOOLTIP": "Authorization definition for this Application",
          "VALIDATION_MESSAGE": {
            "groupValid": "Groups cannot be empty",
            "permissionsValid": "Atleast 1 permission should be assigned to the groups",
            "allPermissionForOneGroup": "Atleast 1 group should have all permissions"
          }
        },
        "INTEGRATORS_PERMISSIONS": {
          "TOOLTIP": "Configure specific user group’s access to this integration.",
          "VALIDATION_MESSAGE": ""
        },
        "CLOUD_PROVIDER_PERMISSIONS": {
          "TOOLTIP": "Authorization definition for this Cloud Targets",
          "VALIDATION_MESSAGE": ""
        },
        "AGENT_PERMISSIONS": {
          "TOOLTIP": "Authorization definition for this Agent",
          "VALIDATION_MESSAGE": ""
        },
        "POLICY_PERMISSIONS": {
          "TOOLTIP": "Authorization definition for this Policy",
          "VALIDATION_MESSAGE": ""
        },
        "ADD_GROUP": {
          "TOOLTIP": "Add New Group",
          "VALIDATION_MESSAGE": ""
        },
        "DELETE": {
          "TOOLTIP": "Delete",
          "VALIDATION_MESSAGE": ""
        }
      },
      "GATE_DETAILS": {
        "HEADER": "Gate Configuration",
        "BODY": "<p>Select Gates from <strong>Existing Gates</strong> dropdown to load Gate Configuration and to add new Gate Configuration click the <strong>Add New Gate</strong> button</p> <p>Autopilot has the following Gate Types</p> <ul class='helpTextUI'> <li><strong>Approval</strong>: Fetches relevant information from multiple CI/CD Tools, presents the data in one place, to enable the user to make quick and informed decision on pipeline execution</li> <li><strong>Verification</strong>: Analyze logs & metrics from your target application to evaluate the risk in software delivery</li> <li><strong>Test Verification</strong>: Analyze logs from your Test Harness to evaluate the risk in software delivery</li>  <li><strong>Policy</strong>: Defines a set of conditions that need to be verified while creating or executing a CI/CD pipeline</li> </ul>",
        "PIPELINE": {
          "TOOLTIP": "Shows the structure of how the Gates are stacked in the Pipeline",
          "VALIDATION_MESSAGE": ""
        },
        "TYPE": {
          "TOOLTIP": "",
          "VALIDATION_MESSAGE": ""
        },
        "EXISITING_GATE": {
          "TOOLTIP": "",
          "VALIDATION_MESSAGE": ""
        },
        "ENVIRONMENT": {
          "TOOLTIP": "Specify Environment for this Gate",
          "VALIDATION_MESSAGE": {
            "required": "Environment Name is Invalid"
          }
        },
        "CUSTOM_ENVIRONMENT_NAME": {
          "TOOLTIP": "",
          "VALIDATION_MESSAGE": {
            "noSpecialCharacters": "Environment Name cannot contain special characters",
            "cannotContainSpace": "Environment Name cannot contain space",
            "required": "Environment Name cannot be empty",
            "startingFromNumber": "Environment Name cannot start with number",
            "maxlength": "Environment name should not have more than 63 characters!",
            "exists": "Environment name already exists"
          }
        },
        "GATE_NAME": {
          "TOOLTIP": "",
          "VALIDATION_MESSAGE": {
            "exists": "Gate already exists",
            "noSpecialCharacters": "Gate Name cannot contain special characters",
            "cannotContainSpace": "Gate Name cannot contain space",
            "required": "Gate Name cannot be empty",
            "startingFromNumber": "Gate Name cannot start with number",
            "maxlength": "Gate name should not have more than 63 characters!"
          }
        },
        "DEPENDS_ON": {
          "TOOLTIP": "This field determines the placement of the current Gate in the Pipeline. This field is not required if there are no Stages in the Pipeline",
          "VALIDATION_MESSAGE": {
            "required": "Depends On cannot be empty"
          }
        },
        "CONNECTOR": {
          "TOOLTIP": "Tool to gather information for informed Approvals",
          "VALIDATION_MESSAGE": {
            "required": "Please select Connector"
          }
        },
        "ACCOUNT": {
          "TOOLTIP": "Account name of the connector",
          "VALIDATION_MESSAGE": {
            "required": "Please select Account"
          }
        },
        "TEMPLATE": {
          "TOOLTIP": "Define the specific fields of interest from connector",
          "VALIDATION_MESSAGE": {
            "required": "Please select Template"
          }
        },
        "ADD_NEW_TEMPLATE": {
          "TOOLTIP": "Add New Connector",
          "VALIDATION_MESSAGE": ""
        },
        "EDIT_TEMPLATE": {
          "TOOLTIP": "Edit Template",
          "VALIDATION_MESSAGE": ""
        },
        "VIEW_TEMPLATE": {
          "TOOLTIP": "View Template",
          "VALIDATION_MESSAGE": ""
        },
        "DELETE_TEMPLATE": {
          "TOOLTIP": "Delete Template",
          "VALIDATION_MESSAGE": ""
        },
        "TEMPLATE_TOOL_TYPE": {
          "TOOLTIP": "",
          "VALIDATION_MESSAGE": ""
        },
        "TEMPLATE_NAME": {
          "TOOLTIP": "",
          "VALIDATION_MESSAGE": {
            "noSpecialCharacters": "Template Name cannot contain special characters",
            "required": "Template Name cannot be empty",
            "startingFromNumber": "Template Name cannot start with number",
            "maxlength": "Template Name should not have more than 63 characters!"
          }
        },
        "TEMPLATE_DESCRIPTION": {
          "TOOLTIP": "",
          "VALIDATION_MESSAGE": ""
        },
        "AUTOMATED_APPROVAL": {
          "TOOLTIP": "Use predefined conditions to Approve or Reject a request. You can configure conditions using Policies.",
          "VALIDATION_MESSAGE": {
            "required": "Please select Approval Condition"
          }
        },
        "APPROVAL_GROUPS": {
          "TOOLTIP": "Selected groups will be able to review this Approval Gate",
          "VALIDATION_MESSAGE": {
            "required": "Please select Approval Groups to continue"
          }
        },
        "APPROVAL_GROUP_MSG": {
          "TOOLTIP": "Selected groups should have atleast view access to the application",
          "VALIDATION_MESSAGE": ""
        },
        "GATE_SECURITY_SOURCE_URL": {
          "TOOLTIP": "Source Url",
          "VALIDATION_MESSAGE": ""
        },
        "GATE_SECURITY_SOURCE_URL_COPY": {
          "TOOLTIP": "Copy Source Url",
          "VALIDATION_MESSAGE": ""
        },
        "PAYLOAD_CONSTRAINTS": {
          "TOOLTIP": "Payload Constraints for Gate Security",
          "VALIDATION_MESSAGE": ""
        },
        "PAYLOAD_CONSTRAINTS_KEY": {
          "TOOLTIP": "",
          "VALIDATION_MESSAGE": {
            "cannotContainSpace": "Key cannot contain space",
            "required": "Invalid Key"
          }
        },
        "LOG_TEMPLATE": {
          "TOOLTIP": "A collection of all the information needed to run the log analysis",
          "VALIDATION_MESSAGE": ""
        },
        "CREATE_GATE_CONFIG_TEMPLATE": {
          "TOOLTIP": "Create New Template",
          "VALIDATION_MESSAGE": ""
        },
        "EDIT_GATE_CONFIG_TEMPLATE": {
          "TOOLTIP": "Edit Template",
          "VALIDATION_MESSAGE": ""
        },
        "VIEW_GATE_CONFIG_TEMPLATE": {
          "TOOLTIP": "View Template",
          "VALIDATION_MESSAGE": ""
        },
        "DELETE_GATE_CONFIG_TEMPLATE": {
          "TOOLTIP": "Delete Template",
          "VALIDATION_MESSAGE": ""
        },
        "METRIC_TEMPLATE": {
          "TOOLTIP": "Information needed to run the metric analysis",
          "VALIDATION_MESSAGE": ""
        },
        "POLICY": {
          "TOOLTIP": "",
          "VALIDATION_MESSAGE": ""
        },
        "DELETE_PERMISSION": {
          "TOOLTIP": "Insufficient Permission to Delete this Gate",
          "VALIDATION_MESSAGE": ""
        }
      },
      "LOGGED_INUSER_DETAILS": {
        "HEADER": "No Users found",
        "BODY": ""
      },
      "APPLICATION_DEPLOYMENT": {
        "DEPLOYMENT_GRID_SYNC": {
          "TOOLTIP": "When the cluster deployment matches with the latest pipeline execution it is 'In Sync'; if not, it is 'Out of Sync'"
        }
      },
    "INTEGRATION": {
    "AMAZONS3":{
      "HEADER": "Amazon S3",
      "BODY":"<span><p>Spinnaker can be configured to use AWS S3 bucket as Spinnaker's persistent storage or Artifact source</p><p><strong>Fields</strong>:</p><ul class='helpTextUl'><li><strong>Account Name</strong>: User-defined account name for your AWS S3 access. The account name appears in Spinnaker as an input source for artifact selection.<span class='noBr'></span></li><li><strong>Access Key Id</strong>: AWS IAM user access key who has access to the identified S3 bucket. Not required, If Spinnaker is running in EC2 or EKS with an associated IAM role. In that case, the IAM instance role is used for S3 connectivity.</li><li><strong>Secret Access Key</strong>: AWS IAM user Secret Key. Not required, If Spinnaker is running in EC2 or EKS with an associated IAM role. In that case, the IAM instance role is used for S3 connectivity.</li><li><strong>Region</strong>: AWS region where the AWS S3 bucket is located</li><li><strong>API Region</strong>: AWS S3 API region, only required when using an S3 clone such as Minio</li><li><strong>API Endpoint</strong>: AWS S3 API endpoint, only required when using an S3 clone such as Minio</li><li><strong>Connect to CD</strong>: Toggle on to propagate the change into the CD Tool.</li><li><strong>Permissions</strong>: Enable/disable access to the Amazon S3 account in Autopilot to specific user groups</li></ul></span>",
      "ACCOUNTNAME":{
        "TOOLTIP":"User-defined account name for your AWS S3 access. The account name appears in Spinnaker as an input source for artifact selection.",
        "VALIDATION_MESSAGE":{
          "noSpecialCharacters": "Account Name cannot contain special characters other than -",
          "cannotContainSpace":"Account Name cannot contain space",
          "required":"Account Name cannot be empty",
          "startingFromNumber": "Account Name cannot start with numbers"
        }
      },
      "ACCESS_ID":{
        "TOOLTIP":"AWS IAM user's access key who has access to the identified S3 bucket. Not required, If Spinnaker is running in EC2 or EKS with an associated IAM role. In that case, the IAM instance role is used for S3 connectivity.",
        "VALIDATION_MESSAGE":{
          "required":"Access Key Id cannot be empty"
        }
      },
        "SECRET_KEY":{
          "TOOLTIP":"AWS IAM user Secret Key. Not required, If Spinnaker is running in EC2 or EKS with an associated IAM role. In that case, the IAM instance role is used for S3 connectivity.",
        "VALIDATION_MESSAGE":{
          "required":"Secret Access Key cannot be empty"
        }
      },
      "REGION":{
        "TOOLTIP":"AWS region where the AWS S3 bucket is located",
        "VALIDATION_MESSAGE":{
          "required":"S3 region cannot be empty"
        }
      },
      "APIENDPOINT":{
        "TOOLTIP":"AWS S3 API endpoint, only required when using an S3 clone such as Minio",
        "VALIDATION_MESSAGE":{
        }
      },
      "APIREGION":{
        "TOOLTIP":"AWS S3 API region, only required when using an S3 clone such as Minio",
        "VALIDATION_MESSAGE":{
        }
      },
      "SPINNAKERTOGGLE":{
        "TOOLTIP":"Switch On this toggle to configure the resource in a gitops enabled Spinnaker instance",
        "VALIDATION_MESSAGE":{}
      }
    },
    "ARTIFACTORY":{
      "HEADER": "Artifactory",
      "BODY":"<span><p>JFrog Artifactory integration can be used as an Artifact source in Spinnaker and also a Data source for Approval-Gate.</p><p><strong>Fields</strong>:</p><ul class='helpTextUl'><li><strong>Account Name</strong>: User-defined account name for your Jfrog Artifactory access. The account name appears in Spinnaker as an Artifactory trigger type input.</li><li><strong>Endpoint</strong>: The base URL of your Artifactory search is reachable at. <span class='noBr'>(Example: https://xyz.my-jfrog.com)</span></li><li><strong>Repo</strong>: The Artifactory repo which needs to be searched</li><li><strong>Repo Type</strong>: The package type of repo in your Artifactory is to be searched. Default is Maven.</li><li><strong>Group Id</strong>: The group id in your Artifactory is to be searched</li><li><strong>Username</strong>: The Artifactory user's username for authentication</li><li><strong>Password</strong>: The Artifactory user's password for authentication</li><li><strong>Token</strong>: Artifactory personal access token. You can find <a href='https://www.jfrog.com/confluence/display/JFROG/Access+Tokens' target='_blank'>here</a> how to generate personal access tokens. <span class='autolinebreak'>(Example: ZlQDAwMFwvdXNlcnNcL21hZGh1a2FyIiwic2NwIjoiYXBwbGllZC1wZXJtaXNzaW9uc1wvYWRtaW4gYXBpOioiLCJhdWQiOlsiamZydEAqIiwiamZhY0AqIiwiamZldnmbWRAKiJdLCJpc3MiOiJqZmZlQDAAzNzY3MiwiaWF0IjoxNjI5ODY0ODcyLCJqdGkiOiI1ZWFiNjlhYi1hZDY0LTRjOGItOTMyZC0wMDAxMWZiZWU5YWIifQ.tzBgL3fQgZ1dwlLLS2UAT7G)</span></li><li><strong>Connect to Spinnaker</strong>: Toggle on to propagate the change into the CD Tool.</li><li><strong>Permissions</strong>: Enable or disable specific user groups' access to the Artifactory account in ISD.</li></ul></span>",
      "ACCOUNTNAME":{
        "TOOLTIP":"User-defined account name for your Jfrog Artifactory access. The account name appears in Spinnaker as an Artifactory trigger type input.",
        "VALIDATION_MESSAGE":{
          "noSpecialCharacters": "Account Name cannot contain special characters other than -",
          "cannotContainSpace":"Account Name cannot contain space",
          "required":"Account Name cannot be empty",
          "startingFromNumber": "Account Name cannot start with numbers"
        }
      },
      "ENDPOINT":{
        "TOOLTIP":"The base URL of your Artifactory search is reachable at",
        "VALIDATION_MESSAGE":{
          "required":"Endpoint cannot be empty",
          "invalidUrl": "Endpoint URL is invalid"
        }
      },
      "REPO":{
        "TOOLTIP":"The repo in your artifactory to be searched",
        "VALIDATION_MESSAGE":{
          "required":"Repo cannot be empty"
        }
      },
      "REPOTYPE":{
        "TOOLTIP":"The package type of repo in your Artifactory is to be searched. Default is Maven.",
        "VALIDATION_MESSAGE":{
        }
      },
      "GROUPID":{
        "TOOLTIP":"The group id in your Artifactory is to be searched.",
        "VALIDATION_MESSAGE":{
        }
      },
      "AUTHENTICATIONTYPE":{
        "TOOLTIP":"Select how the external resource confirms the user credentials",
        "VALIDATION_MESSAGE":{
          "required":"Authentication cannot be empty"
        }
      },
      "TOKEN":{
        "TOOLTIP":"The Token of the artifactory user to authenticate as",
        "VALIDATION_MESSAGE":{
          "required":"Token cannot be empty"
        }
      },
      "USERNAME":{
        "TOOLTIP":"The Artifactory user's username for authentication",
        "VALIDATION_MESSAGE":{
          "required":"Username cannot be empty"
        }
      },
      "PASSWORD":{
        "TOOLTIP":"The Artifactory user's password for authentication",
        "VALIDATION_MESSAGE":{
          "required":"Password cannot be empty"
        }
      },
      "SPINNAKERTOGGLE":{
        "TOOLTIP":"Toggle on to propagate the change into the CD Tool.",
        "VALIDATION_MESSAGE":{}
      }
    },
    "BITBUCKET":{
      "HEADER": "Bitbucket Cloud",
      "BODY":"<span><p>BitBucket Cloud integration can be used as a datasource for Approval Gate as well as to configure Spinnaker for BitBucket Cloud.</p><p><strong>Fields</strong>:</p><ul class='helpTextUl'><li><strong>Account Name</strong>: User-defined account name for your BitBucket Cloud access. <span class='noBr'>(Example: opsmx-bitbucket)</span></li><li><strong>Host URL</strong>: BitBucket Cloud (SaaS) Web URL. <span class='noBr'>It is usually https://bitbucket.org </span></li><li><strong>API URL</strong>: This is needed by Autopilot to access Bitbucket Cloud resources such as accounts & repositories through API calls <span class='noBr'>(Example: https://api.bitbucket.org/2.0/repositories)</span></li><li><strong>Authentication Type</strong>: Select one of the available options. If you are unsure, consult your BitBucket administrator to determine which authentication mechanism is used.</li><li><strong>Anonymous</strong>: No username or password is used. Access identity is anonymous.</li><li><strong>User Name</strong>: The BitBucket Cloud Service username </li><li><strong>Token</strong>: The user's username and access token This token is obtained from the Bitbucket user profile page here. <span class='noBr'>(Example: xCPkVZfxaE9iULmfYYkK)</span></li> <li><strong>Password</strong>: The BitBucket Cloud Service password</li><li><strong>Connect to Spinnaker</strong>: Toggle on to propagate the change into the CD Tool.</li><li><strong>Permissions</strong>: Enable/disable access to the Bitbucket Account in Autopilot to specific user groups</li></ul></span>",
      "ACCOUNTNAME":{
        "TOOLTIP":"User-defined account name for your BitBucket Cloud access.",
        "VALIDATION_MESSAGE":{
          "noSpecialCharacters": "Account Name cannot contain special characters other than -",
          "cannotContainSpace":"Account Name cannot contain space",
          "required":"Account Name cannot be empty",
          "startingFromNumber": "Account Name cannot start with numbers"
        }
      },
      "HOSTURL":{
        "TOOLTIP":"BitBucket Cloud (SaaS) Web URL. It is usually https://bitbucket.org",
        "VALIDATION_MESSAGE":{
          "required":"Host URL cannot be empty",
          "invalidUrl": "Host URL is invalid"
        }
      },
      "APIURL":{
        "TOOLTIP":"Bitbucket API base URL. Eg. https://api.github.com",
        "VALIDATION_MESSAGE":{
          "required":"API URL cannot be empty",
          "invalidUrl": "API URL is invalid"
        }
      },
      "AUTHENTICATIONTYPE":{
        "TOOLTIP":"Select one of the available options. If you are unsure, consult your BitBucket administrator to determine which authentication mechanism is used.",
        "VALIDATION_MESSAGE":{}
      },
      "TOKEN":{
        "TOOLTIP":"The user's access token. This token is obtained from the Bitbucket user profile page.",
        "VALIDATION_MESSAGE":{
          "required":"Token cannot be empty"
        }
      },
      "USERNAME":{
        "TOOLTIP":"The BitBucket Cloud Service username",
        "VALIDATION_MESSAGE":{
          "noSpecialCharacters": "User Name cannot contain special characters other than - and _",
          "cannotContainSpace":"User Name cannot contain space",
          "required":"User Name cannot be empty",
          "startingFromNumber": "User Name cannot start with numbers"
        }
      },
      "PASSWORD":{
        "TOOLTIP":"The BitBucket Cloud Service password",
        "VALIDATION_MESSAGE":{
          "required":"Password cannot be empty"
        }
      },
      "SPINNAKERTOGGLE":{
        "TOOLTIP":"Switch On this toggle to configure the resource in a gitops enabled Spinnaker instance",
        "VALIDATION_MESSAGE":{}
      }
    },
    "BITBUCKET_SERVER":{
      "HEADER": "Bitbucket Server",
      "BODY":"<span><p>BitBucket Server integration can be used as a datasource for Approval Gate as well as to configure Spinnaker for BitBucket Server.</p><p><strong>Fields</strong>:</p><ul class='helpTextUl'><li><strong>Account Name</strong>: User-defined account name for your BitBucket Cloud access. <span class='noBr'>(Example: opsmx-bitbucket)</span></li><li><strong>Host URL</strong>: BitBucket Cloud (SaaS) Web URL. <span class='noBr'> It is usually https://bitbucket.org</span></li><li><strong>Authentication Type</strong>: Select one of the available options. If you are unsure, consult your BitBucket administrator to determine which authentication mechanism is used.</li><li><strong>Anonymous</strong>: No username or password is used. Access identity is anonymous.</li><li><strong>Token</strong>: The user's username and access token This token is obtained from the Bitbucket user profile page. You can find <a href='https://confluence.atlassian.com/bitbucketserver/personal-access-tokens-939515499.html' target='_blank'>here</a> how to generate personal access tokens. <span class='noBr'>(Example: DjpMgHmwqUnIvvmljFgqGQ)</span></li><li><strong>Username & Password </strong>: Accepts the user's username and password to connect to Bitbucket. Deprecated and not recommended.</li><li><strong>User Name</strong>: Bitbucket Server User Name</li><li><strong>Password</strong>: Bitbucket Server Password</li><li><strong>Connect to Spinnaker</strong>: Toggle on to propagate the change into the CD Tool.</li><li><strong>Permissions</strong>: Enable/disable access to the Bitbucket Server account in Autopilot to specific user groups</li></ul></span>",
      "ACCOUNTNAME":{
        "TOOLTIP":"User-defined account name for your BitBucket Cloud access.",
        "VALIDATION_MESSAGE":{
          "noSpecialCharacters": "Account Name cannot contain special characters other than -",
          "cannotContainSpace":"Account Name cannot contain space",
          "required":"Account Name cannot be empty",
          "startingFromNumber": "Account Name cannot start with numbers"
        }
      },
      "HOSTURL":{
        "TOOLTIP":"BitBucket Cloud (SaaS) Web URL. It is usually https://bitbucket.org",
        "VALIDATION_MESSAGE":{
          "required":"Host URL cannot be empty",
          "invalidUrl": "Host URL is invalid"
        }
      },
      "AUTHENTICATIONTYPE":{
        "TOOLTIP":"Select one of the available options. If you are unsure, consult your BitBucket administrator to determine which authentication mechanism is used.",
        "VALIDATION_MESSAGE":{}
      },
      "TOKEN":{
        "TOOLTIP":"The user's access token. This token is obtained from the Bitbucket user profile page.",
        "VALIDATION_MESSAGE":{
          "required":"Token cannot be empty"
        }
      },
      "USERNAME":{
        "TOOLTIP":"The BitBucket Server username",
        "VALIDATION_MESSAGE":{
          "noSpecialCharacters": "User Name cannot contain special characters other than - and _",
          "cannotContainSpace":"User Name cannot contain space",
          "required":"User Name cannot be empty",
          "startingFromNumber": "User Name cannot start with numbers"
        }
      },
      "PASSWORD":{
        "TOOLTIP":"The BitBucket server password",
        "VALIDATION_MESSAGE":{
          "required":"Password cannot be empty"
        }
      },
      "SPINNAKERTOGGLE":{
        "TOOLTIP":"Switch On this toggle to configure the resource in a gitops enabled Spinnaker instance",
        "VALIDATION_MESSAGE":{}
      }
    },
    "DOCKERHUB":{
      "HEADER": "Docker Registry",
      "BODY":"<span><p><strong>Fields</strong>:</p><ul class='helpTextUl'><li><strong>Account Name</strong>: User-defined account name for your Docker registry access.</li><li><strong>Registry URL</strong>: The registry URL from which you want to pull and deploy images. <span class='noBr'> DockerHub example: https://hub.docker.com</span></li><li><strong>Email</strong>: Users docker registry email. If no value is specified, the default value of fake.email@spinnaker.io will be used.</li><li><strong>Repositories</strong>: An optional list of repositories to cache images from. If not provided, Spinnaker will try to read the list of accessible repositories from the registries _catalog endpoint. <span class='noBr'> Example: library/ubuntu (Public repositories are prefixed with library/)</span></li><li><strong>Group Membership</strong>: Select an authentication type that corresponds to the connection credential parameter.</li><li><strong>Connect to Spinnaker</strong>: Toggle on to propagate the change into the CD Tool.</li></ul></span>",
      "ACCOUNTNAME":{
        "TOOLTIP":"User-defined account name for your Docker registry access.",
        "VALIDATION_MESSAGE":{
          "noSpecialCharacters": "Account Name cannot contain special characters other than -",
          "cannotContainSpace":"Account Name cannot contain space",
          "required":"Account Name cannot be empty",
          "startingFromNumber": "Account Name cannot start with numbers"
        }
      },
      "URL":{
        "TOOLTIP":"The registry URL from which you want to pull and deploy images. DockerHub example: https://hub.docker.com",
        "VALIDATION_MESSAGE": {
      "required": "Registry URL cannot be empty"
    }
      },
    "EMAIL":{
      "TOOLTIP":"Users docker registry email. If no value is specified, the default value of fake.email@spinnaker.io will be used."
    },
    "REPOSITORIES":{
    "TOOLTIP":"An optional list of repositories to cache images from. If not provided, Spinnaker will try to read the list of accessible repositories from the registries _catalog endpoint. Example: library/ubuntu (Public repositories are prefixed with library/)"
    },
    "GROUPMEMBERSHIP":{
      "TOOLTIP":""
      },
      "AUTHENTICATIONTYPE":{
        "TOOLTIP":"Select an authentication type that corresponds to the connection credential parameter.",
        "VALIDATION_MESSAGE":{}
      },
      "TOKEN":{
        "TOOLTIP":"The token of the Docker Registry user to authenticate as",
        "VALIDATION_MESSAGE":{
          "required":"Token cannot be empty"
        }
      },
      "USERNAME":{
        "TOOLTIP":"The username of the Docker Registry user to authenticate as",
        "VALIDATION_MESSAGE":{
          "noSpecialCharacters": "User Name cannot contain special characters other than - and _",
          "cannotContainSpace":"User Name cannot contain space",
          "required":"User Name cannot be empty",
          "startingFromNumber": "User Name cannot start with numbers"
        }
      },
      "PASSWORD":{
        "TOOLTIP":"The password of the Docker Registry user to authenticate as",
        "VALIDATION_MESSAGE":{
          "required":"Password cannot be empty"
        }
      },
      "HOSTURL":{
        "TOOLTIP":"Docker Registry Host URL",
        "VALIDATION_MESSAGE":{
          "required":"Host URL cannot be empty",
          "invalidUrl": "Host URL is invalid"
        }
      },
      "SPINNAKERTOGGLE":{
        "TOOLTIP":"Toggle on to propagate the change into the CD Tool.",
        "VALIDATION_MESSAGE":{}
      }
    },
    "OCR":{
      "HEADER": "Generic Docker Registries (ACR, Quay, JFrog)",
      "BODY":"<span><p><strong>Fields</strong>:</p><ul class='helpTextUl'><li><strong>Account Name</strong>: User-defined account name for your GCR Docker registry access.</li><li><strong>Registry URL</strong>: The registry URL from which you want to pull and deploy images. <span class='noBr'> For example: https://quay.io - RedHat quay.io</span></li><li><strong>Email</strong>: Users docker registry email. If no value is specified, the default value of fake.email@spinnaker.io will be used.</li><li><strong>Repositories</strong>: An optional list of repositories to cache images from. If not provided, Spinnaker will try to read the list of accessible repositories from the registries _catalog endpoint. <span class='noBr'> Example: library/ubuntu (Public repositories are prefixed with library/)</span></li><li><strong>Authentication Type</strong>: Select an authentication type that corresponds to the connection credential parameter.</li><li><strong>Connect to Spinnaker</strong>: Toggle on to propagate the change into the CD Tool.</li></ul></span>",
      "ACCOUNTNAME":{
        "TOOLTIP":"User-defined account name for your GCR Docker registry access.",
        "VALIDATION_MESSAGE":{
          "noSpecialCharacters": "Account Name cannot contain special characters other than -",
          "cannotContainSpace":"Account Name cannot contain space",
          "required":"Account Name cannot be empty",
          "startingFromNumber": "Account Name cannot start with numbers"
        }
      },
      "REPOSITORIES":{
        "TOOLTIP":"An optional list of repositories to cache images from. If not provided, Spinnaker will try to read the list of accessible repositories from the registries _catalog endpoint. Example: library/ubuntu (Public repositories are prefixed with library/)",
        "VALIDATION_MESSAGE":{
          "cannotContainSpace":"Repository cannot contain space",
          "startingFromNumber": "Repository cannot start with numbers"
        }
      },
      "REGISTRYURL":{
        "TOOLTIP":"The registry URL from which you want to pull and deploy images. For example: https://quay.io - RedHat quay.io",
        "VALIDATION_MESSAGE":{
          "required":"Registry URL cannot be empty"
        }
      },
      "EMAIL":{
        "TOOLTIP":"Users docker registry email. If no value is specified, the default value of fake.email@spinnaker.io will be used."
      },
      "GROUPMEMBERSHIP":{
        "TOOLTIP":"A user must be a member of at least one specified group in order to make changes to this account’s cloud resources",
        "VALIDATION_MESSAGE":{
          "cannotContainSpace":"Repository cannot contain space"
        }
      },
      "AUTHENTICATIONTYPE":{
        "TOOLTIP":"Select an authentication type that corresponds to the connection credential parameter.",
        "VALIDATION_MESSAGE":{}
      },
      "TOKEN":{
        "TOOLTIP":"Container Registry Personal Access Token",
        "VALIDATION_MESSAGE":{
          "required":"Token cannot be empty"
        }
      },
      "PASSWORD":{
        "TOOLTIP":"Your docker registry password",
        "VALIDATION_MESSAGE":{
          "required":"Password cannot be empty"
        }
      },
      "USERNAME":{
        "TOOLTIP":"Container Registry User Name",
        "VALIDATION_MESSAGE":{
          "noSpecialCharacters": "User Name cannot contain special characters other than - and _",
          "cannotContainSpace":"User Name cannot contain space",
          "required":"User Name cannot be empty",
          "startingFromNumber": "User Name cannot start with numbers"
        }
      },
      "SPINNAKERTOGGLE":{
        "TOOLTIP":"Toggle on to propagate the change into the CD Tool.",
        "VALIDATION_MESSAGE":{}
      },
      "HOSTURL":{
        "TOOLTIP":"Container Registry Host URL",
        "VALIDATION_MESSAGE":{
          "required":"Host URL cannot be empty",
          "invalidUrl": "Host URL is invalid"
        }
      }
    },
    "GITHUB":{
      "HEADER": "GitHub",
      "BODY":"<span><p>GITHUB integration can be used as a datasource for Approval Gate as well as to configure Spinnaker for GitHub.</p><p><strong>Fields</strong>:</p><ul class='helpTextUl'><li><strong>Account Name</strong>: User-defined account name for your GitHub access.<span class='noBr'>(Example: opsmx-github)</span></li><li><strong>URL</strong>: Github's host address, such as https://github.com</li><li><strong>API URL</strong>: Github's API endpoint host address, <span class='noBr'>such as https://api.github.com</span></li><li><strong>Token</strong>: GitHub personal access token. You can find <a href='https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token' target='_blank'>here</a> how to generate personal access tokens. <span class='noBr'>(Example: ghp_ln1eJK4yuomnY6JREp72IDJC4Hq6Sm)</span></li><li><strong>User Name</strong>: The GitHub username</li><li><strong>Connect to Spinnaker</strong>: Toggle to configure Spinnaker for GitHub</li><li><strong>Permissions</strong>: Enable/disable access to the GITHUB account in Autopilot to specific user groups</li></ul></span>",
      "ACCOUNTNAME":{
        "TOOLTIP":"User-defined account name for your GitHub access.",
        "VALIDATION_MESSAGE":{
          "noSpecialCharacters": "Account Name cannot contain special characters other than -",
          "cannotContainSpace":"Account Name cannot contain space",
          "required":"Account Name cannot be empty",
          "startingFromNumber": "Account Name cannot start with numbers"
        }
      },
      "HOSTURL":{
        "TOOLTIP":"Github's host address, such as https://github.com",
        "VALIDATION_MESSAGE":{
          "required":"Host URL cannot be empty",
          "invalidUrl": "Host URL is invalid"
        }
      },
      "URL":{
        "TOOLTIP":"Github's API endpoint host address, such as https://api.github.com",
        "VALIDATION_MESSAGE":{
          "required":"API URL cannot be empty",
          "invalidUrl": "API URL is invalid"
        }
      },
      "TOKEN":{
        "TOOLTIP":"The user's token",
        "VALIDATION_MESSAGE":{
          "required":"Token cannot be empty"
        }
      },
      "USERNAME":{
        "TOOLTIP":"The GitHub username",
        "VALIDATION_MESSAGE":{
          "noSpecialCharacters": "User Name cannot contain special characters other than - and _",
          "cannotContainSpace":"User Name cannot contain space",
          "required":"User Name cannot be empty",
          "startingFromNumber": "User Name cannot start with numbers"
        }
      },
      "SPINNAKERTOGGLE":{
        "TOOLTIP":"Switch On this toggle to configure the resource in a gitops enabled Spinnaker instance",
        "VALIDATION_MESSAGE":{}
      }
    },
    "GITLAB":{
      "HEADER": "GitLab",
      "BODY":"<span><li><strong>Account Name</strong>: User-defined account name for your GitLab access.</li><li><strong>Host URL</strong>: GitLab's host address, such as https://gitlab.com</li><li><strong>Username</strong>: The GitLab server username </li><li><strong>Token</strong>: The user's personal access token. Please refer <a href='https://docs.gitlab.com/ee/user/profile/personal_access_tokens.html' target='_blank'>this document</a> for generating tokens.</li></span>",
      "ACCOUNTNAME":{
        "TOOLTIP":"User-defined account name for your GitLab access.",
        "VALIDATION_MESSAGE":{
          "noSpecialCharacters": "Account Name cannot contain special characters other than -",
          "cannotContainSpace":"Account Name cannot contain space",
          "required":"Account Name cannot be empty",
          "startingFromNumber": "Account Name cannot start with numbers"
        }
      },
      "HOSTURL":{
        "TOOLTIP":"GitLab's host address, such as https://gitlab.com",
        "VALIDATION_MESSAGE":{
          "required":"Host URL cannot be empty",
          "invalidUrl": "Host URL is invalid"
        }
      },
      "APIBASEURL":{
        "TOOLTIP":"",
        "VALIDATION_MESSAGE":{
          "required":"API URL cannot be empty",
          "invalidUrl": "API URL is invalid"
        }
      },
      "AUTHENTICATIONTYPE":{
        "TOOLTIP":"Select how the external resource confirms the user credentials",
        "VALIDATION_MESSAGE":{}
      },
      "TOKEN":{
        "TOOLTIP":"GitLab token",
        "VALIDATION_MESSAGE":{
          "required":"Token cannot be empty"
        }
      },
      "SPINNAKERTOGGLE":{
        "TOOLTIP":"Switch On this toggle to configure the resource in a gitops enabled Spinnaker instance",
        "VALIDATION_MESSAGE":{}
      }
    },
    "GITREPO":{
      "HEADER": "Git Repo",
      "BODY": "<span><li><strong>Account Name</strong>: User-defined account name for your Git Repo access.</li><li><strong>Authentication Type</strong>: Select an authentication type that corresponds to the connection credential parameter. Recommended using the user token method.</li></span>",
      "ACCOUNTNAME":{
        "TOOLTIP":"User-defined account name for your Git Repo access.",
        "VALIDATION_MESSAGE":{
          "noSpecialCharacters": "Account Name cannot contain special characters other than -",
          "cannotContainSpace":"Account Name cannot contain space",
          "required":"Account Name cannot be empty",
          "startingFromNumber": "Account Name cannot start with numbers"
        }
      },
      "DEPLOYMENT":{
        "TOOLTIP":"This Halyard deployment will be used for Account creation / update",
        "VALIDATION_MESSAGE":{
          "required":"Deployment URL cannot be empty",
          "invalidUrl": "Deployment URL is invalid"
        }
      },
      "AUTHENTICATIONTYPE":{
        "TOOLTIP":"Select an authentication type that corresponds to the connection credential parameter. Recommended using the user token method.",
        "VALIDATION_MESSAGE":{}
      },
      "URL":{
        "TOOLTIP":"",
        "VALIDATION_MESSAGE":{
          "required":"API URL cannot be empty",
          "invalidUrl": "API URL is invalid"
        }
      },
      "TOKEN":{
        "TOOLTIP":"Git token",
        "VALIDATION_MESSAGE":{
          "required":"Token cannot be empty"
        }
      },
      "PASSWORD":{
        "TOOLTIP":"Git password",
        "VALIDATION_MESSAGE":{
          "required":"Password cannot be empty"
        }
      },
      "USERNAME":{
        "TOOLTIP":"Git username",
        "VALIDATION_MESSAGE":{
          "noSpecialCharacters": "User Name cannot contain special characters other than - and _",
          "cannotContainSpace":"User Name cannot contain space",
          "required":"User Name cannot be empty",
          "startingFromNumber": "User Name cannot start with numbers"
        }
      },
      "SPINNAKERTOGGLE":{
        "TOOLTIP":"Switch On this toggle to configure the resource in a gitops enabled Spinnaker instance",
        "VALIDATION_MESSAGE":{}
      }
    },
    "HELM":{
      "HEADER": "Helm",
      "BODY": "<span><li><strong>Account Name</strong>: User-defined account name for target Helm repository access.</li><li><strong>Repository</strong>: Helm Chart Repository’s HTTP endpoint.</li><li><strong>Authentication Type</strong>: Select an authentication type that corresponds to the connection credential parameter.</li><li><strong>Connect to Spinnaker</strong>: Toggle ON to propagate the change to Spinnaker Toggle on to propagate the change into the CD Tool.</li></span>",
      "ACCOUNTNAME":{
        "TOOLTIP":"User-defined account name for target Helm repository access",
        "VALIDATION_MESSAGE":{
          "noSpecialCharacters": "Account Name cannot contain special characters other than -",
          "cannotContainSpace":"Account Name cannot contain space",
          "required":"Account Name cannot be empty",
          "startingFromNumber": "Account Name cannot start with numbers"
        }
      },
      "REPOSITORY":{
        "TOOLTIP":"Helm Chart Repository’s HTTP endpoint",
        "VALIDATION_MESSAGE":{
          "required":"Repository cannot be empty",
          "invalidUrl": "Repository URL is invalid"
        }
      },
      "DEPLOYMENT":{
        "TOOLTIP":"This Halyard deployment will be used for Account creation / update",
        "VALIDATION_MESSAGE":{
        }
      },
      "AUTHENTICATIONTYPE":{
        "TOOLTIP":"Select an authentication type that corresponds to the connection credential parameter.",
        "VALIDATION_MESSAGE":{}
      },
      "TOKEN":{
        "TOOLTIP":"",
        "VALIDATION_MESSAGE":{
          "required":"Token cannot be empty"
        }
      },
      "USERNAME":{
        "TOOLTIP":"User Name",
        "VALIDATION_MESSAGE":{
          "noSpecialCharacters": "User Name cannot contain special characters other than - and _",
          "cannotContainSpace":"User Name cannot contain space",
          "required":"User Name cannot be empty",
          "startingFromNumber": "User Name cannot start with numbers"
        }
      },
      "PASSWORD": {
        "TOOLTIP": "Password",
        "VALIDATION_MESSAGE":{
          "required" : "Password cannot be empty"
        }
      },
      "PASSWORDCOMMAND": {
        "TOOLTIP": "Command to retrieve docker token/password, commands must be available in environment",
        "VALIDATION_MESSAGE":{
        }
      },
      "FILE": {
        "TOOLTIP": "The path to a file containing your docker password in plaintext (not a docker/config.json file)",
        "VALIDATION_MESSAGE": {
        }
      },
      "SPINNAKERTOGGLE":{
        "TOOLTIP":"Toggle on to propagate the change into the CD Tool.",
        "VALIDATION_MESSAGE":{}
      }
    },
    "HTTP":{
      "HEADER": "Http",
      "BODY": "<span><li><strong>Account Name</strong>: User-defined account name for HTTP protocol-based artifacts</li><li><strong>Authentication Type</strong>: Select an authentication type that corresponds to the connection credential parameter.</li><li><strong>Connect to Spinnaker</strong>: Toggle on to propagate the change into the CD Tool.</li></span>",
      "ACCOUNTNAME":{
        "TOOLTIP":"User-defined account name for HTTP protocol-based artifacts",
        "VALIDATION_MESSAGE":{
          "noSpecialCharacters": "Account Name cannot contain special characters other than -",
          "cannotContainSpace":"Account Name cannot contain space",
          "required":"Account Name cannot be empty",
          "startingFromNumber": "Account Name cannot start with numbers"
        }
      },
  
      "AUTHENTICATIONTYPE":{
        "TOOLTIP":"Select an authentication type that corresponds to the connection credential parameter.",
        "VALIDATION_MESSAGE":{}
      },
      "TOKEN":{
        "TOOLTIP":"",
        "VALIDATION_MESSAGE":{
          "required":"Token cannot be empty"
        }
      },
      "USERNAME":{
        "TOOLTIP":"HTTP basic auth User Name",
        "VALIDATION_MESSAGE":{
          "noSpecialCharacters": "User Name cannot contain special characters other than - and _",
          "cannotContainSpace":"User Name cannot contain space",
          "required":"User Name cannot be empty",
          "startingFromNumber": "User Name cannot start with numbers"
        }
      },
      "PASSWORD": {
        "TOOLTIP": "Password",
        "VALIDATION_MESSAGE":{
          "required" : "Password cannot be empty"
        }
      },
      "PASSWORDCOMMAND": {
        "TOOLTIP": "Command to retrieve docker token/password, commands must be available in environment",
        "VALIDATION_MESSAGE":{
        }
      },
      "FILE": {
        "TOOLTIP": "The path to a file containing your docker password in plaintext (not a docker/config.json file)",
        "VALIDATION_MESSAGE": {
        }
      },
      "SPINNAKERTOGGLE":{
        "TOOLTIP":"Toggle on to propagate the change into the CD Tool.",
        "VALIDATION_MESSAGE":{}
      }
    },
    "GCS":{
      "HEADER": "GCS",
      "BODY": "<span><p><strong>Fields</strong>:</p><ul class='helpTextUl'></ul><li><strong>Account Name</strong>: User-defined account name for your Google Cloud Storage access.</li><li><strong>Authentication Type</strong>: Select an authentication type that corresponds to the connection credential parameter. </li><li><strong>Json-Key file</strong>: Configures Google service account’s json file </li><li><strong>Connect to Spinnaker</strong>: Toggle on to propagate the change into the CD Tool. </li></ul></span>",
      "ACCOUNTNAME":{
        "TOOLTIP":"User-defined account name for your Google Cloud Storage access.",
        "VALIDATION_MESSAGE":{
          "noSpecialCharacters": "Account Name cannot contain special characters other than -",
          "cannotContainSpace":"Account Name cannot contain space",
          "required":"Account Name cannot be empty",
          "startingFromNumber": "Account Name cannot start with numbers"
        }
      },
      "AUTHENTICATIONTYPE":{
        "TOOLTIP":"Select an authentication type that corresponds to the connection credential parameter.",
        "VALIDATION_MESSAGE":{}
      },
      "FILE": {
        "TOOLTIP": "Configures Google service account’s json file",
        "VALIDATION_MESSAGE": {
        }
      },
      "SPINNAKERTOGGLE":{
        "TOOLTIP":"Toggle on to propagate the change into the CD Tool.",
        "VALIDATION_MESSAGE":{}
      }
    },
    "ECR":{
      "HEADER": "ECR",
      "BODY": "<span><p><strong>Fields</strong>:</p><ul class='helpTextUl'><li><strong>Account Name</strong>: User-defined account name for your ECR Docker registry access.</li><li><strong>Registry URL</strong>: The registry URL from which you want to pull and deploy images. <span class='noBr'> For example:https://aws_account_id.dkr.ecr.region.amazonaws.com</span></li><li><strong>Email</strong>: Users docker registry email. If no value is specified, the default value of fake.email@spinnaker.io will be used.</li><li><strong>Repositories</strong>: An optional list of repositories to cache images from. If not provided, Spinnaker will try to read the list of accessible repositories from the registries _catalog endpoint. <span class='noBr'> Example: library/ubuntu (Public repositories are prefixed with library/)</span></li><li><strong>Authentication Type</strong>: Select an authentication type that corresponds to the connection credential parameter.</li><li><strong>Connect to Spinnaker</strong>: Toggle on to propagate the change into the CD Tool.</li></ul></span>",
      "ACCOUNTNAME":{
        "TOOLTIP":"User-defined account name for your ECR Docker registry access.",
        "VALIDATION_MESSAGE":{
          "noSpecialCharacters": "Account Name cannot contain special characters other than -",
          "cannotContainSpace":"Account Name cannot contain space",
          "required":"Account Name cannot be empty",
          "startingFromNumber": "Account Name cannot start with numbers"
        }
      },
      "REPOSITORIES":{
        "TOOLTIP":"Users docker registry email. If no value is specified, the default value of fake.email@spinnaker.io will be used.",
        "VALIDATION_MESSAGE":{
          "cannotContainSpace":"Repository cannot contain space",
          "startingFromNumber": "Repository cannot start with numbers"
        }
      },
      "REGISTRYURL":{
        "TOOLTIP":"The registry URL from which you want to pull and deploy images. For example:https://aws_account_id.dkr.ecr.region.amazonaws.com",
        "VALIDATION_MESSAGE":{
          "required" : "Registry URL cannot be empty"
        }
      },
      "GROUPMEMBERSHIP":{
        "TOOLTIP":"A user must be a member of at least one specified group in order to make changes to this account’s cloud resources",
        "VALIDATION_MESSAGE":{
          "cannotContainSpace":"Repository cannot contain space"
        }
      },
      "REGION": {
        "TOOLTIP": "AWS region"
      },
      "EMAIL":{
        "TOOLTIP":"An optional list of repositories to cache images from. If not provided, Spinnaker will try to read the list of accessible repositories from the registries _catalog endpoint. Example: library/ubuntu (Public repositories are prefixed with library/)",
        "VALIDATION_MESSAGE":{
          "email":"Email Id is invalid",
          "required":"Email Id cannot be empty"
        }
      },
      "AUTHENTICATIONTYPE":{
        "TOOLTIP":"Select an authentication type that corresponds to the connection credential parameter.",
        "VALIDATION_MESSAGE":{}
      },
      "TOKEN":{
        "TOOLTIP":"",
        "VALIDATION_MESSAGE":{
          "required":"Token cannot be empty"
        }
      },
      "USERNAME":{
        "TOOLTIP":"Your docker registry username",
        "VALIDATION_MESSAGE":{
          "noSpecialCharacters": "User Name cannot contain special characters other than - and _",
          "cannotContainSpace":"User Name cannot contain space",
          "required":"User Name cannot be empty",
          "startingFromNumber": "User Name cannot start with numbers"
        }
      },
      "PASSWORD": {
        "TOOLTIP": "Your docker registry password",
        "VALIDATION_MESSAGE":{
        }
      },
      "PASSWORDCOMMAND": {
        "TOOLTIP": "Command to retrieve docker token/password, commands must be available in environment",
        "VALIDATION_MESSAGE":{
          "required" : "Password-command cannot be empty"
        }
      },
      "FILE": {
        "TOOLTIP": "The path to a file containing your docker password in plaintext (not a docker/config.json file)",
        "VALIDATION_MESSAGE": {
        }
      },
      "SPINNAKERTOGGLE":{
        "TOOLTIP":"Toggle on to propagate the change into the CD Tool.",
        "VALIDATION_MESSAGE":{}
      }
    },
    "PUBSUB":{
      "HEADER": "PUBSUB",
      "BODY": "<span><li><strong>Account Name</strong>: User-defined account name for your Google Cloud Pub/Sub access.</li></span>",
      "ACCOUNTNAME":{
        "TOOLTIP":"User-defined account name for your Google Cloud Pub/Sub access.",
        "VALIDATION_MESSAGE":{
          "noSpecialCharacters": "Account Name cannot contain special characters other than -",
          "cannotContainSpace":"Account Name cannot contain space",
          "required":"Account Name cannot be empty",
          "startingFromNumber": "Account Name cannot start with numbers"
        }
      },
      "PROJECTNAME": {
        "TOOLTIP": "The name of the GCP project your subscription lives in",
        "VALIDATION_MESSAGE":{
          "cannotContainSpace":"Project Name cannot contain space",
          "required":"Project Name cannot be empty"
        }
      },
      "SUBSCRIPTIONNAME": {
        "TOOLTIP": "The name of the subscription to listen to. This identifier does not include the name of the project, and must already be configured for Spinnaker to work.",
        "VALIDATION_MESSAGE":{
          "cannotContainSpace":"Subscription Name cannot contain space",
          "required":"Subscription Name cannot be empty"
        }
      },
      "MESSAGEFORMAT": {
        "TOOLTIP":"Supporting Message Formats: GCB,GCS,GCR,CUSTOM",
        "VALIDATION_MESSAGE": {}
      },
      "TEMPLATEFILE": {
        "TOOLTIP":"Applicable only for CUSTOM message format",
        "VALIDATION_MESSAGE": {}
      },
      "AUTHENTICATIONTYPE":{
        "TOOLTIP":"Select how the external resource confirms the user credentials",
        "VALIDATION_MESSAGE":{}
      },
      "FILE": {
        "TOOLTIP": "JSON service account that Spinnaker will use as credentials",
        "VALIDATION_MESSAGE": {
        }
      },
      "SPINNAKERTOGGLE":{
        "TOOLTIP":"Switch On this toggle to configure the resource in a gitops enabled Spinnaker instance",
        "VALIDATION_MESSAGE":{}
      }
    },
    "GCB":{
      "HEADER": "GCB",
      "BODY": "",
      "ACCOUNTNAME":{
        "TOOLTIP":"The name of the account to operate on",
        "VALIDATION_MESSAGE":{
          "noSpecialCharacters": "Account Name cannot contain special characters other than -",
          "cannotContainSpace":"Account Name cannot contain space",
          "required":"Account Name cannot be empty",
          "startingFromNumber": "Account Name cannot start with numbers"
        }
      },
      "PROJECTNAME": {
        "TOOLTIP": "The name of the GCP project in which to trigger and monitor builds",
        "VALIDATION_MESSAGE":{
          "cannotContainSpace":"Project Name cannot contain space",
          "required":"Project Name cannot be empty"
        }
      },
      "SUBSCRIPTIONNAME": {
        "TOOLTIP": "The name of the PubSub subscription on which to listen for build changes",
        "VALIDATION_MESSAGE":{
          "cannotContainSpace":"Subscription Name cannot contain space",
          "required":"Subscription Name cannot be empty"
        }
      },
      "AUTHENTICATIONTYPE":{
        "TOOLTIP":"Select how the external resource confirms the user credentials",
        "VALIDATION_MESSAGE":{}
      },
      "FILE": {
        "TOOLTIP": "JSON service account that Spinnaker will use as credentials",
        "VALIDATION_MESSAGE": {
        }
      },
      "USERNAME":{
        "TOOLTIP":"GCB User Name",
        "VALIDATION_MESSAGE":{
          "noSpecialCharacters": "User Name cannot contain special characters other than - and _",
          "cannotContainSpace":"User Name cannot contain space",
          "required":"User Name cannot be empty",
          "startingFromNumber": "User Name cannot start with numbers"
        }
      },
      "PASSWORD": {
        "TOOLTIP": "Password",
        "VALIDATION_MESSAGE":{
        }
      },
      "SPINNAKERTOGGLE":{
        "TOOLTIP":"Switch On this toggle to configure the resource in a gitops enabled Spinnaker instance",
        "VALIDATION_MESSAGE":{}
      }
    },
    "GCR":{
      "HEADER": "GCR",
      "BODY": "<span><p><strong>Fields</strong>:</p><ul class='helpTextUl'><li><strong>Account Name</strong>: User-defined account name for your GCR Docker registry access.</li><li><strong>Registry URL</strong>: The registry URL from which you want to pull and deploy images. <span class='noBr'> For example: https://gcr.io - Global GCR, https://[us|eu|asia].gcr.io - Regional GCR</span></li><li><strong>Email</strong>: Users docker registry email. If no value is specified, the default value of fake.email@spinnaker.io will be used.</li><li><strong>Repositories</strong>: An optional list of repositories to cache images from. If not provided, Spinnaker will try to read the list of accessible repositories from the registries _catalog endpoint. <span class='noBr'> Example: library/ubuntu (Public repositories are prefixed with library/)</span></li><li><strong>Authentication Type</strong>: Select an authentication type that corresponds to the connection credential parameter.</li><li><strong>Connect to Spinnaker</strong>: Toggle on to propagate the change into the CD Tool.</li></ul></span>",
      "ACCOUNTNAME":{
        "TOOLTIP":"User-defined account name for your GCR Docker registry access.",
        "VALIDATION_MESSAGE":{
          "noSpecialCharacters": "Account Name cannot contain special characters other than -",
          "cannotContainSpace":"Account Name cannot contain space",
          "required":"Account Name cannot be empty",
          "startingFromNumber": "Account Name cannot start with numbers"
        }
      },
      "AUTHENTICATIONTYPE":{
        "TOOLTIP":"Select an authentication type that corresponds to the connection credential parameter.",
        "VALIDATION_MESSAGE":{}
      },
      "REPOSITORIES":{
        "TOOLTIP":"An optional list of repositories to cache images from. If not provided, Spinnaker will try to read the list of accessible repositories from the registries _catalog endpoint. Example: library/ubuntu (Public repositories are prefixed with library/)",
        "VALIDATION_MESSAGE":{
          "cannotContainSpace":"Repository cannot contain space",
          "startingFromNumber": "Repository cannot start with numbers"
        }
      },
      "REGISTRYURL":{
        "TOOLTIP":"The registry URL from which you want to pull and deploy images. For example: https://gcr.io - Global GCR, https://[us|eu|asia].gcr.io - Regional GCR",
        "VALIDATION_MESSAGE":{
          "required" : "Registry URL cannot be empty"
        }
      },
      "REQUIREDGROUPMEMBERSHIP":{
        "TOOLTIP":"A user must be a member of at least one specified group in order to make changes to this account’s cloud resources",
        "VALIDATION_MESSAGE":{
          "cannotContainSpace":"Repository cannot contain space"
        }
      },
      "EMAIL":{
        "TOOLTIP":"Users docker registry email. If no value is specified, the default value of fake.email@spinnaker.io will be used.",
        "VALIDATION_MESSAGE":{
          "email":"Email Id is invalid",
          "required":"Email Id cannot be empty"
        }
      },
      "URL":{
        "TOOLTIP":"",
        "VALIDATION_MESSAGE":{
          "required":"API URL cannot be empty",
          "invalidUrl": "API URL is invalid"
        }
      },
      "TOKEN":{
        "TOOLTIP":"",
        "VALIDATION_MESSAGE":{
          "required":"Token cannot be empty"
        }
      },
      "USERNAME":{
        "TOOLTIP":"GCR User Name",
        "VALIDATION_MESSAGE":{
          "noSpecialCharacters": "User Name cannot contain special characters other than - and _",
          "cannotContainSpace":"User Name cannot contain space",
          "required":"User Name cannot be empty",
          "startingFromNumber": "User Name cannot start with numbers"
        }
      },
      "PASSWORD": {
        "TOOLTIP": "Your docker registry password",
        "VALIDATION_MESSAGE":{
          "required" : "Password cannot be empty"
        }
      },
      "PASSWORDCOMMAND": {
        "TOOLTIP": "Command to retrieve docker token/password, commands must be available in environment",
        "VALIDATION_MESSAGE":{
          "required" : "Password-command cannot be empty"
        }
      },
      "FILE": {
        "TOOLTIP": "The path to a file containing your docker password in plaintext (not a docker/config.json file)",
        "VALIDATION_MESSAGE": {
        }
      },
      "SPINNAKERTOGGLE":{
        "TOOLTIP":"Toggle on to propagate the change into the CD Tool.",
        "VALIDATION_MESSAGE":{}
      }
    },
    "BAMBOO":{
        "HEADER": "Bamboo CI",
        "BODY":" <span><p>Bamboo CI integration can be used as a datasource for Approval Gate.</p><p><strong>Fields</strong>:</p><ul class='helpTextUl'> <li><strong>Name</strong>: User defined name for the Bamboo CI Account <span class='noBr'>(Example: opsmx-bamboo)</span></li><li><strong>Endpoint</strong>: Bamboo CI URL <span class='noBr'>(Example: https://xyz.mybamboo.com)</span></li><li><strong>Token</strong>: Bamboo CI personal access token. You can find <a href='https://confluence.atlassian.com/bamboo/personal-access-tokens-976779873.html' target='_blank'>here</a> how to generate personal access tokens. <span>(Example: YmFrwqw0w9r90skfsOk9wcdd014p98kklw==)</span></li><li><strong>User Name</strong>: Bamboo CI User Name</li><li><strong>Password</strong>: Bamboo CI Password</li><li><strong>Permissions</strong>: Enable/disable access to the Bamboo CI account in Autopilot to specific usergroups</li></ul></span>",
        "ACCOUNTNAME":{
          "TOOLTIP":"The name of the account to operate on",
          "VALIDATION_MESSAGE":{
          "noSpecialCharacters": "Account Name cannot contain special characters other than -",
          "cannotContainSpace":"Account Name cannot contain space",
          "required":"Account Name cannot be empty",
          "startingFromNumber": "Account Name cannot start with numbers"
        }
        },
        "ENDPOINT":{
          "TOOLTIP":"Bamboo URL",
          "VALIDATION_MESSAGE":{
            "required":"Bamboo End Point cannot be empty",
            "invalidUrl": "Bamboo End Point URL is invalid"
          }
        },
        "AUTHENTICATIONTYPE":{
          "TOOLTIP":"Select how the external resource confirms the user credentials",
          "VALIDATION_MESSAGE":{}
        },
        "TOKEN":{
          "TOOLTIP":"Your Bamboo token",
          "VALIDATION_MESSAGE":{
            "required":"Token cannot be empty"
          }
        },
        "USERNAME":{
          "TOOLTIP":"Your Bamboo username",
          "VALIDATION_MESSAGE":{
            "noSpecialCharacters": "User Name cannot contain special characters other than - and _",
            "cannotContainSpace":"User Name cannot contain space",
            "required":"User Name cannot be empty",
            "startingFromNumber": "User Name cannot start with numbers"
          }
        },
        "PASSWORD":{
          "TOOLTIP":"Your Bamboo password",
          "VALIDATION_MESSAGE":{
            "required":"Password cannot be empty"
          }
        }
      },
      "JENKINS":{
        "HEADER":"Jenkins",
        "BODY":"<span><p>Jenkins integration can be used as a datasource for Approval Gate as well as to configure Spinnaker for Jenkins.</p><p><strong>Fields</strong>:</p><ul class='helpTextUl'><li><strong>Account Name</strong>: User-defined account name for your Jenkins access. <span class='noBr'>(Example: opsmx-jenkins)</span></li><li><strong>Host URL</strong>: Jenkins host address, <span class='noBr'>such as https://jenkins.opsmx.net</span></li><li><strong>Authentication Type</strong>: Select an authentication type that corresponds to the connection credential parameter. It is preferable to use token authentication with username and token. </li><li><strong>Token</strong>: Jenkins personal access token. You can find <a href='https://www.jenkins.io/doc/book/using/using-credentials/' target='_blank'>here</a> how to generate personal access tokens. <span>(Example: 77d67609a841b1811a114b7fbfa109b3c2)</span></li><li><strong>CSRF</strong>: Recommended to toggle on the CSRF (Cross-Site Request Forgery) flag</li><li><strong>User Name</strong>: Jenkins User Name</li><li><strong>Password</strong>: Jenkins Password</li><li><strong>Connect to Spinnaker</strong>: Toggle to configure Spinnaker for Jenkins</li><li><strong>Permissions</strong>: Enable/disable access to the Jenkins account in Autopilot to specific user groups</li></ul></span>",
        "ACCOUNTNAME":{
          "TOOLTIP":"User-defined account name for your Jenkins access.",
          "VALIDATION_MESSAGE":{
          "noSpecialCharacters": "Account Name cannot contain special characters other than -",
          "cannotContainSpace":"Account Name cannot contain space",
          "required":"Account Name cannot be empty",
          "startingFromNumber": "Account Name cannot start with numbers"
        }
        },
        "HOSTURL":{
          "TOOLTIP":"Jenkins host address, such as https://jenkins.opsmx.net",
          "VALIDATION_MESSAGE":{
            "required":"Host URL cannot be empty",
            "invalidUrl": "Host URL is invalid"
          }
        },
        "CSRFFLAG":{
          "TOOLTIP":"Recommended to toggle on the CSRF (Cross-Site Request Forgery) flag."
        },
        "AUTHENTICATIONTYPE":{
          "TOOLTIP":"Select an authentication type that corresponds to the connection credential parameter. It is preferable to use token authentication with username and token.",
          "VALIDATION_MESSAGE":{}
        },
        "TOKEN":{
          "TOOLTIP":"Your Jenkins token",
          "VALIDATION_MESSAGE":{
            "required":"Token cannot be empty"
          }
        },
        "USERNAME":{
          "TOOLTIP":"Your Jenkins username",
          "VALIDATION_MESSAGE":{
            "noSpecialCharacters": "User Name cannot contain special characters other than - and _",
            "cannotContainSpace":"User Name cannot contain space",
            "required":"User Name cannot be empty",
            "startingFromNumber": "User Name cannot start with numbers"
          }
        },
        "PASSWORD":{
          "TOOLTIP":"Your Jenkins password",
          "VALIDATION_MESSAGE":{
            "required":"Password cannot be empty"
          }
        },
        "SPINNAKERTOGGLE":{
          "TOOLTIP":"Switch On this toggle to configure the resource in a gitops enabled Spinnaker instance",
          "VALIDATION_MESSAGE":{}
        }
      },
      "JIRA":{
        "HEADER": "Jira",
        "BODY":"",
        "ACCOUNTNAME":{
          "TOOLTIP":"User defined name for the Jira account",
          "VALIDATION_MESSAGE":{
          "noSpecialCharacters": "Account Name cannot contain special characters other than -",
          "cannotContainSpace":"Account Name cannot contain space",
          "required":"Account Name cannot be empty",
          "startingFromNumber": "Account Name cannot start with numbers"
        }
        },
        "EMAIL":{
          "TOOLTIP":"Jira Email Id",
          "VALIDATION_MESSAGE":{
            "email":"Email Id is invalid",
            "required":"Email Id cannot be empty"
          }
        },
        "TOKEN":{
          "TOOLTIP":"Jira Personal Access Token",
          "VALIDATION_MESSAGE":{
            "required":"Token cannot be empty"
          }
        },
        "HOSTURL":{
          "TOOLTIP":"Jira Host URL",
          "VALIDATION_MESSAGE":{
            "required":"Host URL cannot be empty",
            "invalidUrl": "Host URL is invalid"
          }
        },
        "SPINNAKERTOGGLE":{
          "TOOLTIP":"Switch On this toggle to configure the resource in a gitops enabled Spinnaker instance",
          "VALIDATION_MESSAGE":{}
        }
      },
      "SERVICENOW":{
        "HEADER": "Service Now",
        "BODY":"<span><p>Service integration can be used to configure ServiceNow Custom stages in Spinnaker. In addition, it can also be used as a datasource for Approval Gate.</p><p><strong>Fields</strong>:</p><ul class='helpTextUl'><li><strong>Account Name</strong>: User defined name for the Service Account <span class='noBr'>(Example: myservicenow)</span></li><li><strong>Host URL</strong>: ServiceNow URL <span class='noBr'>(Example: https://servicenow.opsmx.com)</span></li><li><strong>User Name</strong>: ServiceNow User Name, for authentication</li><li><strong>Password</strong>: ServiceNow Password for the User who is authenticated</li><li><strong>Connect to Spinnaker</strong>: Toggle to configure Spinnaker for ServiceNow</li><li><strong>Permissions</strong>: Enable/disable access to the ServiceNow account in Autopilot to specific usergroups</li></ul></span>",
        "ACCOUNTNAME":{
          "TOOLTIP":"User defined name for the Service Now account",
          "VALIDATION_MESSAGE":{
          "noSpecialCharacters": "Account Name cannot contain special characters other than -",
          "cannotContainSpace":"Account Name cannot contain space",
          "required":"Account Name cannot be empty",
          "startingFromNumber": "Account Name cannot start with numbers"
        }
        },
        "USERNAME":{
          "TOOLTIP":"Service Now User Name",
          "VALIDATION_MESSAGE":{
            "noSpecialCharacters": "User Name cannot contain special characters other than - and _",
            "cannotContainSpace":"User Name cannot contain space",
            "required":"User Name cannot be empty",
            "startingFromNumber": "User Name cannot start with numbers"
          }
        },
        "PASSWORD":{
          "TOOLTIP":"Service Now Password",
          "VALIDATION_MESSAGE":{
            "required":"Password cannot be empty"
          }
        },
        "HOSTURL":{
          "TOOLTIP":"Service Now Host URL",
          "VALIDATION_MESSAGE":{
            "required":"Host URL cannot be empty",
            "invalidUrl": "Host URL is invalid"
          }
        }
      }
      ,
      "APPDYNAMICS":{
        "HEADER": "APPDYNAMICS",
        "BODY":"",
        "ACCOUNTNAME":{
          "TOOLTIP":"User defined name for the APPDYNAMICS account",
          "VALIDATION_MESSAGE":{
          "noSpecialCharacters": "Account Name cannot contain special characters other than -",
          "cannotContainSpace":"Account Name cannot contain space",
          "required":"Account Name cannot be empty",
          "startingFromNumber": "Account Name cannot start with numbers"
        }
        },
        "CONTROLLERHOST":{
          "TOOLTIP":"APPDYNAMICS Controller Host",
          "VALIDATION_MESSAGE":{
            "required":"Controller Host  cannot be empty",
            "invalidUrl": "Controller Host URL is invalid"
          }
        },
        "TEMPORARYACCESSTOKEN":{
          "TOOLTIP":"APPDYNAMICS Personal Temporary Access Token",
          "VALIDATION_MESSAGE":{
            "required":"Temporary Access Token cannot be empty"
          }
        }
      },
      "CLOUDWATCH":{
        "HEADER": "AWS-CLOUDWATCH",
        "BODY":"",
        "ACCOUNTNAME":{
          "TOOLTIP":"User defined name for the AWS-CLOUDWATCH account",
          "VALIDATION_MESSAGE":{
          "noSpecialCharacters": "Account Name cannot contain special characters other than -",
          "cannotContainSpace":"Account Name cannot contain space",
          "required":"Account Name cannot be empty",
          "startingFromNumber": "Account Name cannot start with numbers"
        }
        },
        "ACCESS_ID":{
          "TOOLTIP":"AWS-CLOUDWATCH Access Key Id",
          "VALIDATION_MESSAGE":{
            "required":"Access Key Id cannot be empty"
          }
        },
        "SECRET_KEY":{
          "TOOLTIP":"AWS-CLOUDWATCH Secret Access Key",
          "VALIDATION_MESSAGE":{
            "required":"Secret Access Key cannot be empty"
          }
        }
      },
      "DATADOG":{
        "HEADER": "DATADOG",
        "BODY":"",
        "ACCOUNTNAME":{
          "TOOLTIP":"User defined name for the DATADOG account",
          "VALIDATION_MESSAGE":{
          "noSpecialCharacters": "Account Name cannot contain special characters other than -",
          "cannotContainSpace":"Account Name cannot contain space",
          "required":"Account Name cannot be empty",
          "startingFromNumber": "Account Name cannot start with numbers"
        }
        },
        "API_KEY":{
          "TOOLTIP":"DATADOG Api Key",
          "VALIDATION_MESSAGE":{
            "required":"API key cannot be empty"
          }
        },
        "APPLICATION_KEY":{
          "TOOLTIP":"DATADOG Application Key",
          "VALIDATION_MESSAGE":{
            "required":"Application Key cannot be empty"
          }
        }
      },
      "DYNATRACE":{
        "HEADER": "Dynatrace",
        "BODY":"",
        "ACCOUNTNAME":{
          "TOOLTIP":"User defined name for the Dynatrace account",
          "VALIDATION_MESSAGE":{
          "noSpecialCharacters": "Account Name cannot contain special characters other than -",
          "cannotContainSpace":"Account Name cannot contain space",
          "required":"Account Name cannot be empty",
          "startingFromNumber": "Account Name cannot start with numbers"
        }
        },
        "END_POINT":{
          "TOOLTIP":"Dynatrace URL",
          "VALIDATION_MESSAGE":{
            "required":"Endpoint Url cannot be empty",
            "invalidUrl": "Endpoint URL is invalid"
          }
        },
        "API_TOKEN":{
          "TOOLTIP":"Dynatrace Personal Access Token",
          "VALIDATION_MESSAGE":{
            "required":"Api Token cannot be empty"
          }
        }
      },
      "ELASTICSEARCH":{
        "HEADER": "Elasticsearch",
        "BODY":"<span><li><strong>Account Name</strong>: User-defined account name for your Elasticsearch access.</li><li><strong>Endpoint</strong>: Elasticsearch host address, from which you access the Elasticsearch</li><li><strong>Username</strong>: Elasticsearch username </li><li><strong>Password</strong>: Elasticsearch password</li><li><strong>Kibana Endpoint</strong>: Elasticsearch Kibana host address, from which you access the Elasticsearch Kibana</li><li><strong>Kibana username</strong>: Elasticsearch Kibana username</li><li><strong>Kibana Password</strong>: Elasticsearch Kibana password</li><span>",
        "ACCOUNTNAME":{
          "TOOLTIP":"User-defined account name for your Elasticsearch access.",
          "VALIDATION_MESSAGE":{
          "noSpecialCharacters": "Account Name cannot contain special characters other than -",
          "cannotContainSpace":"Account Name cannot contain space",
          "required":"Account Name cannot be empty",
          "startingFromNumber": "Account Name cannot start with numbers"
        }
        },
        "ENDPOINT":{
          "TOOLTIP":"Elasticsearch host address, from which you access the Elasticsearch",
          "VALIDATION_MESSAGE":{
            "required":"Elastic End Point cannot be empty",
            "invalidUrl": "Elastic End Poin URL is invalid"
          }
        },
        "USERNAME":{
          "TOOLTIP":"Elasticsearch username",
          "VALIDATION_MESSAGE":{
            "noSpecialCharacters": "User Name cannot contain special characters other than - and _",
            "cannotContainSpace":"User Name cannot contain space",
            "startingFromNumber": "User Name cannot start with numbers"
          }
        },
        "PASSWORD":{
          "TOOLTIP":"Elasticsearch password",
          "VALIDATION_MESSAGE":{
            "required":"Password cannot be empty"
          }
        },
        "KIBANAENDPOINT":{
          "TOOLTIP":"Elasticsearch Kibana host address, from which you access the Elasticsearch Kibana",
          "VALIDATION_MESSAGE":{
            "required":"Kibana End Point cannot be empty",
            "invalidUrl": "Kibana End Poin URL is invalid"
          }
        },
        "KIBANAUSERNAME":{
          "TOOLTIP":"Elasticsearch Kibana username",
          "VALIDATION_MESSAGE":{
            "noSpecialCharacters": "Kibana User Name cannot contain special characters other than - and _",
            "cannotContainSpace":"Kibana User Name cannot contain space",
            "required":"Kibana User Name cannot be empty",
            "startingFromNumber": "Kibana User Name cannot start with numbers"
          }
        },
        "KIBANAPASSWORD":{
          "TOOLTIP":"Elasticsearch Kibana password",
          "VALIDATION_MESSAGE":{
            "required":"Kibana Password cannot be empty"
          }
        }
      },
        "GRAPHITE":{
          "HEADER": "Graphite",
          "BODY":"<span><li><strong>Account Name</strong>: User-defined account name for your Graphite access.</li><li><strong>Endpoint</strong>: Graphite host address, from which you access the Graphite </li></span>",
          "ACCOUNTNAME":{
            "TOOLTIP":"User-defined account name for your Graphite access.",
            "VALIDATION_MESSAGE":{
          "noSpecialCharacters": "Account Name cannot contain special characters other than -",
          "cannotContainSpace":"Account Name cannot contain space",
          "required":"Account Name cannot be empty",
          "startingFromNumber": "Account Name cannot start with numbers"
        }
          },
          "URL":{
            "TOOLTIP":"Graphite host address, from which you access the Graphite",
            "VALIDATION_MESSAGE":{
              "required":"End Point cannot be empty",
              "invalidUrl": "End Point URL is invalid"
            }
          }
        },
        "GRAYLOG":{
          "HEADER": "GRAYLOG",
          "BODY":"<span><li><strong>Account Name</strong>: User-defined account name for your Graylog access.</li><li><strong>Endpoint</strong>: Graylog host address, from which you access the Graylog </li><li><strong>Token</strong>: The user's token </li></span>",
          "ACCOUNTNAME":{
            "TOOLTIP":"User-defined account name for your Graylog access.",
            "VALIDATION_MESSAGE":{
          "noSpecialCharacters": "Account Name cannot contain special characters other than -",
          "cannotContainSpace":"Account Name cannot contain space",
          "required":"Account Name cannot be empty",
          "startingFromNumber": "Account Name cannot start with numbers"
        }
          },
          "ENDPOINT":{
            "TOOLTIP":"Graylog host address, from which you access the Graylog",
            "VALIDATION_MESSAGE":{
              "required":"End Point cannot be empty",
              "invalidUrl": "End Point URL is invalid"
            }
          },
          "TOKEN":{
            "TOOLTIP":"GrayLog Personal Access Token",
            "VALIDATION_MESSAGE":{
              "required":"Token cannot be empty"
            }
          }
        },
        "NEWRELIC":{
          "HEADER": "New Relic",
          "BODY":"<span><li><strong>Account Name</strong>: User-defined account name for your NewRelic access.</li><li><strong>Api Key</strong>: The user's token to authenticate with Newrelic</li><li><strong>Application Key</strong>: The application key identifies which account the incoming data belongs to.</li><li><strong>Account ID</strong>: Provide account ID to identify the account </li><li><strong>Query Key</strong>: Provide a query key to filter the data </li></span>",
          "ACCOUNTNAME":{
            "TOOLTIP":"User-defined account name for your NewRelic access.",
            "VALIDATION_MESSAGE":{
          "noSpecialCharacters": "Account Name cannot contain special characters other than -",
          "cannotContainSpace":"Account Name cannot contain space",
          "required":"Account Name cannot be empty",
          "startingFromNumber": "Account Name cannot start with numbers"
        }
          },
          "APIKEY":{
            "TOOLTIP":"NewRelic Api Key",
            "VALIDATION_MESSAGE":{
              "required":"API key cannot be empty"
            }
          },
          "APPLICATIONKEY":{
            "TOOLTIP":"The application key identifies which account the incoming data belongs to.",
            "VALIDATION_MESSAGE":{
              "required":"Application Key cannot be empty"
            }
          },
          "ACCOUNTID":{
            "TOOLTIP":"Provide account ID to identify the account",
            "VALIDATION_MESSAGE":{
              "required":"Account Id cannot be empty"
            }
          },
          "QUERYKEY":{
            "TOOLTIP":"Provide a query key to filter the data",
            "VALIDATION_MESSAGE":{
              "required":"Query Key cannot be empty"
            }
          }
        },
        "PROMETHEUS":{
          "HEADER": "Prometheus",
          "BODY":"<span><li><strong>Account Name</strong>: User-defined account name for your Prometheus access.</li><li><strong>Endpoint</strong>: Prometheus host address, from which you access the Prometheus</li><li><strong>Username</strong>: Prometheus username</li><li><strong>Password</strong>: Prometheus password</li></span>",
          "ACCOUNTNAME":{
            "TOOLTIP":"User-defined account name for your Prometheus access.",
            "VALIDATION_MESSAGE":{
          "noSpecialCharacters": "Account Name cannot contain special characters other than -",
          "cannotContainSpace":"Account Name cannot contain space",
          "required":"Account Name cannot be empty",
          "startingFromNumber": "Account Name cannot start with numbers"
        }
          },
          "ENDPOINT":{
            "TOOLTIP":"Prometheus host address, from which you access the Prometheus",
            "VALIDATION_MESSAGE":{
              "required":"End Point cannot be empty",
              "invalidUrl": "End Point URL is invalid"
            }
          },
          "USERNAME":{
            "TOOLTIP":"Prometheus username",
            "VALIDATION_MESSAGE":{
              "noSpecialCharacters": "User Name cannot contain special characters other than - and _",
              "cannotContainSpace":"User Name cannot contain space",
              "required":"User Name cannot be empty",
              "startingFromNumber": "User Name cannot start with numbers"
            }
          },
          "PASSWORD":{
            "TOOLTIP":"Prometheus password",
            "VALIDATION_MESSAGE":{
              "required":"Password cannot be empty"
            }
          }
        },
        "SPLUNK":{
          "HEADER": "Splunk",
          "BODY":"<span><li><strong>Account Name</strong>: User-defined account name for your Splunk access.</li><li><strong>Splunk Url</strong>: Splunk host address, from which you access the Splunk</li><li><strong>Username</strong>: The Splunk's username</li><li><strong>Password</strong>: Splunk's password</li><li><strong>Splunk DashBoard Url </strong>: Splunk Dashboard URL that you want to access </li><span>",
          "ACCOUNTNAME":{
            "TOOLTIP":"User-defined account name for your Splunk access.",
            "VALIDATION_MESSAGE":{
          "noSpecialCharacters": "Account Name cannot contain special characters other than -",
          "cannotContainSpace":"Account Name cannot contain space",
          "required":"Account Name cannot be empty",
          "startingFromNumber": "Account Name cannot start with numbers"
        }
          },
          "END_POINT":{
            "TOOLTIP":"Splunk host address, from which you access the Splunk",
            "VALIDATION_MESSAGE":{
              "required":"Splunk Url  cannot be empty",
              "invalidUrl": "Splunk Url is invalid"
            }
          },
          "PASSWORD":{
            "TOOLTIP":"Splunk's password",
            "VALIDATION_MESSAGE":{
              "required":"Password cannot be empty"
            }
          },
          "USER_NAME":{
            "TOOLTIP":"Splunk's user name",
            "VALIDATION_MESSAGE":{
          "noSpecialCharacters": "Account Name cannot contain special characters other than -",
          "cannotContainSpace":"Account Name cannot contain space",
          "required":"Account Name cannot be empty",
          "startingFromNumber": "Account Name cannot start with numbers"
        }
          },
          "DASHBOARD_ENDPOINT":{
            "TOOLTIP":"Splunk Dashboard URL that you want to access",
            "VALIDATION_MESSAGE":{
              "required":"Splunk DashBoard Url cannot be empty",
              "invalidUrl": "Splunk DashBoard Url is invalid"
            }
          }
        },
        "STACKDRIVER":{
          "HEADER": "Stackdriver",
          "BODY":"",
          "ACCOUNTNAME":{
            "TOOLTIP":"User defined name for the Stackdriver account",
            "VALIDATION_MESSAGE":{
          "noSpecialCharacters": "Account Name cannot contain special characters other than -",
          "cannotContainSpace":"Account Name cannot contain space",
          "required":"Account Name cannot be empty",
          "startingFromNumber": "Account Name cannot start with numbers"
        }
          },
          "KEY_FILE":{
            "TOOLTIP":"Stackdriver Encrypted Key file",
            "VALIDATION_MESSAGE":{
              "required":"Encrypted Key File cannot be empty"
            }
          }
        },
        "SUMOLOGIC":{
          "HEADER": "Sumo Logic",
          "BODY":"",
          "ACCOUNTNAME":{
            "TOOLTIP":"User defined name for the Sumologic account",
            "VALIDATION_MESSAGE":{
          "noSpecialCharacters": "Account Name cannot contain special characters other than -",
          "cannotContainSpace":"Account Name cannot contain space",
          "required":"Account Name cannot be empty",
          "startingFromNumber": "Account Name cannot start with numbers"
        }
          },
          "ACCESSID":{
            "TOOLTIP":"sumologic Access Id. You can generate Access Id (Administration > Security > Access Keys)",
            "VALIDATION_MESSAGE":{
              "required":"Access Id cannot be empty"
            }
          },
          "ACCESSKEY":{
            "TOOLTIP":"sumologic Access Key. You can generate Access Id (Administration > Security > Access Keys)",
            "VALIDATION_MESSAGE":{
              "required":"Access key cannot be empty"
        }
          },
          "ZONE":{
            "TOOLTIP":"sumologic Zone",
            "VALIDATION_MESSAGE":{
          "noSpecialCharacters": "Zone cannot contain special characters other than -",
          "cannotContainSpace":"Zone cannot contain space",
          "required":"Zone cannot be empty",
          "startingFromNumber": "Zone cannot start with numbers"
        }
          }
        },
        "VMWARETANZU":{
          "HEADER": "VMWare Tanzu Observability",
          "BODY":"<span><li><strong>Account Name</strong>: User-defined account name for your VMWare Tanzu access</li><li><strong>Endpoint</strong>: VMWare Tanzu host address, from which you access the VMWare Tanzu</li><li><strong>Email</strong>: Provide the user's registered and authorized email</li><li><strong>API token</strong>: The user's API token </li></span>",
          "ACCOUNTNAME":{
            "TOOLTIP":"User-defined account name for your VMWare Tanzu access",
            "VALIDATION_MESSAGE":{
          "noSpecialCharacters": "Account Name cannot contain special characters other than -",
          "cannotContainSpace":"Account Name cannot contain space",
          "required":"Account Name cannot be empty",
          "startingFromNumber": "Account Name cannot start with numbers"
        }
          },
          "END_POINT":{
            "TOOLTIP":"VMWare Tanzu host address, from which you access the VMWare Tanzu",
            "VALIDATION_MESSAGE":{
              "required":"End Point cannot be empty",
              "invalidUrl": "End Point is invalid"
            }
          },
          "EMAIL":{
            "TOOLTIP":"Provide the user's registered and authorized email",
            "VALIDATION_MESSAGE":{
              "email":"Email is invalid",
              "required":"Email cannot be empty"
            }
          },
          "API_TOKEN":{
            "TOOLTIP":"The user's API token",
            "VALIDATION_MESSAGE":{
              "required":"Api Token cannot be empty"
            }
          }
        },
        "MSTEAMS":{
          "HEADER": "Microsoft Teams",
          "BODY":""
        },
        "SLACK":{
          "HEADER": "Slack",
          "BODY":"<span><li><strong>Account Name</strong>: User-defined account name for your Slack access.</li><li><strong>BotName</strong>: Provide the bot name where you want to receive notifications in slack</li><li><strong>Token</strong>: The user's token to authenticate with slack.</li></span>",
          "ACCOUNTNAME":{
            "TOOLTIP":"User defined name for the Slack account",
            "VALIDATION_MESSAGE":{
          "noSpecialCharacters": "Account Name cannot contain special characters other than -",
          "cannotContainSpace":"Account Name cannot contain space",
          "required":"Account Name cannot be empty",
          "startingFromNumber": "Account Name cannot start with numbers"
        }
          },
          "BOTNAME":{
            "TOOLTIP":"Slack Bot Name",
            "VALIDATION_MESSAGE":{
          "noSpecialCharacters": "Bot Name cannot contain special characters other than -",
          "cannotContainSpace":"Bot Name cannot contain space",
          "required":"Bot Name cannot be empty",
          "startingFromNumber": "Bot Name cannot start with numbers"
        }
          },
          "TOKEN":{
            "TOOLTIP":"Slack Personal Access Token",
            "VALIDATION_MESSAGE":{
              "required":"Token cannot be empty"
            }
          },
          "SPINNAKERTOGGLE":{
            "TOOLTIP":"Switch On this toggle to configure the resource in a gitops enabled Spinnaker instance",
            "VALIDATION_MESSAGE":{}
          }
        },
        "OPA":{
          "HEADER": "OPA",
          "BODY":"<span><li><strong>Account Name</strong>: User-defined account name for your OPA server access.</li><li><strong>EndPoint</strong>: OPA server host address, <span>such as https://opa:8181</span></li></span>",
          "ACCOUNTNAME":{
            "TOOLTIP":"User-defined account name for your OPA server access",
            "VALIDATION_MESSAGE":{
          "noSpecialCharacters": "Account Name cannot contain special characters other than -",
          "cannotContainSpace":"Account Name cannot contain space",
          "required":"Account Name cannot be empty",
          "startingFromNumber": "Account Name cannot start with numbers"
        }
          },
          "ENDPOINT":{
            "TOOLTIP":"OPA server host address, such as https://opa:8181",
            "VALIDATION_MESSAGE":{
              "required":"End Point cannot be empty",
              "invalidUrl": "End Point URL is invalid"
            }
          }
        },
        "AQUAWAVE":{
          "HEADER": "Aqua Wave",
          "BODY":"<span><li><strong>Account Name</strong>: User-defined account name for your Aqua Wave access.</li><li><strong>Username</strong>: The Aquawave username</li><li><strong>Token</strong>: The user's token.</li></span>",
          "ACCOUNTNAME":{
            "TOOLTIP":"User-defined account name for your Aqua Wave access.",
            "VALIDATION_MESSAGE":{
          "noSpecialCharacters": "Account Name cannot contain special characters other than -",
          "cannotContainSpace":"Account Name cannot contain space",
          "required":"Account Name cannot be empty",
          "startingFromNumber": "Account Name cannot start with numbers"
        }
          },
          "USERNAME":{
            "TOOLTIP":"The Aquawave username",
            "VALIDATION_MESSAGE":{
              "noSpecialCharacters": "User Name cannot contain special characters other than - and _",
              "cannotContainSpace":"User Name cannot contain space",
              "required":"User Name cannot be empty",
              "startingFromNumber": "User Name cannot start with numbers"
            }
          },
          "TOKEN":{
            "TOOLTIP":"Aqua Wave Personal Access Token",
            "VALIDATION_MESSAGE":{
              "required":"Bearer token cannot be empty"
            }
          }
        },
        "APPSCAN":{
          "HEADER": "HCL AppScan",
          "BODY":"<span><li><strong>Account Name</strong>: User-defined account name for your HCL AppScan access.</li><li><strong>Token</strong>: The user's token</li></span>",
          "ACCOUNTNAME":{
            "TOOLTIP":"User-defined account name for your HCL AppScan access.",
            "VALIDATION_MESSAGE":{
          "noSpecialCharacters": "Account Name cannot contain special characters other than -",
          "cannotContainSpace":"Account Name cannot contain space",
          "required":"Account Name cannot be empty",
          "startingFromNumber": "Account Name cannot start with numbers"
        }
          },
          "TOKEN":{
            "TOOLTIP":"The user's personal access token",
            "VALIDATION_MESSAGE":{
              "required":"Bearer token cannot be empty"
            }
          }
        },
        "JFROG":{
          "HEADER": "JFrog XRay Scanning",
          "BODY":"<span><li><strong>Account Name</strong>: User-defined account name for your Jfrog Xray access.</li><li><strong>Endpoint</strong>: Your Jfrog Xray host address, from which you access the Jfrog Xray instance</li><li><strong>Token</strong>: The user's token.</li></span>",
          "ACCOUNTNAME":{
            "TOOLTIP":"User-defined account name for your Jfrog Xray access.",
            "VALIDATION_MESSAGE":{
          "noSpecialCharacters": "Account Name cannot contain special characters other than -",
          "cannotContainSpace":"Account Name cannot contain space",
          "required":"Account Name cannot be empty",
          "startingFromNumber": "Account Name cannot start with numbers"
        }
          },
          "ENDPOINT":{
            "TOOLTIP":"Jfrog Xray host address, from which you access the Jfrog Xray instance",
            "VALIDATION_MESSAGE":{
              "required":"Endpoint cannot be empty",
              "invalidUrl": "Endpoint URL is invalid"
            }
          },
          "TOKEN":{
            "TOOLTIP":"The user's token from jfrog xray to authenticate",
            "VALIDATION_MESSAGE":{
              "required":"Token cannot be empty"
            }
          }
        },
        "PRISMACLOUD":{
          "HEADER": "Prisma Cloud",
          "BODY":"<span><li><strong>Account Name</strong>: User-defined account name for your Prisma Cloud access.</li><li><strong>Host Url</strong>: Your Prisma Cloud host address, from which you access the Prisma Cloud instance</li><li><strong>Access Key ID</strong>: The user's access key who has access to the Prisma Cloud. If you are unsure, consult your Prisma Cloud administrator to get an access key.</li><li><strong>Secret key</strong>: The user's secret key</li></span>",
          "ACCOUNTNAME":{
            "TOOLTIP":"User-defined account name for your Prisma Cloud access.",
            "VALIDATION_MESSAGE":{
          "noSpecialCharacters": "Account Name cannot contain special characters other than -",
          "cannotContainSpace":"Account Name cannot contain space",
          "required":"Account Name cannot be empty",
          "startingFromNumber": "Account Name cannot start with numbers"
        }
          },
          "HOSTURL":{
            "TOOLTIP":"Prisma Cloud host address, from which you access the Prisma Cloud instance",
            "VALIDATION_MESSAGE":{
              "required":"Host URL cannot be empty",
              "invalidUrl": "Host URL is invalid"
            }
          },
          "APPLICATIONURL":{
            "TOOLTIP":"Prisma Cloud Application URL",
            "VALIDATION_MESSAGE":{
              "required":"Application URL cannot be empty",
              "invalidUrl": "Application URL is invalid"
            }
          },
          "ACCESSKEYID":{
            "TOOLTIP":"The user's access key who has access to the Prisma Cloud. If you are unsure, consult your Prisma Cloud administrator to get an access key.",
            "VALIDATION_MESSAGE":{
              "required":"Access Key Id cannot be empty"
            }
          },
          "SECRETKEY":{
            "TOOLTIP":"The user's secret key",
            "VALIDATION_MESSAGE":{
              "required":"Secret Key cannot be empty"
            }
          }
        },
        "SONARQUBE":{
          "HEADER": "SonarQube",
          "BODY":"<span><li><strong>Account Name</strong>: User-defined account name for your Sonarqube access. </li><li><strong>Host Url</strong>: Sonarqube host address, from which you access the Sonaqube instance</li><li><strong>Token</strong>: The user's token (it is optional)</li></span>",
          "ACCOUNTNAME":{
            "TOOLTIP":"User-defined account name for your Sonarqube access.",
            "VALIDATION_MESSAGE":{
          "noSpecialCharacters": "Account Name cannot contain special characters other than -",
          "cannotContainSpace":"Account Name cannot contain space",
          "required":"Account Name cannot be empty",
          "startingFromNumber": "Account Name cannot start with numbers"
        }
          },
          "HOSTURL":{
            "TOOLTIP":"Sonarqube host address, from which you access the Sonaqube instance",
            "VALIDATION_MESSAGE":{
              "required":"Host URL cannot be empty",
              "invalidUrl": "Host URL is invalid"
            }
          },
          "TOKEN":{
            "TOOLTIP":"The user's token (it is optional)",
            "VALIDATION_MESSAGE":{
              "required":"Token cannot be empty"
            }
          }
        },
        "AUTOPILOT":{
          "HEADER": "Autopilot",
          "BODY":"",
          "ACCOUNTNAME":{
            "TOOLTIP":"User defined name for the Autopilot account",
            "VALIDATION_MESSAGE":{
          "noSpecialCharacters": "Account Name cannot contain special characters other than -",
          "cannotContainSpace":"Account Name cannot contain space",
          "required":"Account Name cannot be empty",
          "startingFromNumber": "Account Name cannot start with numbers"
        }
          },
          "USERNAME":{
            "TOOLTIP":" Autopilot User Name",
            "VALIDATION_MESSAGE":{
              "noSpecialCharacters": "User Name cannot contain special characters other than - and _",
              "cannotContainSpace":"User Name cannot contain space",
              "required":"User Name cannot be empty",
              "startingFromNumber": "User Name cannot start with numbers"
            }
          }
        }
    },
      "UNCHANGED_FORM": "Form is unchanged. Please make modifications in the form to enable the button.",
      "INVALID_FORM": "Few fields are mandatory or invalid. Please fill the form to enable the button.",
      "NO_WRITE_ACCESS": "You have only read permission. Please check with your administrator for updating permissions.",
      "METRIC_TEMPLATE": {
        "APM_INFRA": {
          "TEMPLATE_NAME": {
            "TOOLTIP": "The unique name of the template for identification",
            "VALIDATION_MESSAGE": {
              "required": "Template Name cannot be empty",
              "noSpecialCharacters": "Template Name cannot contain special characters",
              "cannotContainSpace": "Template Name cannot contain space",
              "startingFromNumber": "Template Name cannot start with number",
              "maxlength": "Template name should not have more than 63 characters!",
              "exists": "Template already exists"
            }
          },
          "APM_MONITORING_PROVIDER": {
            "TOOLTIP": "Select an APM datasource provider of choice",
            "VALIDATION_MESSAGE": {}
          },
          "APM_ACCOUNT": {
            "TOOLTIP": "Select the account of interest in the configured APM datasource ",
            "VALIDATION_MESSAGE": {}
          },
          "APM_APPLICATION": {
            "TOOLTIP": "Select the application of interest that you want to monitor",
            "VALIDATION_MESSAGE": {}
          },
          "APM_API_SELECTION": {
            "TOOLTIP": "Select the relevant API metrics to monitor ",
            "VALIDATION_MESSAGE": {}
          },
          "INFRA_MONITORING_PROVIDER": {
            "TOOLTIP": "Select an INFRA metrics datasource provider of choice",
            "VALIDATION_MESSAGE": {}
          },
          "INFRA_ACCOUNT": {
            "TOOLTIP": "Select the account of interest in the configured INFRA metrics datasource ",
            "VALIDATION_MESSAGE": {}
          },
          "INFRA_METRIC_GROUPS": {
            "TOOLTIP": "Metrics groups organized as groups for quick overview on each infrastructure component",
            "VALIDATION_MESSAGE": {}
          },
          "FILTER_KEY": {
            "TOOLTIP": "A metric scope placeholder to filter the scope of the metric",
            "VALIDATION_MESSAGE": {
              "required": "Filter Key cannot be empty",
              "cannotContainSpace": "Filter Key cannot contain space"
            }
          },
          "BASELINE": {
            "TOOLTIP": "A unique metric scope to identify the baseline metric",
            "VALIDATION_MESSAGE": {
              "required": "Baseline cannot be empty",
              "cannotContainSpace": "Baseline cannot contain space"
            }
          },
          "NEW_RELEASE": {
            "TOOLTIP": "A unique metric scope to identify the canary metric",
            "VALIDATION_MESSAGE": {
              "required": "New Release cannot be empty",
              "cannotContainSpace": "New Release cannot contain space"
            }
          },
          "NORMALIZATION": {
            "TOOLTIP": "The selected Load metric will be dividing all the metrics to make the metrics more comparable to each other",
            "VALIDATION_MESSAGE": {}
          },
          "THRESHOLD": {
            "TOOLTIP": "Select 'Hard' mode for a stringent analysis and 'Easy' mode for a more lenient analysis",
            "VALIDATION_MESSAGE": {}
          },
          "SPECIFY_CRITICAL_WATCHLIST": {
            "TOOLTIP": "Metrics marked as critical, will affect the overall verification score if they fail Metrics marked as in watchlist will be shown first in the metric analysis report",
            "VALIDATION_MESSAGE": {}
          }
        },
        "CUSTOM": {
          "TEMPLATE_NAME": {
            "TOOLTIP": "The unique name of the template for identification",
            "VALIDATION_MESSAGE": {
              "required": "Template Name cannot be empty",
              "noSpecialCharacters": "Template Name cannot contain special characters",
              "cannotContainSpace": "Template Name cannot contain space",
              "startingFromNumber": "Template Name cannot start with number",
              "maxlength": "Template name should not have more than 63 characters!",
              "exists": "Template already exists"
            }
          },
          "DATA_SOURCE": {
            "TOOLTIP": "Select a datasource provider of choice",
            "VALIDATION_MESSAGE": {
              "required": "Data source cannot be empty"
            }
          },
          "ACCOUNT": {
            "TOOLTIP": "Select the account of interest in the configured datasource ",
            "VALIDATION_MESSAGE": {
              "required": "Account cannot be empty"
            }
          },
          "FILTER_KEY": {
            "TOOLTIP": "Metric Scope Placeholder will be replaced by Baseline & New Release values in the Metric Query; For example, Scope Placeholder “pod_name” will be replaced by Baseline & New Release values in the metric query avg(container_memory_usage_bytes{pod=~'pod_name',container!=''}) for getting baseline & New Release metrics data respectively from the monitoring provider",
            "VALIDATION_MESSAGE": {
              "required": "Filter Key cannot be empty",
              "cannotContainSpace": "Filter Key cannot contain space"
            }
          },
          "BASELINE": {
            "TOOLTIP": "Unique metric scope to identify the baseline metric data",
            "VALIDATION_MESSAGE": {
              "required": "Baseline cannot be empty",
              "cannotContainSpace": "Baseline cannot contain space"
            }
          },
          "NEW_RELEASE": {
            "TOOLTIP": "Unique metric scope to identify the canary metric data",
            "VALIDATION_MESSAGE": {
              "required": "New Release cannot be empty",
              "cannotContainSpace": "New Release cannot contain space"
            }
          },
          "ADD_NEW_QUERY": {
            "TOOLTIP": "Add New Query",
            "VALIDATION_MESSAGE": {}
          },
          "QUERY_SELECTION": {
            "TOOLTIP": "Select the relevant metrics to monitor ",
            "VALIDATION_MESSAGE": {}
          },
          "QUERY_NAME": {
            "TOOLTIP": "A meaningful name given to a query or a group of similar queries ",
            "VALIDATION_MESSAGE": {
              "exist":"Query Name already exists",
              "required": "Query Name cannot be empty"
            }
          },
          "QUERY_STRING": {
            "TOOLTIP": "Query to fetch the metric from the data source provider",
            "VALIDATION_MESSAGE": {
              "required": "Query String cannot be empty"
            }
          },
          "RISK_DIRECTION": {
            "TOOLTIP": "Direction in which the metric difference is allowed to expand",
            "VALIDATION_MESSAGE": {}
          },
          "THRESHOLD": {
            "TOOLTIP": "Percentage difference beyond which the Metric is treated as FAIL",
            "VALIDATION_MESSAGE": {}
          },
          "CRITICAL": {
            "TOOLTIP": "Critical",
            "VALIDATION_MESSAGE": {}
          },
          "WATCHLIST": {
            "TOOLTIP": "Metrics marked as in watchlist will be shown first in the metric analysis report",
            "VALIDATION_MESSAGE": {}
          },
          "WEIGHT": {
            "TOOLTIP": "Numerical importance given to a metric; it can range from 0 as lowest to 1 as the highest",
            "VALIDATION_MESSAGE": {}
          },
          "CRITICALITY": {
            "TOOLTIP": "Normal is selected to remove the metric from the metric group for score calculation if it has no data, Critical is selected to fail the entire analysis if this metric fails or has no data, Must Have Data is used to fail a metric if data is missing",
            "VALIDATION_MESSAGE": {}
          },
          "NAN_STRATEGY": {
            "TOOLTIP": "Handles NaN values which can occur if there is no data in a particular interval for metric data. ",
            "VALIDATION_MESSAGE": {}
          }
        }
      },
      "USAGE_INSIGHTS": {
        "APPLICATIONS": {
          "TOOLTIP": "Application"
        },
        "PIPELINES": {
          "TOOLTIP": "Pipelines"
        },
        "PIPELINES_WITH_INTELLIGENT_GATES": {
          "TOOLTIP": "Pipelines with Intelligent Gates"
        },
        "INTELLIGENT_GATES_BREAKDOWN": {
          "TOOLTIP": "Intelligent Gates Breakdown"
        },
        "GATES_USED": {
          "TOOLTIP": "Gates Used"
        },
        "USERS": {
          "TOOLTIP": "Users"
        }
      },
      "DELIVERY_INSIGHTS": {
        "PIPELINES": {
          "TOOLTIP": "Number of pipeline executions over time"
        },
        "MOST_ACTIVE_PIPELINES": {
          "TOOLTIP": "Pipelines which have executed most number of times"
        },
        "MOST_SUCCESSFUL_PIPELINES": {
          "TOOLTIP": "Pipelines which have successfully executed most number of times"
        },
        "MOST_FAILED_PIPELINES": {
          "TOOLTIP": "Pipelines which have failed most number of times"
        },
        "FASTEST_PIPELINES": {
          "TOOLTIP": "Pipelines with fastest execution times"
        },
        "SLOWEST_PIPELINES": {
          "TOOLTIP": "Pipelines with slowest execution times"
        },
        "MANUAL_JUDGMENT": {
          "TOOLTIP": "Pipelines with manual judgement having slowest execution times"
        },
        "DEPLOYMENT_FREQUENCY": {
        "TOOLTIP": "Number of Application Deployments in a day"
        },
        "MOST_ACTIVE_APPLICATIONS": {
          "TOOLTIP": "Applications with maximum number of App deployments"
        },
        "FASTEST_DEPLOYMENTS": {
          "TOOLTIP": "Applications with shortest deployment time"
        },
        "SLOWEST_DEPLOYMENTS": {
          "TOOLTIP": "Applications with longest deployment time"
        }
      },
      "ACCESS_MANAGEMENT": {
        "ADMINISTRATOR": {
          "INFO": "Super Administrator Groups will not appear in the dropdown since their Access Permissions cannot be modified. Administrators will have full Access to all Resources.",
          "TOOLTIP": "Groups with Administration Permissions"
        },
        "USER_ROLE_LISTING": {
          "HEADER": "ROLE MANAGEMENT",
          "BODY": "Users should be assigned user roles only if they need global access to one or more resources."
        },
        "USER_ROLE_CREATION": {
          "ROLENAME": {
            "TOOLTIP": "",
            "VALIDATION_MESSAGE": {
              "required": "Role Name cannot be empty",
              "cannotContainSpace": "Role Name cannot contain space",
              "noSpecialCharacters": "Role Name cannot contain special character",
              "startingFromNumber": "Role Name should not start with number"
            }
          },
          "USER_GROUPS": {
            "TOOLTIP": "",
            "VALIDATION_MESSAGE": {
              "required": "Groups cannot be empty"
            }
          },
          "PERMISSIONS": {
            "VALIDATION_MESSAGE": {
              "required": "Atleast one feature has to be enabled with permissions"
            }
          }
        },
        "FEATURE_VISIBILTY_LISTING": {
          "HEADER": "FEATURE FLAG MANAGEMENT",
          "BODY": "Feature Visibility is used for scenarios where one or more user groups need exclusive access to a specific feature. For example, the 'Compliance Team' should only access the Policy Management feature. Administrators can enable the feature flag for the compliance team user group. The feature visibility function will ensure that the policy management feature is not visible for all other user groups."
        },
        "FEATURE_VISIBILTY_CREATION": {
          "ROLENAME": {
            "TOOLTIP": "",
            "VALIDATION_MESSAGE": {
              "required": "Role Name cannot be empty",
              "cannotContainSpace": "Role Name cannot contain space",
              "noSpecialCharacters": "Role Name cannot contain special character",
              "startingFromNumber": "Role Name should not start with number"
            }
          },
          "USER_GROUPS": {
            "TOOLTIP": "",
            "VALIDATION_MESSAGE": {
              "required": "Groups cannot be empty"
            }
          },
          "PERMISSIONS": {
            "VALIDATION_MESSAGE": {
              "required": "Atleast one feature has to be enabled"
            }
          }
        },
    "AUTHPROVIDER":{
      "LDAP":{
        "HEADER": "LDAP Provider",
        "BODY": "<p>This page allows you to configure LDAP Authentication providers such as Active Directory and OpenLDAP.Once this is enabled, ISD will import all users and groups from your LDAP and users will be able to login to ISD using their LDAP user id and password. Super admin users will continue to be able to log in using their current user id and password.</p><p>Follow the below steps to enable LDAP Provider.</p>  <p>- Select your LDAP Vendor, enter your LDAP Connection URL and click on <b>Test Connection</b> to verify the connectivity between ISD and LDAP</p> <p>- Select the Bind Type, enter Bind DN, Credential (Password) and click on <b>Test Authentication</b></p> <p>- The details you enter in the User Search Settings and Group Search Settings sections will be used to search for users and groups in your LDAP</p> <p>- Most of the values are auto-populated based on the selected Provider.</p> <p> - Click on the <b>Enabled</b> toggle and click the Save button at the bottom.</p>",
        "EDITMODE":{
          "VALIDATION_MESSAGE": {
            "required":"Edit Mode cannot be empty"
          }
      },
        "VENDOR":{
          "VALIDATION_MESSAGE": {
            "required":"Vendor cannot be empty"
          }
        },
        "USERNAMELDAPATTRIBUTE":{
          "VALIDATION_MESSAGE": {
           "required":"Username LDAP attribute cannot be empty"
          }
        },
        "RDNLDAPATTRIBUTE":{
        "VALIDATION_MESSAGE": {
          "required":"RDN LDAP attribute cannot be empty"
          }
        },
        "UUIDLDAPATTRIBUTE":{
          "VALIDATION_MESSAGE": {
            "required":"UUID LDAP attribute cannot be empty"
          }
        },
        "USEROBJECTCLASSES":{
          "VALIDATION_MESSAGE": {
            "required":"User Object Classes cannot be empty"
          }
        },
        "CONNECTIONURL":{
          "VALIDATION_MESSAGE": {
            "required":"Connection Url cannot be empty"
          }
        },
        "USERDN":{
          "VALIDATION_MESSAGE": {
            "required":"Users Dn cannot be empty"
          }
        },
        "AUTHTYPE":{
          "VALIDATION_MESSAGE": {
            "required":"Bind Type cannot be empty"
          }
        },
        "BINDDN":{
          "VALIDATION_MESSAGE": {
            "required":"Bind Dn cannot be empty"
          }
        },
        "BINDCREDENTIAL":{
          "VALIDATION_MESSAGE": {
            "required":"Bind Credential cannot be empty"
          }
        },
        "GROUPSDN":{
          "VALIDATION_MESSAGE": {
            "required":"Groups DN cannot be empty"
          }
        },
        "GROUPSEARCHFILTER":{
          "VALIDATION_MESSAGE": {
            "required":"Group Search Filter cannot be empty"
          }
        },
        "GROUPROLENAMEATTRIBUTES":{
          "VALIDATION_MESSAGE": {
            "required":"Group Role Name Attributes cannot be empty"
          }
        },
        "GROUPOBJECTCLASSES":{
          "VALIDATION_MESSAGE": {
            "required":"Group Object Classes cannot be empty"
          }
        },
        "MEMBERSHIPUSERLDAPATTRIBUTE":{
          "VALIDATION_MESSAGE": {
            "required":"Membership User Ldap Attribute cannot be empty"
          }
        },
        "MEMBERSHIPATTRIBUTETYPE":{
          "VALIDATION_MESSAGE": {
            "required":"Membership Attribute DN cannot be empty"
          }
        },
       "MODE":{
          "VALIDATION_MESSAGE": {
            "required":"Mode cannot be empty"
          }
        },
        "USERGROUPSRETRIEVESTRATEGY":{
          "VALIDATION_MESSAGE": {
            "required":"User Groups Retrieve Strategy cannot be empty"
          }
        },
        "MEMBEROFLDAPATTRIBUTE":{
          "VALIDATION_MESSAGE": {
            "required":"Member of Ldap Attribute cannot be empty"
          }
        }
      },
     "SAML":{
       "HEADER": "SAML Provider",
        "BODY": "<p>This page allows you to configure SAML Authentication providers such as Okta and Azure.</p> <p>Once this is enabled, the <b>Sign in with SAML</b> option will be available on the ISD login screen. All users configured in your SAML authentication provider will be able to access ISD. Super admin users will continue to be able to log in using their current user id and password.</p><p>Follow the below steps to enable SAML Provider.</p> <p> - Copy and Use the redirect URI as the ACS URL of the ISD application and Service Provider (Entity ID) while configuring your Identity Provider</p> <p> - Download the metadata XML from your Identity Provider and import it to ISD</p> <p>-  Single Sign-On service URL will get auto-populated from the metadata XML</p><p> - The group attribute helps ISD to identify the groups the user belongs to. You can add group attribute statements to the SAML assertion shared with ISD from your Identity Provider. The value entered here should match the name of the group attribute on your IDP. By default it's memberOf.</p> <p> - Click on the <b>Enabled</b> toggle and Save button at the bottom to enable the provider.</p>",
        "PROVIDER":{
         "VALIDATION_MESSAGE": {
            "required":"Provider cannot be empty"
          }
        },
        "REDIRECTURI":{
          "VALIDATION_MESSAGE": {
            "required":"Redirect URI cannot be empty"
          }
        },
        "SERVICEPROVIDERENTITYID":{
          "VALIDATION_MESSAGE": {
            "required":"Service Provider Entity cannot be empty"
          }
        },
        "SINGLESIGNONSERVICEURL":{
        "VALIDATION_MESSAGE": {
          "required":"Single Sign-On Service Url cannot be empty"
          }
        },
        "IMPORTFROMURL":{
          "VALIDATION_MESSAGE": {
            "required":"Import from URL cannot be empty"
          }
        },
        "IMPORTFROMFILE":{
          "VALIDATION_MESSAGE": {
            "required":"Import from File cannot be empty"
          }
        },
        "GROUPATTRIBUTE":{
          "VALIDATION_MESSAGE": {
            "required":"Group Attribute cannot be empty"
          }
       }
      }
    }
      },
      "LOG_TEMPLATE": {
        "STRING_PATTERN": {
          "TOOLTIP": "String Pattern",
          "VALIDATION_MESSAGE": {
            "required": "String Pattern cannot be empty"
          }
        },
        "LOG_TOPICS": {
          "TOOLTIP": "Strings that appear in logs with their characterization"
        },
        "LOG_TAGS": {
          "TOOLTIP": "Create custom tags based on business logic."
        },
        "CHARACTERIZATION_TOPIC": {
          "TOOLTIP": "Characterization Topic",
          "VALIDATION_MESSAGE": {
            "required": "Characterization Topic cannot be empty"
          }
        },
        "TYPE": {
          "TOOLTIP": "Type",
          "VALIDATION_MESSAGE": {}
        },
        "ENABLE_CLUSTER_TAG": {
          "TOOLTIP": "Create custom tags based on business logic.",
          "VALIDATION_MESSAGE": {}
        },
        "CLUSTER_TAG_STRING": {
          "TOOLTIP": "The string pattern that appears in logs",
          "VALIDATION_MESSAGE": {
            "required": "Cluster Tag String cannot be empty"
          }
        },
        "CLUSTER_TAG": {
          "TOOLTIP": "Cluster Tag",
          "VALIDATION_MESSAGE": {
            "required": "Cluster Tag cannot be empty"
          }
        },
        "LOG_TEMPLATE_NAME": {
          "TOOLTIP": "Log Template Name",
          "VALIDATION_MESSAGE": {
            "required": "Template Name cannot be empty",
            "noSpecialCharacters": "Template Name cannot contain special characters",
            "cannotContainSpace": "Template Name cannot contain space",
            "startingFromNumber": "Template Name cannot start with number",
            "maxlength": "Template name should not have more than 63 characters!",
            "exists": "Template already exists"
          }
        },
        "PROVIDER": {
          "TOOLTIP": "Data source for Risk Analysis",
          "VALIDATION_MESSAGE": {
            "required": "Provider cannot be empty"
          }
        },
        "LOG_ACCOUNT": {
          "TOOLTIP": "Account of the Log provider; Refer Integrations tab under Setup",
          "VALIDATION_MESSAGE": {
            "required": "Log Account cannot be empty"
          }
        },
        "QUERY_FILTER_KEY": {
          "TOOLTIP": "Unique Key which identify logs to be processed in the Index",
          "VALIDATION_MESSAGE": {
            "required": "Query Filter Key cannot be empty",
            "cannotContainSpace": "Query Filter Key cannot contain space"
          }
        },
        "BASELINE": {
          "TOOLTIP": "Unique value which identify baseline logs in the Index",
          "VALIDATION_MESSAGE": {
            "required": "Baseline cannot be empty",
            "cannotContainSpace": "Baseline cannot contain space"
          }
        },
        "NEW_RELEASE": {
          "TOOLTIP": "Unique value which identify New Release logs in the Index",
          "VALIDATION_MESSAGE": {
            "required": "New Release cannot be empty",
            "cannotContainSpace": "New Release cannot contain space"
          }
        },
        "RESPONSE_KEYWORDS": {
          "TOOLTIP": "Field name in the Index containing logs to be processed",
          "VALIDATION_MESSAGE": {
            "required": "Response Keywords cannot be empty",
            "cannotContainSpace": "Response Keywords cannot contain space"
          }
        },
        "TIMESTAMP_KEY": {
          "TOOLTIP": "Unique Key which identify the timestamp for log; this field is optional; by default, it is @timestamp for elasticsearch and timestamp for graylog",
          "VALIDATION_MESSAGE": {
            "cannotContainSpace": "Timestamp Key cannot contain space"
          }
        },
        "AUTOBASELINE": {
          "TOOLTIP": "ML based learning of the baseline from historic analysis",
          "VALIDATION_MESSAGE": {}
        },
        "CONTEXTUAL_CLUSTER": {
          "TOOLTIP": "Enable/disable cluster of unexpected events in similar context",
          "VALIDATION_MESSAGE": {}
        },
        "CONTEXTUAL_WINDOW_SIZE": {
          "TOOLTIP": "Number of Log events to be seen in a Context. Allowed size in between 25 and 50",
          "VALIDATION_MESSAGE": {
            "max": "Allowed size is in between 25 to 50",
            "min": "Allowed size is in between 25 to 50"
          }
        },
        "INFO_CLUSTER_SCORING": {
          "TOOLTIP": "Enabling this option will include INFO clusters in scoring",
          "VALIDATION_MESSAGE": {}
        },
        "SENSITIVITY": {
          "TOOLTIP": "Impact of Unexpected Issues on the log scoring",
          "VALIDATION_MESSAGE": {
            "required": "Sensitivity cannot be empty"
          }
        },
        "SCORING_ALGORITHM": {
          "TOOLTIP": "Scoring Algorithm for Risk Analysis",
          "VALIDATION_MESSAGE": {}
        },
        "LOG_GROUP": {
          "TOOLTIP": "Group of log streams that share the same retention, monitoring, and access control settings",
          "VALIDATION_MESSAGE": {
            "required": "Log Group cannot be empty",
            "cannotContainSpace": "Log Group cannot contain space"
          }
        },
        "LOG_STREAM": {
          "TOOLTIP": "Sequence of log events that share the same source",
          "VALIDATION_MESSAGE": {
            "required": "Log Stream cannot be empty",
            "cannotContainSpace": "Log Stream cannot contain space"
          }
        },
        "REGION": {
          "TOOLTIP": "Geographic area where AWS data center",
          "VALIDATION_MESSAGE": {
            "required": "Region cannot be empty"
          }
        },
        "INDEX_PATTERN": {
          "TOOLTIP": "Index containing logs for processing",
          "VALIDATION_MESSAGE": {
            "required": "Intex Pattern cannot be empty",
            "cannotContainSpace": "Intex Pattern cannot contain space"
          }
        },
        "CUSTOM_REGEX": {
          "TOOLTIP": "Custom Regular Expression to filter the logs",
          "VALIDATION_MESSAGE": {}
        },
        "REGULAR_EXPRESSION": {
          "TOOLTIP": "Sequence of characters that specifies a search pattern",
          "VALIDATION_MESSAGE": {
            "cannotContainSpace": "Regular Expression cannot contain space"
          }
        },
        "RESPONSE_KEY": {
          "TOOLTIP": "Field name in the Index where regex to be searched",
          "VALIDATION_MESSAGE": {}
        },
        "STREAM_ID": {
          "TOOLTIP": "The streams are a mechanism to route messages into categories in realtime while they are processed",
          "VALIDATION_MESSAGE": {
            "required": "Stream ID cannot be empty",
            "cannotContainSpace": "Stream ID cannot contain space"
          }
        },
        "NAMESPACE": {
          "TOOLTIP": "Namespace",
          "VALIDATION_MESSAGE": {
            "required": "Namespace cannot be empty",
            "cannotContainSpace": "Namespace cannot contain space"
          }
        },
        "TEST_CASE_KEY": {
          "TOOLTIP": "Field in the log index which holds the test case names",
          "VALIDATION_MESSAGE": {
            "required": "Test Case Key cannot be empty",
            "cannotContainSpace": "Test Case Key cannot contain space"
          }
        },
        "TEST_SUITE_KEY": {
          "TOOLTIP": "Field in the log index which  holds the test suite names",
          "VALIDATION_MESSAGE": {
            "required": "Test Suite Key cannot be empty",
            "cannotContainSpace": "Test Suite Key cannot contain space"
          }
        }
      },
      "CDINTEGRATION":{
      "NEW_ARGOCD":{
        "HEADER": "Create New Argo CD Instance",
        "BODY": "<span><p>This installs OpsMx Enterprise for Argo (OEA - a security validated release of Argo from OpsMx) in the given namespace and automatically connects it with ISD.</p><p><strong>Step 1</strong>:<span> Providing the following information to generate the manifest</span></p><ul><li><strong>Name</strong>: User Defined Name for this integration.</li><li><strong>Namespace</strong>: Namespace where argocd is installed. You should create this namespace in your cluster.</li><li><strong> Argo CD URL</strong>: URL for your new Argo CD Instance. We will be creating an ngnix ingress with the provided url. This field is optional</li></ul><p><strong>step 2</strong>: Download and apply the manifest</p></span>",
        "ARGOCD_NAME": {
          "TOOLTIP" :"User Defined Name for this CD integration.",
          "VALIDATION_MESSAGE" : {
            "required":"ArgoCd Name cannot be empty"
          }
        },
        "ARGOCD_NAMESPACE": {
          "TOOLTIP" :"Namespace where argocd needs to be installed. You should create this namespace in your target cluster.",
            "VALIDATION_MESSAGE" : {
              "required":"Namespace cannot be empty"
            }
        },
        "ARGOCD_URL": {
          "TOOLTIP" :"URL for your new ArgoCD instance. Providing this is optional",
          "VALIDATION_MESSAGE" : {
          }
        },
        "ARGOCD_DESCRIPTION": {
          "TOOLTIP" :"",
          "VALIDATION_MESSAGE" : {
          }
        }
      },
      "EXISTING_ARGOCD":{
        "HEADER": "Connect An Existing Argo CD to ISD",
          "BODY": "<span><p><strong>Step 1</strong>:<span> Providing the following information to generate the manifest</span></p><ul><li><strong>Name</strong>: User Defined Name for this CD integration.</li><li><strong>Namespace</strong>: Namespace where argocd is installed. Usually it is 'argocd'</li><li><strong> Argo CD URL</strong>: URL of your ArgoCD instance, providing this is optional</li></ul><p><strong>step 2</strong>: Download and apply the manifest in the same namespace where Argo CD Is installed</p><ul><li>Download the Agent Manifest.</li><li>Generate an ArgoCD API Token, encode it in base64 format and update it in the isd-argo-agent.yml. For more information, see How to Generate Argo CD API Token</li><li>Apply the agent manifest in the same namespace where Argo CD Is installed</li></ul></span>",
          "ARGOCD_NAME": {
            "TOOLTIP" :"User Defined Name for this CD integration.",
            "VALIDATION_MESSAGE" : {
              "required":"ArgoCd Name cannot be empty"
            }
          },
          "ARGOCD_NAMESPACE": {
            "TOOLTIP" :"Namespace where argocd is installed. Usually it is 'argocd'",
            "VALIDATION_MESSAGE" : {
              "required":"Namespace cannot be empty"
            }
          },
          "ARGOCD_URL": {
            "TOOLTIP" :"URL of your ArgoCD instance. Providing this is optiona",
            "VALIDATION_MESSAGE" : {
            }
          },
          "ARGOCD_DESCRIPTION": {
            "TOOLTIP" :"",
            "VALIDATION_MESSAGE" : {
            }
          }
        }
      }
    }
kind: ConfigMap
metadata:
  name: oes-ui-config
  labels:
    app: oes
    component: ui
    heritage: "Helm"
    release: "argoisd"
    chart: "isdargo-4.1.7"
---
# Source: isdargo/templates/oes-ui/oes-ui-nginxconf.yaml
apiVersion: v1
data:
  nginx-ap-only.conf: |
    # For more information on configuration, see:
    #   * Official English Documentation: http://nginx.org/en/docs/
    #   * Official Russian Documentation: http://nginx.org/ru/docs/
  
    user nginx;
    worker_processes auto;
    error_log /var/log/nginx/error.log debug;
    pid /tmp/nginx.pid;
  
    # Load dynamic modules. See /usr/share/doc/nginx/README.dynamic.
    include /usr/share/nginx/modules/*.conf;
  
    events {
        worker_connections 1024;
    }
  
    http {
        log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                          '$status $body_bytes_sent "$http_referer" '
                          '"$http_user_agent" "$http_x_forwarded_for"';
  
        access_log  /var/log/nginx/access.log  main;
  
        sendfile            on;
        tcp_nopush          on;
        tcp_nodelay         on;
        keepalive_timeout   65;
        types_hash_max_size 2048;
  
        include             /etc/nginx/mime.types;
        default_type        application/octet-stream;
  
        # Load modular configuration files from the /etc/nginx/conf.d directory.
        # See http://nginx.org/en/docs/ngx_core_module.html#include
        # for more information.
        include /etc/nginx/conf.d/*.conf;
  
        server {
            listen       8093 default_server;
            #listen       [::]:8080 default_server;
            server_name  _;
            root /var/www/html;
  
            # Load configuration files for the default server block.
            include /etc/nginx/default.d/*.conf;
  
            location ^~ /gate/ {
              proxy_pass http://oes-gate:8084/ ;
            }
  
            location ^~ /application {
              proxy_pass http://oes-ui:8093 ;
            }
  
            location ^~ /ui {
              try_files $uri $uri/ /ui/index.html;
            }
  
            # Go to Gate if you don't know what to do
            location / {
              proxy_pass http://oes-gate:8084/ ;
            }
  
  
        }
    }
kind: ConfigMap
metadata:
  name: oes-ui-nginxconf
  labels:
    app: oes
    component: ui
    heritage: "Helm"
    release: "argoisd"
    chart: "isdargo-4.1.7"
---
# Source: isdargo/templates/vela/vela-configmap.yaml
apiVersion: v1
data:
  vela-api.yaml: |
    httpListenPort: 8092
    carinaHost: http://oes-carina:8091/
    rbacHost: http://oes-carina:8092/
    
kind: ConfigMap
metadata:
  name: vela-config
  labels:
    app: oes
    component: vela
    heritage: "Helm"
    release: "argoisd"
    chart: "isdargo-4.1.7"
---
# Source: isdargo/charts/minio/templates/pvc.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: argoisd-minio
  labels:
    app: minio
    chart: minio-8.0.9
    release: argoisd
    heritage: Helm
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "10Gi"
---
# Source: isdargo/charts/openldap/templates/pvc.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: openldap
  labels:
    app: openldap
    chart: openldap-1.2.3
    release: argoisd
    heritage: Helm
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "5Gi"
---
# Source: isdargo/charts/minio/templates/post-install-prometheus-metrics-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: argoisd-minio-update-prometheus-secret
  labels:
    app: minio-update-prometheus-secret
    chart: minio-8.0.9
    release: argoisd
    heritage: Helm
rules:
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - get
      - create
      - update
      - patch
    resourceNames:
      - argoisd-minio-prometheus
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - create
  - apiGroups:
      - monitoring.coreos.com
    resources:
      - servicemonitors
    verbs:
      - get
    resourceNames:
      - argoisd-minio
---
# Source: isdargo/templates/forwarder/create-controller-secret.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: create-controller-secret
rules:
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get","list","create","update","patch"]
---
# Source: isdargo/charts/minio/templates/post-install-prometheus-metrics-rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: argoisd-minio-update-prometheus-secret
  labels:
    app: minio-update-prometheus-secret
    chart: minio-8.0.9
    release: argoisd
    heritage: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: argoisd-minio-update-prometheus-secret
subjects:
  - kind: ServiceAccount
    name: argoisd-minio-update-prometheus-secret
    namespace: "argoisd"
---
# Source: isdargo/templates/forwarder/create-controller-secret.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: create-controller-secret
subjects:
- kind: ServiceAccount
  name: create-controller-secret
roleRef:
  kind: Role
  name: create-controller-secret
  apiGroup: rbac.authorization.k8s.io
---
# Source: isdargo/charts/minio/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: argoisd-minio
  labels:
    app: minio
    chart: minio-8.0.9
    release: argoisd
    heritage: Helm
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 9000
      protocol: TCP
      targetPort: 9000
  selector:
    app: minio
    release: argoisd
---
# Source: isdargo/charts/openldap/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: openldap
  labels:
    app: openldap
    chart: openldap-1.2.3
    release: argoisd
    heritage: Helm
spec:
  ports:
    - name: ldap-port
      protocol: TCP
      port: 389
      targetPort: ldap-port
    - name: ssl-ldap-port
      protocol: TCP
      port: 636
      targetPort: ssl-ldap-port
  selector:
    app: openldap
    release: argoisd
  type: ClusterIP
---
# Source: isdargo/charts/redis/templates/headless-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: argoisd-redis-headless
  labels:
    app: redis
    chart: redis-10.5.3
    release: argoisd
    heritage: Helm
spec:
  type: ClusterIP
  clusterIP: None
  ports:
  - name: redis
    port: 6379
    targetPort: redis
  selector:
    app: redis
    release: argoisd
---
# Source: isdargo/charts/redis/templates/redis-master-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: argoisd-redis-master
  labels:
    app: redis
    chart: redis-10.5.3
    release: argoisd
    heritage: Helm
spec:
  type: ClusterIP
  ports:
  - name: redis
    port: 6379
    targetPort: redis
  selector:
    app: redis
    release: argoisd
    role: master
---
# Source: isdargo/templates/carina/carina-manager-service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app: oes
    component: carina
    heritage: "Helm"
    release: "argoisd"
    chart: "isdargo-4.1.7"
  name: oes-carina
spec:
  ports:
  - name: carina
    port: 8091
    protocol: TCP
    targetPort: 8091
  - name: carina-rbac
    port: 8092
    protocol: TCP
    targetPort: 8092
  selector:
    app: oes
    component: carina
  type: ClusterIP
---
# Source: isdargo/templates/forwarder/oes-forwarder-svc-agent.yaml
apiVersion: v1
kind: Service
metadata:
  name: opsmx-controller-controller1
  labels:
    agent.opsmx.com/name: controller1
    agent.opsmx.com/role: controller
    heritage: "Helm"
    release: "argoisd"
    chart: "isdargo-4.1.7"
spec:
  selector:
    app: opsmx-controller-controller1
  type: ClusterIP
  ports:
  - name: service-api
    port: 9002
    targetPort: service-api
  - name: control-api
    port: 9003
    targetPort: control-api
  - name: remote-command
    port: 9004
    targetPort: remote-command
---
# Source: isdargo/templates/forwarder/oes-forwarder-svc-agent.yaml
apiVersion: v1
kind: Service
metadata:
  name: agent-grpc
  labels:
    agent.opsmx.com/name: controller1
    agent.opsmx.com/role: controller
    heritage: "Helm"
    release: "argoisd"
    chart: "isdargo-4.1.7"
spec:
  selector:
    app: opsmx-controller-controller1
  type: LoadBalancer
  ports:
  - name: agent-grpc
    port: 9001
---
# Source: isdargo/templates/forwarder/oes-forwarder-svc-ipc.yaml
apiVersion: v1
kind: Service
metadata:
  name: opsmx-controller-controller1-interproc
  labels:
    agent.opsmx.com/name: controller1
    agent.opsmx.com/role: controller
    heritage: "Helm"
    release: "argoisd"
    chart: "isdargo-4.1.7"
spec:
  selector:
    app: opsmx-controller-controller1
  type: ClusterIP
  ports:
  - name: agent-grpc
    port: 9001
    targetPort: agent-grpc
---
# Source: isdargo/templates/oes-audit/oes-auditclient-service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app: oes
    component: auditclient
    heritage: "Helm"
    release: "argoisd"
    chart: "isdargo-4.1.7"
  name: oes-audit-client
spec:
  ports:
  - name: auditclient
    port: 8098
    protocol: TCP
    targetPort: 8098
  selector:
    app: oes
    component: auditclient
  type: ClusterIP
---
# Source: isdargo/templates/oes-audit/oes-auditservice-service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app: oes
    component: auditservice
    heritage: "Helm"
    release: "argoisd"
    chart: "isdargo-4.1.7"
  name: oes-audit-service
spec:
  ports:
  - name: auditservice
    port: 8097
    protocol: TCP
    targetPort: 8097
  selector:
    app: oes
    component: auditservice
  type: ClusterIP
---
# Source: isdargo/templates/oes-autopilot/oes-autopilot-service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app: oes
    component: autopilot
    heritage: "Helm"
    release: "argoisd"
    chart: "isdargo-4.1.7"
  name: oes-autopilot
spec:
  type: ClusterIP
  ports:
  - name: "cas-service"
    port: 8090
    targetPort: 8090
  - name: "monitoring-service"
    port: 9090
    targetPort: 9090
  selector:
    app: oes
    component: autopilot
---
# Source: isdargo/templates/oes-dashboard/oes-dashboard-service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app: oes
    component: dashboard
    heritage: "Helm"
    release: "argoisd"
    chart: "isdargo-4.1.7"
  name: oes-dashboard
spec:
  type: ClusterIP
  ports:
  - name: dashboard
    protocol: TCP
    port: 8094
    targetPort: 8094
  selector:
    app: oes
    component: dashboard
---
# Source: isdargo/templates/oes-datascience/oes-datascience-service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app: oes
    component: datascience
    heritage: "Helm"
    release: "argoisd"
    chart: "isdargo-4.1.7"
  name: oes-datascience
spec:
  ports:
  - name: datascience
    port: 5005
    protocol: TCP
    targetPort: 5005
  selector:
    app: oes
    component: datascience
  type: ClusterIP
---
# Source: isdargo/templates/oes-db/oes-db-service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app: oes
    component: db
    heritage: "Helm"
    release: "argoisd"
    chart: "isdargo-4.1.7"
  name: oes-db
spec:
  type: ClusterIP
  ports:
  - name: db
    protocol: TCP
    port: 5432
    targetPort: 5432
  selector:
    app: oes
    component: db
---
# Source: isdargo/templates/oes-gate/oes-gate-service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app: oes
    component: gate
    heritage: "Helm"
    release: "argoisd"
    chart: "isdargo-4.1.7"
  name: oes-gate
spec:
  type: ClusterIP
  ports:
  - name: "https"
    port: 443
    targetPort: 8084
  - name: "oes-gate-service"
    port: 8084
    protocol: TCP
    targetPort: 8084
  - name: "http"
    port: 80
    targetPort: 8084
  selector:
    app: oes
    component: gate
---
# Source: isdargo/templates/oes-platform/oes-platform-service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app: oes
    component: platform
    heritage: "Helm"
    release: "argoisd"
    chart: "isdargo-4.1.7"
  name: oes-platform
spec:
  type: ClusterIP
  ports:
  - name: oes-platform
    protocol: TCP
    port: 8095
    targetPort: 8095
  selector:
    app: oes
    component: platform
---
# Source: isdargo/templates/oes-sapor/oes-sapor-service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app: oes
    component: sapor
    heritage: "Helm"
    release: "argoisd"
    chart: "isdargo-4.1.7"
  name: oes-sapor
spec:
  type: ClusterIP
  ports:
  - name: "sapor"
    port: 8085
    targetPort: 8085
  selector:
    app: oes
    component: sapor
---
# Source: isdargo/templates/oes-ui/oes-ui-service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app: oes
    component: ui
    heritage: "Helm"
    release: "argoisd"
    chart: "isdargo-4.1.7"
  name: oes-ui
spec:
  type: ClusterIP
  ports:
  - name: "https"
    port: 443
    targetPort: 8093
  - name: "http"
    port: 8093
    targetPort: 8093
  selector:
    app: oes
    component: ui
---
# Source: isdargo/templates/oes-visibility/oes-visibility-service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app: oes
    component: visibility
    heritage: "Helm"
    release: "argoisd"
    chart: "isdargo-4.1.7"
  name: oes-visibility
spec:
  type: ClusterIP
  ports:
  - name: visibility
    protocol: TCP
    port: 8096
    targetPort: 8096
  selector:
    app: oes
    component: visibility
---
# Source: isdargo/templates/opa/opa-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: opa
  labels:
    heritage: "Helm"
    release: "argoisd"
    chart: "isdargo-4.1.7"
spec:
  selector:
    app: opa
  ports:
  - protocol: TCP
    port: 8181
    targetPort: 8181
  type: ClusterIP
---
# Source: isdargo/templates/rabbitmq/oes-rabbitmq-service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app: oes
    component: rabbitmq
    heritage: "Helm"
    release: "argoisd"
    chart: "isdargo-4.1.7"
  name: rabbitmq-service
spec:
  ports:
  - name: rabbitmq
    port: 5672
    protocol: TCP
    targetPort: 5672
  - name: rabbitmq-mgmt
    port: 15672
    protocol: TCP
    targetPort: 15672
  selector:
    app: oes
    component: rabbitmq
  type: ClusterIP
---
# Source: isdargo/templates/vela/service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app: oes
    component: vela
    heritage: "Helm"
    release: "argoisd"
    chart: "isdargo-4.1.7"
  name: vela
spec:
  ports:
  - name: vela
    port: 8092
    protocol: TCP
    targetPort: 8092
  selector:
    app: oes
    component: vela
  type: ClusterIP
---
# Source: isdargo/charts/minio/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: argoisd-minio
  labels:
    app: minio
    chart: minio-8.0.9
    release: argoisd
    heritage: Helm
spec:
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 100%
      maxUnavailable: 0
  selector:
    matchLabels:
      app: minio
      release: argoisd
  template:
    metadata:
      name: argoisd-minio
      labels:
        app: minio
        release: argoisd
      annotations:
        checksum/secrets: a53301f0f8247b02c71d8d3b61e20cc2344093ed36ef1d0e4da835e18bfa3d48
        checksum/config: 1bc4af662c0992ac1bfb401b410b7bf5d47c212a5bc49210048b8c24b9cbba3e
    spec:
      serviceAccountName: "argoisd-minio"
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
        - name: minio
          image: "minio/minio:RELEASE.2020-12-03T05-49-24Z"
          imagePullPolicy: IfNotPresent
          command:
            - "/bin/sh"
            - "-ce"
            - "/usr/bin/docker-entrypoint.sh minio -S /etc/minio/certs/ server /export"
          volumeMounts:
            - name: export
              mountPath: /export            
          ports:
            - name: http
              containerPort: 9000
          env:
            - name: MINIO_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: argoisd-minio
                  key: accesskey
            - name: MINIO_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: argoisd-minio
                  key: secretkey
          resources:
            requests:
              memory: 4Gi      
      volumes:
        - name: export
          persistentVolumeClaim:
            claimName: argoisd-minio
        - name: minio-user
          secret:
            secretName: argoisd-minio
---
# Source: isdargo/charts/openldap/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    moniker.spinnaker.io/application: isd
  name:  openldap
  labels:
    app: openldap
    chart: openldap-1.2.3
    release: argoisd
    heritage: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app: openldap
      release: argoisd
  template:
    metadata:
      annotations:
        checksum/configmap-env: 0e7128f76a008e2ec78724477cecb6b6fc1fa2dfd0d51067df4727659d0a7535
        checksum/configmap-customldif: e747f4b895e9c666fd15bacd450a046596486ac7e5a894d633a8593496c2d132
      labels:
        app: openldap
        release: argoisd
    spec:
      initContainers:
      - name: openldap-init-ldif
        image: quay.io/opsmxpublic/busybox:1.28
        command: ['sh', '-c', 'cp /customldif/* /ldifworkingdir']
        imagePullPolicy: IfNotPresent
        volumeMounts:
        - name: customldif
          mountPath: /customldif
        - name: ldifworkingdir
          mountPath: /ldifworkingdir
        resources:
          {}
      containers:
        - name: openldap
          image: "osixia/openldap:1.2.4"
          lifecycle:
            postStart:
              exec:
                command:
                - /bin/sh
                - -c
                - until service slapd status; do sleep 10 ;done
          imagePullPolicy: IfNotPresent
          args: [--copy-service]
          ports:
            - name: ldap-port
              containerPort: 389
            - name: ssl-ldap-port
              containerPort: 636
          envFrom:
            - configMapRef:
                name: openldap-env
            - secretRef:
                name: openldap
          volumeMounts:
            - name: data
              mountPath: /var/lib/ldap
              subPath: data
            - name: data
              mountPath: /etc/ldap/slapd.d
              subPath: config-data
            - name: ldifworkingdir
              mountPath: /container/service/slapd/assets/config/bootstrap/ldif/custom
          env:
          livenessProbe:
            tcpSocket:
              port: ldap-port
            initialDelaySeconds: 20
            periodSeconds: 10
            failureThreshold: 10
          readinessProbe:
            tcpSocket:
              port: ldap-port
            initialDelaySeconds: 20
            periodSeconds: 10
            failureThreshold: 10
          resources:
            {}
      volumes:
        - name: customldif
          configMap:
            name: openldap-customldif
        - name: ldifworkingdir
          emptyDir: {}
        - name: certs
          emptyDir:
            medium: Memory
        - name: data
          persistentVolumeClaim:
            claimName: openldap
---
# Source: isdargo/templates/carina/carina-manager-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: oes
    component: carina
    heritage: "Helm"
    release: "argoisd"
    chart: "isdargo-4.1.7"
  name: oes-carina
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  selector:
    matchLabels:
      app: oes
      component: carina
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: oes
        component: carina
        heritage: "Helm"
        release: "argoisd"
        chart: "isdargo-4.1.7"
      annotations:
        checksum/secret: ad2500092a00b5c97724e4860ae4f19bd4dfea9544e6b79c8b363f72cd19c9e9
    spec:
      initContainers:
      - name: platform-check
        image: quay.io/opsmxpublic/pgchecker:v1
        command:
          - sh
          - -c
          - |
            echo 'Waiting for OES-PLATFORM to become ready...'
            until printf "." && nc -z -w 2 oes-platform 8095; do
               sleep 2;
            done;
            echo 'OES PLATFORM is OK ✓'
      containers:
      - image: quay.io/opsmxpublic/carina-manager:v1.14.1
        imagePullPolicy: IfNotPresent
        name: oes-carina
        ports:
        - containerPort: 8090
          protocol: TCP
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /app/secrets/controller-ca.crt
          name: ca-certs-volume
          subPath: tls.crt
        - mountPath: /app/secrets/controller-control/tls.crt
          name: certs-volume
          subPath: tls.crt
        - mountPath: /app/secrets/controller-control/tls.key
          name: certs-volume
          subPath: tls.key
        - mountPath: /app/config/carina-manager.yaml
          name: carina-volume
          subPath: carina-manager.yaml
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - name: certs-volume
        secret:
          defaultMode: 420
          secretName: oes-control-secret
      - name: ca-certs-volume
        secret:
          defaultMode: 420
          secretName: ca-secret
      - secret:
          items:
          - key: carina-manager.yaml
            path: carina-manager.yaml
          secretName: oes-carina-config
        name: carina-volume
---
# Source: isdargo/templates/forwarder/oes-forwarder-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: opsmx-controller-controller1
  labels:
    agent.opsmx.com/name: controller1
    agent.opsmx.com/role: controller
    heritage: "Helm"
    release: "argoisd"
    chart: "isdargo-4.1.7"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: opsmx-controller-controller1
  template:
    metadata:
      labels:
        app: opsmx-controller-controller1
        agent.opsmx.com/name: controller1
        agent.opsmx.com/role: controller
        heritage: "Helm"
        release: "argoisd"
        chart: "isdargo-4.1.7"
      annotations:
        pullversion: "16"
        checksum/configmap: 44136fa355b3678a1146ad16f7e8649e94fb4fc21fe77e8310c060f61caaff8a
    spec:
      containers:
      - name: opsmx-controller-controller1
        image: quay.io/opsmxpublic/agent-controller:v4.2.5
        ports:
          - containerPort: 9001
            name: agent-grpc
          - containerPort: 9002
            name: service-api
          - containerPort: 9003
            name: control-api
          - containerPort: 9004
            name: remote-command
          - containerPort: 9102
            name: metrics
        env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
        volumeMounts:
        - name: config
          mountPath: /app/config
          readOnly: true
        - name: ca-secret
          mountPath: /app/secrets/ca
          readOnly: true
        - name: jwt-secret
          mountPath: /app/secrets/serviceAuth
          readOnly: true
        - name: authtoken
          readOnly: true
          mountPath: /app/secrets/agentAuth
        resources:
          requests:
            memory: "64Mi"
            cpu: "100m"
      volumes:
      - name: authtoken
        secret:
          secretName: opsmx-agent-controller-auth
          defaultMode: 420
      - name: ca-secret
        secret:
          secretName: ca-secret
      - name: jwt-secret
        secret:
          secretName: jwt-secret
      - name: config
        configMap:
          name: opsmx-controller-controller1
          items:
          - key: "configFile"
            path: "config.yaml"
---
# Source: isdargo/templates/oes-audit/oes-auditclient-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: oes
    component: auditclient
    heritage: "Helm"
    release: "argoisd"
    chart: "isdargo-4.1.7"
  name: oes-audit-client
spec:
  replicas: 1
  selector:
    matchLabels:
      app: oes
      component: auditclient
  template:
    metadata:
      annotations:
        configmap/checksum: 44136fa355b3678a1146ad16f7e8649e94fb4fc21fe77e8310c060f61caaff8a
        prometheus.io/scrape: "true"
        prometheus_io_path: /mgmt/prometheus
        prometheus_io_port: "8098"
      labels:
        app: oes
        component: auditclient
        heritage: "Helm"
        release: "argoisd"
        chart: "isdargo-4.1.7"
    spec:
      initContainers:
      - name: db-check
        image: quay.io/opsmxpublic/pgchecker:v1
        command:
          - sh
          - -c
          - |
            echo 'Waiting for OES-DB to become ready...'
            until printf "." && nc -z -w 2 oes-db 5432; do
               sleep 2;
            done;
            echo 'OESDB OK ✓'
      containers:
      - image: quay.io/opsmxpublic/ubi8-oes-audit-client:v4.1.5
        imagePullPolicy: IfNotPresent
        name: oes-audit-client
        env:
        - name: JAVA_OPTS
          value: -Xmx512m
        ports:
        - containerPort: 8098
          name: backend
          protocol: TCP
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /mgmt/health
            port: 8098
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 60
          successThreshold: 1
          timeoutSeconds: 1
        readinessProbe:
          failureThreshold: 3
          initialDelaySeconds: 60
          periodSeconds: 10
          successThreshold: 1
          tcpSocket:
            port: 8098
        volumeMounts:
        - mountPath: /opsmx/conf/audit-client-local.yml
          name: audit-config-volume
          subPath: audit-local.yml
        - mountPath: /opsmx/conf/bootstrap.yml
          name: bootstrap-config-volume
          subPath: bootstrap.yml
        - mountPath: /opsmx/conf/standard-error-code.csv
          name: standard-error-conf
          subPath: standard-error-codes.csv
      volumes:
      - secret:
          items:
          - key: audit-local.yml
            path: audit-local.yml
          secretName: oes-audit-client-config
        name: audit-config-volume
      - name: bootstrap-config-volume
        secret:
          defaultMode: 420
          secretName: bootstrap
      - configMap:
          defaultMode: 420
          items:
          - key: standard-error-codes.csv
            path: standard-error-codes.csv
          name: standard-error-codes-config
        name: standard-error-conf
---
# Source: isdargo/templates/oes-audit/oes-auditservice-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
  labels:
    app: oes
    component: auditservice
    heritage: "Helm"
    release: "argoisd"
    chart: "isdargo-4.1.7"
  name: oes-audit-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: oes
      component: auditservice
  template:
    metadata:
      annotations:
        configmap/checksum: 44136fa355b3678a1146ad16f7e8649e94fb4fc21fe77e8310c060f61caaff8a
        prometheus.io/scrape: "false"
        prometheus_io_path: /mgmt/prometheus
        prometheus_io_port: "8097"
      labels:
        app: oes
        component: auditservice
        heritage: "Helm"
        release: "argoisd"
        chart: "isdargo-4.1.7"
    spec:
      initContainers:
      - name: db-check
        image: quay.io/opsmxpublic/pgchecker:v1
        command:
          - sh
          - -c
          - |
            echo 'Waiting for OES-DB to become ready...'
            until printf "." && nc -z -w 2 oes-db 5432; do
               sleep 2;
            done;
            echo 'OESDB OK ✓'
      containers:
      - image: quay.io/opsmxpublic/ubi8-oes-audit-service:v4.1.2
        imagePullPolicy: IfNotPresent
        name: oes-audit
        env:
        - name: JAVA_OPTS
          value: -Xmx512m
        ports:
        - containerPort: 8097
          name: backend
          protocol: TCP
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /mgmt/health
            port: 8097
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 60
          successThreshold: 1
          timeoutSeconds: 1
        readinessProbe:
          failureThreshold: 3
          initialDelaySeconds: 60
          periodSeconds: 10
          successThreshold: 1
          tcpSocket:
            port: 8097
          timeoutSeconds: 1
        volumeMounts:
        - mountPath: /opsmx/conf/audit-service-local.yml
          name: audit-config-volume
          subPath: audit-local.yml
        - mountPath: /opsmx/conf/bootstrap.yml
          name: bootstrap-config-volume
          subPath: bootstrap.yml
        - mountPath: /opsmx/conf/standard-error-code.csv
          name: standard-error-conf
          subPath: standard-error-codes.csv
      volumes:
      volumes:
      - secret:
          items:
          - key: audit-local.yml
            path: audit-local.yml
          secretName: oes-audit-service-config
        name: audit-config-volume
      - name: bootstrap-config-volume
        secret:
          defaultMode: 420
          secretName: bootstrap
      - configMap:
          defaultMode: 420
          items:
          - key: standard-error-codes.csv
            path: standard-error-codes.csv
          name: standard-error-codes-config
        name: standard-error-conf
---
# Source: isdargo/templates/oes-autopilot/oes-autopilot-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
  name: oes-autopilot
  labels:
    app: oes
    component: autopilot
    heritage: "Helm"
    release: "argoisd"
    chart: "isdargo-4.1.7"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: oes
      component: autopilot
  template:
    metadata:
      labels:
        app: oes
        component: autopilot
        heritage: "Helm"
        release: "argoisd"
        chart: "isdargo-4.1.7"
      annotations:
        configmap/checksum: 44136fa355b3678a1146ad16f7e8649e94fb4fc21fe77e8310c060f61caaff8a
        prometheus.io/scrape: "true"
        prometheus_io_path: /mgmt/prometheus
        prometheus_io_port: "8090"
    spec:
      volumes:
        - name: certs-volume
          secret:
            defaultMode: 420
            secretName: oes-control-secret
        - name: ca-certs-volume
          secret:
            defaultMode: 420
            secretName: ca-secret
        - name: autopilot-config-volume
          secret:
            secretName: oes-autopilot-config
        - secret:
            items:
            - key: bootstrap.yml
              path: bootstrap.yml
            secretName: bootstrap
          name: bootstrap-config-volume
        - configMap:
            defaultMode: 420
            items:
            - key: standard-error-codes.csv
              path: standard-error-codes.csv
            name: standard-error-codes-config
          name: standard-error-conf
      initContainers:
      - name: db-check
        image: quay.io/opsmxpublic/pgchecker:v1
        command:
          - sh
          - -c
          - |
            echo 'Waiting for OES-DB to become ready...'
            until printf "." && nc -z -w 2 oes-db 5432; do
               sleep 2;
            done;
            echo 'OESDB OK ✓'
      containers:
      - image: quay.io/opsmxpublic/ubi8-oes-autopilot:v4.1.6
        imagePullPolicy: IfNotPresent
        name: oes-autopilot
        env:
        - name: JAVA_OPTS
          value: -Xmx512m
        resources:
            {}
        ports:
        - containerPort: 8090
          name: backend
          protocol: TCP
        - containerPort: 9090
          name: metricfetcher
          protocol: TCP
        volumeMounts:
        - mountPath: /opsmx/conf/controller/ca.crt
          name: ca-certs-volume
          subPath: tls.crt
        - mountPath: /opsmx/conf/controller/tls.crt
          name: certs-volume
          subPath: tls.crt
        - mountPath: /opsmx/conf/controller/tls.key
          name: certs-volume
          subPath: tls.key
        - name: autopilot-config-volume
          mountPath: /opsmx/conf/autopilot.properties
          subPath: autopilot.properties
        - mountPath: /opsmx/conf/bootstrap.yml
          name: bootstrap-config-volume
          subPath: bootstrap.yml
        - mountPath: /opsmx/conf/standard-error-code.csv
          name: standard-error-conf
          subPath: standard-error-codes.csv
        readinessProbe:
          tcpSocket:
            port: 8090
          initialDelaySeconds: 60
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /mgmt/health
            port: 8090
          initialDelaySeconds: 120
          periodSeconds: 60
---
# Source: isdargo/templates/oes-dashboard/oes-dashboard-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
  labels:
    app: oes
    component: dashboard
    heritage: "Helm"
    release: "argoisd"
    chart: "isdargo-4.1.7"
  name: oes-dashboard
spec:
  replicas: 1
  selector:
    matchLabels:
      app: oes
      component: dashboard
  strategy: {}
  template:
    metadata:
      annotations:
        configmap/checksum: bfdbbd95b11053a548502713f0ae6f99111cd8f853d814981ca6ecf1c31231be
        prometheus.io/scrape: "true"
        prometheus_io_path: /mgmt/prometheus
        prometheus_io_port: "8094"
      labels:
        app: oes
        component: dashboard
        heritage: "Helm"
        release: "argoisd"
        chart: "isdargo-4.1.7"
    spec:
      containers:
      - image: quay.io/opsmxpublic/ubi8-oes-dashboard:v4.1.4
        name: oes-dashboard
        env:
        - name: JAVA_OPTS
          value: -Xmx512m
        ports:
        - containerPort: 8094
          protocol: TCP
        volumeMounts:
        - mountPath: /opsmx/conf/dashboard-local.yml
          name: dashboard-config
          subPath: dashboard-local.yml
        - mountPath: /opsmx/conf/bootstrap.yml
          name: bootstrap-config-volume
          subPath: bootstrap.yml
        - mountPath: /opsmx/conf/standard-error-code.csv
          name: standard-error-conf
          subPath: standard-error-codes.csv
        - mountPath: /opsmx/conf/feature.yml
          name: isd-feature-flag-conf
          subPath: feature.yml
        resources:
            {}
        readinessProbe:
          tcpSocket:
            port: 8094
          initialDelaySeconds: 10
          periodSeconds: 5
        livenessProbe:
          httpGet:
            path: /mgmt/health
            port: 8094
          initialDelaySeconds: 30
          periodSeconds: 60
      volumes:
      - configMap:
          defaultMode: 420
          items:
          - key: feature.yml
            path: feature.yml
          name: isd-feature-flag-config
        name: isd-feature-flag-conf
      - name: dashboard-config
        configMap:
          name: oes-dashboard-config
      - secret:
          items:
          - key: bootstrap.yml
            path: bootstrap.yml
          secretName: bootstrap
        name: bootstrap-config-volume
      - configMap:
          defaultMode: 420
          items:
          - key: standard-error-codes.csv
            path: standard-error-codes.csv
          name: standard-error-codes-config
        name: standard-error-conf
---
# Source: isdargo/templates/oes-datascience/oes-datascience-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
  labels:
    app: oes
    component: datascience
    heritage: "Helm"
    release: "argoisd"
    chart: "isdargo-4.1.7"
  name: oes-datascience
spec:
  replicas: 1
  selector:
    matchLabels:
      app: oes
      component: datascience
  template:
    metadata:
      annotations:
        configmap/checksum: 44136fa355b3678a1146ad16f7e8649e94fb4fc21fe77e8310c060f61caaff8a
        prometheus.io/scrape: "false"
        prometheus_io_path: /mgmt/prometheus
        prometheus_io_port: "5005"
      labels:
        app: oes
        component: datascience
        heritage: "Helm"
        release: "argoisd"
        chart: "isdargo-4.1.7"
    spec:
      initContainers:
      - name: db-check
        image: quay.io/opsmxpublic/pgchecker:v1
        command:
          - sh
          - -c
          - |
            echo 'Waiting for OES-DB to become ready...'
            until printf "." && nc -z -w 2 oes-db 5432; do
               sleep 2;
            done;
            echo 'OESDB OK ✓'
      containers:
      - image: quay.io/opsmxpublic/ubi8-oes-datascience:v4.1.2
        imagePullPolicy: IfNotPresent
        name: oes-datascience
        env:
        - name: JAVA_OPTS
          value: -Xmx512m
        ports:
        - containerPort: 5005
          name: backend
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          initialDelaySeconds: 60
          periodSeconds: 10
          successThreshold: 1
          tcpSocket:
            port: 5005
          timeoutSeconds: 1
        volumeMounts:
        - mountPath: /home/ubuntu/.aws/credentials
          name: datascience-config-volume
          subPath: minio-credentials
        - mountPath: /home/ubuntu/datascience/app_config.yaml
          name: datascience-config-volume
          subPath: app-config.yml
      volumes:
      - secret:
          secretName: oes-datascience-config
        name: datascience-config-volume
---
# Source: isdargo/templates/oes-gate/oes-gate-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
  labels:
    app: oes
    component: gate
    heritage: "Helm"
    release: "argoisd"
    chart: "isdargo-4.1.7"
  name: oes-gate
spec:
  replicas: 1
  selector:
    matchLabels:
      app: oes
      component: gate
  template:
    metadata:
      annotations:
        checksum/secret: 2b58b0ec3a49b6fdb32fe6034368b61f661551dd714597ed44888618b53477d9
        prometheus.io/scrape: "false"
        prometheus_io_path: /mgmt/prometheus
        prometheus_io_port: "8084"
      labels:
        app: oes
        component: gate
        heritage: "Helm"
        release: "argoisd"
        chart: "isdargo-4.1.7"
    spec:
      containers:
      - image: quay.io/opsmxpublic/ubi8-gate:v4.1.6
        name: oes-gate
        env:
        - name: spring_profiles_active
          value: vault,local
        - name: JAVA_OPTS
          value: -Xmx512m
        ports:
        - containerPort: 8084
          protocol: TCP
        resources:
            {}
        volumeMounts:
        - name: gate-volume
          mountPath: /opt/spinnaker/config/gate.yml
          subPath: gate.yml
        - mountPath: /opt/spinnaker/config/bootstrap.yml
          name: bootstrap-volume
          subPath: bootstrap.yml
        - mountPath: /opt/spinnaker/config/feature.yml
          name: isd-feature-flag-conf
          subPath: feature.yml
        readinessProbe:
          tcpSocket:
            port: 8084
          initialDelaySeconds: 60
          periodSeconds: 30
        livenessProbe:
          httpGet:
            path: /health
            port: 8084
          initialDelaySeconds: 60
          periodSeconds: 60
      volumes:
      - configMap:
          defaultMode: 420
          items:
          - key: feature.yml
            path: feature.yml
          name: isd-feature-flag-config
        name: isd-feature-flag-conf
      - name: gate-volume
        secret:
          secretName: oes-gate-config
      - secret:
          items:
          - key: bootstrap.yml
            path: bootstrap.yml
          secretName: bootstrap
        name: bootstrap-volume
---
# Source: isdargo/templates/oes-platform/oes-platform-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
  labels:
    app: oes
    component: platform
    heritage: "Helm"
    release: "argoisd"
    chart: "isdargo-4.1.7"
  name: oes-platform
spec:
  replicas: 1
  selector:
    matchLabels:
      app: oes
      component: platform
  strategy: {}
  template:
    metadata:
      annotations:
        checksum/secret: 65a188eeb4122222e02fcc0407e79f530bec2e7eebd7635a18412880ae83087b
        prometheus.io/scrape: "true"
        prometheus_io_path: /mgmt/prometheus
        prometheus_io_port: "8095"
      labels:
        app: oes
        component: platform
        heritage: "Helm"
        release: "argoisd"
        chart: "isdargo-4.1.7"
    spec:
      initContainers:
      - name: db-check
        image: quay.io/opsmxpublic/pgchecker:v1
        command:
          - sh
          - -c
          - |
            echo 'Waiting for OES-DB to become ready...'
            until printf "." && nc -z -w 2 oes-db 5432; do
               sleep 2;
            done;
            echo 'OESDB OK ✓'
      containers:
      - image: quay.io/opsmxpublic/ubi8-oes-platform:v4.1.6
        name: oes-platform
        env:
        - name: JAVA_OPTS
          value: -Xmx512m
        ports:
        - containerPort: 8095
          protocol: TCP
        resources:
            {}
        readinessProbe:
          tcpSocket:
            port: 8095
          initialDelaySeconds: 10
          periodSeconds: 5
        livenessProbe:
          httpGet:
            path: /mgmt/health
            port: 8095
          initialDelaySeconds: 60
          periodSeconds: 60
        volumeMounts:
        - mountPath: /opsmx/conf/platform-local.yml
          name: platform-config-volume
          subPath: platform-local.yml
        - mountPath: /opsmx/conf/bootstrap.yml
          name: bootstrap-config-volume
          subPath: bootstrap.yml
        - mountPath: /opsmx/conf/standard-error-code.csv
          name: standard-error-conf
          subPath: standard-error-codes.csv
      volumes:
      - name: platform-config-volume
        secret:
          secretName: oes-platform-config
      - secret:
          items:
          - key: bootstrap.yml
            path: bootstrap.yml
          secretName: bootstrap
        name: bootstrap-config-volume
      - configMap:
          defaultMode: 420
          items:
          - key: standard-error-codes.csv
            path: standard-error-codes.csv
          name: standard-error-codes-config
        name: standard-error-conf
---
# Source: isdargo/templates/oes-sapor/oes-sapor-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: oes
    component: sapor
    heritage: "Helm"
    release: "argoisd"
    chart: "isdargo-4.1.7"
  name: oes-sapor
spec:
  replicas: 1
  selector:
    matchLabels:
      app: oes
      component: sapor
  template:
    metadata:
      annotations:
        checksum/configmap: 4ae0af121f2660206becc2a1276a6e7a2a3592268b1bac456e49938fb4ef9c34
        checksum/configmap: 44136fa355b3678a1146ad16f7e8649e94fb4fc21fe77e8310c060f61caaff8a
        prometheus.io/scrape: "true"
        prometheus_io_path: /mgmt/prometheus
        prometheus_io_port: "8085"
      labels:
        app: oes
        component: sapor
        heritage: "Helm"
        release: "argoisd"
        chart: "isdargo-4.1.7"
    spec:
      initContainers:
      - name: db-check
        image: quay.io/opsmxpublic/pgchecker:v1
        command:
          - sh
          - -c
          - |
            echo 'Waiting for OES-DB to become ready...'
            until printf "." && nc -z -w 2 oes-db 5432; do
               sleep 2;
            done;
            echo 'OESDB OK ✓'
      containers:
      - image: quay.io/opsmxpublic/ubi8-oes-sapor:v4.1.6
        name: oes-sapor
        env:
        - name: JAVA_OPTS
          value: -Xmx512m
        ports:
        - containerPort: 8085
          protocol: TCP
        volumeMounts:
        - mountPath: /opt/opsmx/controller/ca.crt
          name: ca-certs-volume
          subPath: tls.crt
        - mountPath: /opt/opsmx/controller/cert/tls.crt
          name: certs-volume
          subPath: tls.crt
        - mountPath: /opt/opsmx/controller/cert/tls.key
          name: certs-volume
          subPath: tls.key
        - name: sapor-config-volume
          mountPath: /opt/opsmx/application.yml
          subPath: application.yml
        - mountPath: /opt/opsmx/bootstrap.yml
          name: bootstrap-config-volume
          subPath: bootstrap.yml
        - mountPath: /opsmx/conf/standard-error-code.csv
          name: standard-error-conf
          subPath: standard-error-codes.csv
        resources:
            {}
        readinessProbe:
          tcpSocket:
            port: 8085
          initialDelaySeconds: 60
          periodSeconds: 10
          failureThreshold: 10
        livenessProbe:
          httpGet:
            path: /mgmt/health
            port: 8085
          initialDelaySeconds: 60
          periodSeconds: 10
          failureThreshold: 10
      volumes:
      - secret:
          secretName: oes-control-secret
        name: certs-volume
      - secret:
          secretName: ca-secret
        name: ca-certs-volume
      - secret:
          secretName: oes-sapor-config
        name: sapor-config-volume
      - secret:
          items:
          - key: bootstrap.yml
            path: bootstrap.yml
          secretName: sapor-bootstrap
        name: bootstrap-config-volume
      - configMap:
          defaultMode: 420
          items:
          - key: standard-error-codes.csv
            path: standard-error-codes.csv
          name: standard-error-codes-config
        name: standard-error-conf
---
# Source: isdargo/templates/oes-ui/oes-ui-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: oes
    component: ui
    heritage: "Helm"
    release: "argoisd"
    chart: "isdargo-4.1.7"
  name: oes-ui
spec:
  replicas: 1
  selector:
    matchLabels:
      app: oes
      component: ui
  template:
    metadata:
      annotations:
        checksum/configmap: d884b8c12ed407b0e2ccff621c2ec92c193bdbaf13673ef473491437cae9a962
      labels:
        app: oes
        component: ui
        heritage: "Helm"
        release: "argoisd"
        chart: "isdargo-4.1.7"
    spec:
      containers:
      - image: quay.io/opsmxpublic/ubi8-oes-ui:v4.1.6
        name: oes-ui
        env:
        - name: JAVA_OPTS
          value: -Xmx512m
        ports:
        - containerPort: 8080
          protocol: TCP
        volumeMounts:
        - name: config-dir
          mountPath: /var/www/html/ui/assets/config/app-config.json
          subPath: app-config.json
        - name: config-dir
          mountPath: /var/www/html/ui/assets/config/help-text.json
          subPath: help-text.json
        - mountPath: /etc/nginx/nginx.conf
          name: nginx-config
          subPath: nginx-ap-only.conf
        readinessProbe:
          tcpSocket:
            port: 8093
          initialDelaySeconds: 15
          periodSeconds: 5
        livenessProbe:
          httpGet:
            path: /ui/indexl.html
            port: 8093
          initialDelaySeconds: 15
          periodSeconds: 5
      volumes:
      - configMap:
          defaultMode: 420
          name: oes-ui-config
        name: config-dir
      - configMap:
          defaultMode: 420
          name: oes-ui-nginxconf
        name: nginx-config
---
# Source: isdargo/templates/oes-visibility/oes-visibility-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: oes
    component: visibility
    heritage: "Helm"
    release: "argoisd"
    chart: "isdargo-4.1.7"
  name: oes-visibility
spec:
  replicas: 1
  selector:
    matchLabels:
      app: oes
      component: visibility
  strategy: {}
  template:
    metadata:
      annotations:
        configmap/checksum: 4bc045e18dbbf5885e9a3019147085e9e94b6dd4b139aa3f0a8de617afa278ca
        prometheus.io/scrape: "true"
        prometheus_io_path: /mgmt/prometheus
        prometheus_io_port: "8096"
      labels:
        app: oes
        component: visibility
        heritage: "Helm"
        release: "argoisd"
        chart: "isdargo-4.1.7"
    spec:
      initContainers:
      - name: db-check
        image: quay.io/opsmxpublic/pgchecker:v1
        command:
          - sh
          - -c
          - |
            echo 'Waiting for OES-DB to become ready...'
            until printf "." && nc -z -w 2 oes-db 5432; do
               sleep 2;
            done;
            echo 'OESDB OK ✓'
      containers:
      - image: quay.io/opsmxpublic/ubi8-oes-visibility:v4.1.2
        name: oes-visibility
        env:
        - name: JAVA_OPTS
          value: -Xmx512m
        ports:
        - containerPort: 8096
          protocol: TCP
        volumeMounts:
        - mountPath: /opsmx/conf/visibility-local.yml
          name: visibility-config
          subPath: visibility-local.yml
        - mountPath: /opsmx/conf/bootstrap.yml
          name: bootstrap-config-volume
          subPath: bootstrap.yml
        - mountPath: /opsmx/conf/standard-error-code.csv
          name: standard-error-conf
          subPath: standard-error-codes.csv
        resources:
            {}
        readinessProbe:
          tcpSocket:
            port: 8096
          initialDelaySeconds: 10
          periodSeconds: 5
        livenessProbe:
          httpGet:
            path: /mgmt/health
            port: 8096
          initialDelaySeconds: 30
          periodSeconds: 60
      volumes:
      - name: visibility-config
        secret:
          secretName: oes-visibility-config
      - secret:
          items:
          - key: bootstrap.yml
            path: bootstrap.yml
          secretName: bootstrap
        name: bootstrap-config-volume
      - configMap:
          defaultMode: 420
          items:
          - key: standard-error-codes.csv
            path: standard-error-codes.csv
          name: standard-error-codes-config
        name: standard-error-conf
---
# Source: isdargo/templates/rabbitmq/oes-rabbitmq-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: oes
    component: rabbitmq
    heritage: "Helm"
    release: "argoisd"
    chart: "isdargo-4.1.7"
  name: rabbitmq
spec:
  replicas: 1
  selector:
    matchLabels:
      app: oes
      component: rabbitmq
  template:
    metadata:
      annotations:
      labels:
        app: oes
        component: rabbitmq
        heritage: "Helm"
        release: "argoisd"
        chart: "isdargo-4.1.7"
    spec:
      containers:
      - image: quay.io/opsmxpublic/rabbitmq:3.11.4-management
        imagePullPolicy: IfNotPresent
        name: rabbitmq
        env:
        - name: JAVA_OPTS
          value: -Xmx512m
        ports:
        - containerPort: 5672
          protocol: TCP
        resources: {}
      restartPolicy: Always
      securityContext:
        fsGroup: 1000
---
# Source: isdargo/templates/vela/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: oes
    component: vela
    heritage: "Helm"
    release: "argoisd"
    chart: "isdargo-4.1.7"
  name: vela
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  selector:
    matchLabels:
      app: oes
      component: vela
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: oes
        component: vela
        heritage: "Helm"
        release: "argoisd"
        chart: "isdargo-4.1.7"
      annotations:
        checksum/secret: fa77d4655bcffb32ab94bf13b9e5b4d822b310356ef02be6aa32395c4c95cc7e
    spec:
      volumes:
      - name: vela-volume
        configMap:
          name: vela-config
          items:
            - key: vela-api.yaml
              path: vela-api.yaml
          defaultMode: 420
      - name: gate-volume
        secret:
          secretName: oes-gate-config
          defaultMode: 420
      containers:
      - image: quay.io/opsmxpublic/vela-api:v1.4.6
        imagePullPolicy: IfNotPresent
        name: vela
        ports:
        - containerPort: 8092
          protocol: TCP
        volumeMounts:
          - name: vela-volume
            mountPath: /app/config/vela-api.yaml
            subPath: vela-api.yaml
          - name: gate-volume
            mountPath: /opt/spinnaker/config/gate.yml
            subPath: gate.yml
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
---
# Source: isdargo/charts/redis/templates/redis-master-statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: argoisd-redis-master
  labels:
    app: redis
    chart: redis-10.5.3
    release: argoisd
    heritage: Helm
spec:
  selector:
    matchLabels:
      app: redis
      release: argoisd
      role: master
  serviceName: argoisd-redis-headless
  template:
    metadata:
      labels:
        app: redis
        chart: redis-10.5.3
        release: argoisd
        role: master
      annotations:
        checksum/health: 771a7687d1f5d616d39d687608d8e064c3a4c50254fb3e606847e027c23ff522
        checksum/configmap: 287f1874b5c043188fd39a2ae566461ebdd9e17c590cd6b85bcbf298e64a81e8
        checksum/secret: ad5ff42eda7eea7597e2d091bd63eaf940aee3297f67171bc4bf3c53086055d8
        moniker.spinnaker.io/application: spin
    spec:      
      securityContext:
        fsGroup: 1001
      serviceAccountName: "default"
      containers:
      - name: argoisd-redis
        image: "quay.io/opsmxpublic/bitnami-redis:5.0.7-debian-10-r0"
        imagePullPolicy: "IfNotPresent"
        securityContext:
          runAsUser: 1001
        command:
        - /bin/bash
        - -c
        - |
          if [[ -n $REDIS_PASSWORD_FILE ]]; then
            password_aux=`cat ${REDIS_PASSWORD_FILE}`
            export REDIS_PASSWORD=$password_aux
          fi
          if [[ ! -f /opt/bitnami/redis/etc/master.conf ]];then
            cp /opt/bitnami/redis/mounted-etc/master.conf /opt/bitnami/redis/etc/master.conf
          fi
          if [[ ! -f /opt/bitnami/redis/etc/redis.conf ]];then
            cp /opt/bitnami/redis/mounted-etc/redis.conf /opt/bitnami/redis/etc/redis.conf
          fi
          ARGS=("--port" "${REDIS_PORT}")
          ARGS+=("--requirepass" "${REDIS_PASSWORD}")
          ARGS+=("--masterauth" "${REDIS_PASSWORD}")
          ARGS+=("--include" "/opt/bitnami/redis/etc/redis.conf")
          ARGS+=("--include" "/opt/bitnami/redis/etc/master.conf")
          /run.sh ${ARGS[@]}
        env:
        - name: REDIS_REPLICATION_MODE
          value: master
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: argoisd-redis
              key: redis-password
        - name: REDIS_PORT
          value: "6379"
        ports:
        - name: redis
          containerPort: 6379
        livenessProbe:
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 5
          exec:
            command:
            - sh
            - -c
            - /health/ping_liveness_local.sh 5
        readinessProbe:
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 1
          successThreshold: 1
          failureThreshold: 5
          exec:
            command:
            - sh
            - -c
            - /health/ping_readiness_local.sh 5
        resources:
          null
        volumeMounts:
        - name: health
          mountPath: /health
        - name: redis-data
          mountPath: /data
          subPath: 
        - name: config
          mountPath: /opt/bitnami/redis/mounted-etc
        - name: redis-tmp-conf
          mountPath: /opt/bitnami/redis/etc/
      volumes:
      - name: health
        configMap:
          name: argoisd-redis-health
          defaultMode: 0755
      - name: config
        configMap:
          name: argoisd-redis
      - name: redis-tmp-conf
        emptyDir: {}
  volumeClaimTemplates:
    - metadata:
        name: redis-data
        labels:
          app: redis
          release: argoisd
          heritage: Helm
          component: master
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: "8Gi"
        
        selector:
  updateStrategy:
    type: RollingUpdate
---
# Source: isdargo/templates/oes-db/oes-db-statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: oes
    component: db
    heritage: "Helm"
    release: "argoisd"
    chart: "isdargo-4.1.7"
  name: oes-db
spec:
  podManagementPolicy: OrderedReady
  replicas: 1
  serviceName: oes-db
  selector:
    matchLabels:
      app: oes
      component: db
  template:
    metadata:
      annotations:
      labels:
        app: oes
        component: db
        heritage: "Helm"
        release: "argoisd"
        chart: "isdargo-4.1.7"
    spec:
      containers:
      - image: quay.io/opsmxpublic/ubi8-oes-db:v3.0.0
        imagePullPolicy: IfNotPresent
        name: oes-db
        lifecycle:
          preStop:
            exec:
              command:
              - /bin/sh
              - /opt/opsmx/bin/stop.sh
        ports:
        - containerPort: 5432
          protocol: TCP
        volumeMounts:
        - mountPath: "/var/lib/pgsql-pv"
          name: oes-db-postgresql
        readinessProbe:
          tcpSocket:
            port: 5432
          initialDelaySeconds: 10
          periodSeconds: 5
      securityContext:
        fsGroup: 1000
  volumeClaimTemplates:
  - metadata:
      creationTimestamp: null
      labels:
        app: oes
        component: db
      name: oes-db-postgresql
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 8Gi
      volumeMode: Filesystem
---
# Source: isdargo/templates/forwarder/create-controller-secret.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: create-controller-secret
spec:
 template:
    spec:
       containers:
       - name: create-secret-container
         image: quay.io/opsmxpublic/create-secret:v20211127T140816
         env:
         - name: NAMESPACE
           valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
         args:
         - "$(NAMESPACE)"
       restartPolicy: Never
       serviceAccount: create-controller-secret
---
# Source: isdargo/templates/ingress/oes-ui-ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    acme.cert-manager.io/http01-edit-in-place: "true"
    cert-manager.io/issue-temporary-certificate: "true"
    cert-manager.io/issuer: letsencrypt-argoisd-oes
    kubernetes.io/tls-acme: "true"
    kubernetes.io/ingress.class: nginx
  name: oes-ui-ingress
spec:
  rules:
  - host: argoisd.hyd-dev.opsmx.net
    http:
      paths:
      - backend:
          service:
            name: oes-ui
            port:
              number: 8093
        path: /
        pathType: ImplementationSpecific
  tls:
  - hosts:
    - argoisd.hyd-dev.opsmx.net
    secretName: oes-ui-ingress
---
# Source: isdargo/templates/vela/vela-ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/tls-acme: "true"
    ingress.kubernetes.io/ssl-redirect: "true"
    kubernetes.io/ingress.class: nginx
  name: vela-ingress
spec:
  rules:
  - host: '*.argoisdvela.hyd-dev.opsmx.net'
    http:
      paths:
      - backend:
          service:
            name: vela
            port:
              number: 8092
        path: /
        pathType: ImplementationSpecific
  tls:
  - hosts:
    - '*.argoisdvela.hyd-dev.opsmx.net'
    secretName: vela-ingress
---
# Source: isdargo/templates/ingress/clusterissuer.yaml
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: letsencrypt-argoisd-argocd
spec:
  acme:
    email: srinivas@opsmx.io
    preferredChain: ""
    privateKeySecretRef:
      name: demo-authtls
    server: https://acme-v02.api.letsencrypt.org/directory
    solvers:
    - http01:
        ingress:
          class: nginx
---
# Source: isdargo/templates/ingress/Issuer.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: letsencrypt-argoisd-oes
spec:
  acme:
    email: srinivas@opsmx.io
    preferredChain: ""
    privateKeySecretRef:
      name: demo-authtls
    server: https://acme-v02.api.letsencrypt.org/directory
    solvers:
    - http01:
        ingress:
          class: nginx
---
# Source: isdargo/charts/minio/templates/post-install-create-bucket-job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: argoisd-minio-make-bucket-job
  labels:
    app: minio-make-bucket-job
    chart: minio-8.0.9
    release: argoisd
    heritage: Helm
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-delete-policy": hook-succeeded,before-hook-creation
spec:
  template:
    metadata:
      labels:
        app: minio-job
        release: argoisd
    spec:
      restartPolicy: OnFailure      
      volumes:
        - name: minio-configuration
          projected:
            sources:
            - configMap:
                name: argoisd-minio
            - secret:
                name: argoisd-minio
      serviceAccountName: "argoisd-minio"
      containers:
      - name: minio-mc
        image: "minio/mc:RELEASE.2020-11-25T23-04-07Z"
        imagePullPolicy: IfNotPresent
        command: ["/bin/sh", "/config/initialize"]
        env:
          - name: MINIO_ENDPOINT
            value: argoisd-minio
          - name: MINIO_PORT
            value: "9000"
        volumeMounts:
          - name: minio-configuration
            mountPath: /config
        resources:
          requests:
            memory: 128Mi
